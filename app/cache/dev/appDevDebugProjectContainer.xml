<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/Users/michael/Documents/workspace/bamboo/app</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">app</parameter>
    <parameter key="kernel.cache_dir">/Users/michael/Documents/workspace/bamboo/app/cache/dev</parameter>
    <parameter key="kernel.logs_dir">/Users/michael/Documents/workspace/bamboo/app/logs</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="ElcodiCartBundle">Elcodi\Bundle\CartBundle\ElcodiCartBundle</parameter>
      <parameter key="ElcodiCouponBundle">Elcodi\Bundle\CouponBundle\ElcodiCouponBundle</parameter>
      <parameter key="ElcodiRuleBundle">Elcodi\Bundle\RuleBundle\ElcodiRuleBundle</parameter>
      <parameter key="ElcodiCoreBundle">Elcodi\Bundle\CoreBundle\ElcodiCoreBundle</parameter>
      <parameter key="ElcodiCurrencyBundle">Elcodi\Bundle\CurrencyBundle\ElcodiCurrencyBundle</parameter>
      <parameter key="ElcodiLanguageBundle">Elcodi\Bundle\LanguageBundle\ElcodiLanguageBundle</parameter>
      <parameter key="ElcodiMediaBundle">Elcodi\Bundle\MediaBundle\ElcodiMediaBundle</parameter>
      <parameter key="DoctrineCacheBundle">Doctrine\Bundle\DoctrineCacheBundle\DoctrineCacheBundle</parameter>
      <parameter key="ElcodiGeoBundle">Elcodi\Bundle\GeoBundle\ElcodiGeoBundle</parameter>
      <parameter key="KnpGaufretteBundle">Knp\Bundle\GaufretteBundle\KnpGaufretteBundle</parameter>
      <parameter key="ElcodiAttributeBundle">Elcodi\Bundle\AttributeBundle\ElcodiAttributeBundle</parameter>
      <parameter key="ElcodiStoreBundle">Elcodi\Bundle\StoreBundle\ElcodiStoreBundle</parameter>
      <parameter key="ElcodiUserBundle">Elcodi\Bundle\UserBundle\ElcodiUserBundle</parameter>
      <parameter key="ElcodiProductBundle">Elcodi\Bundle\ProductBundle\ElcodiProductBundle</parameter>
      <parameter key="ElcodiStateTransitionMachineBundle">Elcodi\Bundle\StateTransitionMachineBundle\ElcodiStateTransitionMachineBundle</parameter>
      <parameter key="ElcodiShippingBundle">Elcodi\Bundle\ShippingBundle\ElcodiShippingBundle</parameter>
      <parameter key="PaymentCoreBundle">PaymentSuite\PaymentCoreBundle\PaymentCoreBundle</parameter>
      <parameter key="ElcodiPaymentSuiteBridgeBundle">Elcodi\Bridge\PaymentSuiteBridgeBundle\ElcodiPaymentSuiteBridgeBundle</parameter>
      <parameter key="PaypalWebCheckoutBundle">PaymentSuite\PaypalWebCheckoutBundle\PaypalWebCheckoutBundle</parameter>
      <parameter key="FreePaymentBundle">PaymentSuite\FreePaymentBundle\FreePaymentBundle</parameter>
      <parameter key="StripeBundle">PaymentSuite\StripeBundle\StripeBundle</parameter>
      <parameter key="ElcodiZoneBundle">Elcodi\Bundle\ZoneBundle\ElcodiZoneBundle</parameter>
      <parameter key="ElcodiTaxBundle">Elcodi\Bundle\TaxBundle\ElcodiTaxBundle</parameter>
      <parameter key="ElcodiEntityTranslatorBundle">Elcodi\Bundle\EntityTranslatorBundle\ElcodiEntityTranslatorBundle</parameter>
      <parameter key="ElcodiMenuBundle">Elcodi\Bundle\MenuBundle\ElcodiMenuBundle</parameter>
      <parameter key="ElcodiPluginBundle">Elcodi\Bundle\PluginBundle\ElcodiPluginBundle</parameter>
      <parameter key="BankwireBundle">PaymentSuite\BankwireBundle\BankwireBundle</parameter>
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="AsseticBundle">Symfony\Bundle\AsseticBundle\AsseticBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="DoctrineFixturesBundle">Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="OrnicarGravatarBundle">Ornicar\GravatarBundle\OrnicarGravatarBundle</parameter>
      <parameter key="HWIOAuthBundle">HWI\Bundle\OAuthBundle\HWIOAuthBundle</parameter>
      <parameter key="SncRedisBundle">Snc\RedisBundle\SncRedisBundle</parameter>
      <parameter key="JMSI18nRoutingBundle">JMS\I18nRoutingBundle\JMSI18nRoutingBundle</parameter>
      <parameter key="ControllerExtraBundle">Mmoreram\ControllerExtraBundle\ControllerExtraBundle</parameter>
      <parameter key="CacheFlushBundle">Mmoreram\CacheFlushBundle\CacheFlushBundle</parameter>
      <parameter key="HttpHeadersBundle">Mmoreram\HttpHeadersBundle\HttpHeadersBundle</parameter>
      <parameter key="ElcodiCartCouponBundle">Elcodi\Bundle\CartCouponBundle\ElcodiCartCouponBundle</parameter>
      <parameter key="ElcodiBannerBundle">Elcodi\Bundle\BannerBundle\ElcodiBannerBundle</parameter>
      <parameter key="ElcodiNewsletterBundle">Elcodi\Bundle\NewsletterBundle\ElcodiNewsletterBundle</parameter>
      <parameter key="ElcodiPageBundle">Elcodi\Bundle\PageBundle\ElcodiPageBundle</parameter>
      <parameter key="ElcodiMetricBundle">Elcodi\Bundle\MetricBundle\ElcodiMetricBundle</parameter>
      <parameter key="ElcodiCommentBundle">Elcodi\Bundle\CommentBundle\ElcodiCommentBundle</parameter>
      <parameter key="ElcodiCartShippingBundle">Elcodi\Bundle\CartShippingBundle\ElcodiCartShippingBundle</parameter>
      <parameter key="ElcodiSitemapBundle">Elcodi\Bundle\SitemapBundle\ElcodiSitemapBundle</parameter>
      <parameter key="ElcodiPaymentBundle">Elcodi\Bundle\PaymentBundle\ElcodiPaymentBundle</parameter>
      <parameter key="StoreCoreBundle">Elcodi\Store\CoreBundle\StoreCoreBundle</parameter>
      <parameter key="StoreProductBundle">Elcodi\Store\ProductBundle\StoreProductBundle</parameter>
      <parameter key="StoreUserBundle">Elcodi\Store\UserBundle\StoreUserBundle</parameter>
      <parameter key="StoreGeoBundle">Elcodi\Store\GeoBundle\StoreGeoBundle</parameter>
      <parameter key="StoreCartBundle">Elcodi\Store\CartBundle\StoreCartBundle</parameter>
      <parameter key="StoreCurrencyBundle">Elcodi\Store\CurrencyBundle\StoreCurrencyBundle</parameter>
      <parameter key="StoreCartCouponBundle">Elcodi\Store\CartCouponBundle\StoreCartCouponBundle</parameter>
      <parameter key="StoreConnectBundle">Elcodi\Store\ConnectBundle\StoreConnectBundle</parameter>
      <parameter key="StoreMetricBundle">Elcodi\Store\MetricBundle\StoreMetricBundle</parameter>
      <parameter key="StorePageBundle">Elcodi\Store\PageBundle\StorePageBundle</parameter>
      <parameter key="StoreLanguageBundle">Elcodi\Store\LanguageBundle\StoreLanguageBundle</parameter>
      <parameter key="StoreOverrideBundle">Elcodi\Store\OverrideBundle\StoreOverrideBundle</parameter>
      <parameter key="StoreFallbackBundle">Elcodi\Store\FallbackBundle\StoreFallbackBundle</parameter>
      <parameter key="AdminCoreBundle">Elcodi\Admin\CoreBundle\AdminCoreBundle</parameter>
      <parameter key="AdminUserBundle">Elcodi\Admin\UserBundle\AdminUserBundle</parameter>
      <parameter key="AdminAttributeBundle">Elcodi\Admin\AttributeBundle\AdminAttributeBundle</parameter>
      <parameter key="AdminBannerBundle">Elcodi\Admin\BannerBundle\AdminBannerBundle</parameter>
      <parameter key="AdminCartBundle">Elcodi\Admin\CartBundle\AdminCartBundle</parameter>
      <parameter key="AdminCouponBundle">Elcodi\Admin\CouponBundle\AdminCouponBundle</parameter>
      <parameter key="AdminCurrencyBundle">Elcodi\Admin\CurrencyBundle\AdminCurrencyBundle</parameter>
      <parameter key="AdminLanguageBundle">Elcodi\Admin\LanguageBundle\AdminLanguageBundle</parameter>
      <parameter key="AdminMediaBundle">Elcodi\Admin\MediaBundle\AdminMediaBundle</parameter>
      <parameter key="AdminNewsletterBundle">Elcodi\Admin\NewsletterBundle\AdminNewsletterBundle</parameter>
      <parameter key="AdminProductBundle">Elcodi\Admin\ProductBundle\AdminProductBundle</parameter>
      <parameter key="AdminPageBundle">Elcodi\Admin\PageBundle\AdminPageBundle</parameter>
      <parameter key="AdminTemplateBundle">Elcodi\Admin\TemplateBundle\AdminTemplateBundle</parameter>
      <parameter key="AdminMetricBundle">Elcodi\Admin\MetricBundle\AdminMetricBundle</parameter>
      <parameter key="AdminPluginBundle">Elcodi\Admin\PluginBundle\AdminPluginBundle</parameter>
      <parameter key="AdminShippingBundle">Elcodi\Admin\ShippingBundle\AdminShippingBundle</parameter>
      <parameter key="AdminGeoBundle">Elcodi\Admin\GeoBundle\AdminGeoBundle</parameter>
      <parameter key="AdminPaymentBundle">Elcodi\Admin\PaymentBundle\AdminPaymentBundle</parameter>
      <parameter key="AdminStoreBundle">Elcodi\Admin\StoreBundle\AdminStoreBundle</parameter>
      <parameter key="ElcodiFirewallBundle">Elcodi\Common\FirewallBundle\ElcodiFirewallBundle</parameter>
      <parameter key="ElcodiCommonBundle">Elcodi\Common\CommonBundle\ElcodiCommonBundle</parameter>
      <parameter key="ElcodiGoogleAnalyticsBundle">Elcodi\Plugin\GoogleAnalyticsBundle\ElcodiGoogleAnalyticsBundle</parameter>
      <parameter key="ElcodiPinterestBundle">Elcodi\Plugin\PinterestBundle\ElcodiPinterestBundle</parameter>
      <parameter key="ElcodiProductCsvBundle">Elcodi\Plugin\ProductCsvBundle\ElcodiProductCsvBundle</parameter>
      <parameter key="ElcodiStoreSetupWizardBundle">Elcodi\Plugin\StoreSetupWizardBundle\ElcodiStoreSetupWizardBundle</parameter>
      <parameter key="ElcodiDisqusBundle">Elcodi\Plugin\DisqusBundle\ElcodiDisqusBundle</parameter>
      <parameter key="ElcodiTwitterBundle">Elcodi\Plugin\TwitterBundle\ElcodiTwitterBundle</parameter>
      <parameter key="ElcodiFacebookBundle">Elcodi\Plugin\FacebookBundle\ElcodiFacebookBundle</parameter>
      <parameter key="StoreTemplateBundle">Elcodi\Plugin\StoreTemplateBundle\StoreTemplateBundle</parameter>
      <parameter key="ElcodiPaypalWebCheckoutBundle">Elcodi\Plugin\PaypalWebCheckoutBundle\ElcodiPaypalWebCheckoutBundle</parameter>
      <parameter key="ElcodiFreePaymentBundle">Elcodi\Plugin\FreePaymentBundle\ElcodiFreePaymentBundle</parameter>
      <parameter key="ElcodiStripeBundle">Elcodi\Plugin\StripeBundle\ElcodiStripeBundle</parameter>
      <parameter key="ElcodiCustomShippingBundle">Elcodi\Plugin\CustomShippingBundle\ElcodiCustomShippingBundle</parameter>
      <parameter key="ElcodiBankwireBundle">Elcodi\Plugin\BankwireBundle\ElcodiBankwireBundle</parameter>
      <parameter key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</parameter>
      <parameter key="FOSRestBundle">FOS\RestBundle\FOSRestBundle</parameter>
      <parameter key="SensioGeneratorBundle">Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle</parameter>
      <parameter key="UserBundle">Best365\Store\UserBundle\UserBundle</parameter>
      <parameter key="ElcodiFixturesBoosterBundle">Elcodi\Bundle\FixturesBoosterBundle\ElcodiFixturesBoosterBundle</parameter>
      <parameter key="BehatBridgeBundle">Elcodi\Bridge\BehatBridgeBundle\BehatBridgeBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="SensioDistributionBundle">Sensio\Bundle\DistributionBundle\SensioDistributionBundle</parameter>
      <parameter key="VisithorBundle">Visithor\Bundle\VisithorBundle</parameter>
      <parameter key="ElcodiVisithorBridgeBundle">Elcodi\Bridge\VisithorBridgeBundle\ElcodiVisithorBridgeBundle</parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">appDevDebugProjectContainer</parameter>
    <parameter key="locale">en</parameter>
    <parameter key="database_driver">pdo_mysql</parameter>
    <parameter key="database_host">127.0.0.1</parameter>
    <parameter key="database_port">null</parameter>
    <parameter key="database_name">bamboo</parameter>
    <parameter key="database_user">root</parameter>
    <parameter key="database_password">123456</parameter>
    <parameter key="mailer_transport">smtp</parameter>
    <parameter key="mailer_host">127.0.0.1</parameter>
    <parameter key="mailer_user">null</parameter>
    <parameter key="mailer_password">null</parameter>
    <parameter key="mailer_port">null</parameter>
    <parameter key="secret">4acbc300e57d46cb58ac0c629945c17b727f99c8</parameter>
    <parameter key="use_assetic_controller">false</parameter>
    <parameter key="debug_toolbar">true</parameter>
    <parameter key="debug_redirects">false</parameter>
    <parameter key="paypal_web_checkout_recipient">payment-test-facilitator@elcodi.com</parameter>
    <parameter key="bamboo_social_github_client_id">github-client-id</parameter>
    <parameter key="bamboo_social_github_client_secret">github-client-secret</parameter>
    <parameter key="bamboo_social_paypal_client_id">paypal-client-id</parameter>
    <parameter key="bamboo_social_paypal_client_secret">paypal-client-secret</parameter>
    <parameter key="bamboo_social_paypal_client_is_sandbox">true</parameter>
    <parameter key="bamboo_admin_prefix">admin</parameter>
    <parameter key="bamboo_api_prefix">api</parameter>
    <parameter key="bamboo_store_firewall">store_area</parameter>
    <parameter key="database_path">null</parameter>
    <parameter key="elcodi.entity.cart.class">Elcodi\Component\Cart\Entity\Cart</parameter>
    <parameter key="elcodi.entity.cart.mapping_file">@ElcodiCartBundle/Resources/config/doctrine/Cart.orm.yml</parameter>
    <parameter key="elcodi.entity.cart.manager">default</parameter>
    <parameter key="elcodi.entity.cart.enabled">true</parameter>
    <parameter key="elcodi.entity.order.class">Elcodi\Component\Cart\Entity\Order</parameter>
    <parameter key="elcodi.entity.order.mapping_file">@ElcodiCartBundle/Resources/config/doctrine/Order.orm.yml</parameter>
    <parameter key="elcodi.entity.order.manager">default</parameter>
    <parameter key="elcodi.entity.order.enabled">true</parameter>
    <parameter key="elcodi.entity.cart_line.class">Elcodi\Component\Cart\Entity\CartLine</parameter>
    <parameter key="elcodi.entity.cart_line.mapping_file">@ElcodiCartBundle/Resources/config/doctrine/CartLine.orm.yml</parameter>
    <parameter key="elcodi.entity.cart_line.manager">default</parameter>
    <parameter key="elcodi.entity.cart_line.enabled">true</parameter>
    <parameter key="elcodi.entity.order_line.class">Elcodi\Component\Cart\Entity\OrderLine</parameter>
    <parameter key="elcodi.entity.order_line.mapping_file">@ElcodiCartBundle/Resources/config/doctrine/OrderLine.orm.yml</parameter>
    <parameter key="elcodi.entity.order_line.manager">default</parameter>
    <parameter key="elcodi.entity.order_line.enabled">true</parameter>
    <parameter key="elcodi.cart_save_in_session">true</parameter>
    <parameter key="elcodi.cart_session_field_name">cart_id</parameter>
    <parameter key="elcodi.order_payment_states_machine_states" type="collection">
      <parameter type="collection">
        <parameter>unpaid</parameter>
        <parameter>pay</parameter>
        <parameter>paid</parameter>
      </parameter>
      <parameter type="collection">
        <parameter>paid</parameter>
        <parameter>refund</parameter>
        <parameter>refunded</parameter>
      </parameter>
    </parameter>
    <parameter key="elcodi.order_payment_states_machine_identifier">order_payment_states_machine</parameter>
    <parameter key="elcodi.order_payment_states_machine_point_of_entry">unpaid</parameter>
    <parameter key="elcodi.order_shipping_states_machine_states" type="collection">
      <parameter type="collection">
        <parameter>preparing</parameter>
        <parameter>order ready</parameter>
        <parameter>processed</parameter>
      </parameter>
      <parameter type="collection">
        <parameter>processed</parameter>
        <parameter>picked up by carrier</parameter>
        <parameter>in delivery</parameter>
      </parameter>
      <parameter type="collection">
        <parameter>processed</parameter>
        <parameter>picked up on store</parameter>
        <parameter>delivered</parameter>
      </parameter>
      <parameter type="collection">
        <parameter>in delivery</parameter>
        <parameter>delivered</parameter>
        <parameter>delivered</parameter>
      </parameter>
      <parameter type="collection">
        <parameter>preparing</parameter>
        <parameter>cancel</parameter>
        <parameter>cancelled</parameter>
      </parameter>
      <parameter type="collection">
        <parameter>processed</parameter>
        <parameter>cancel</parameter>
        <parameter>cancelled</parameter>
      </parameter>
      <parameter type="collection">
        <parameter>in delivery</parameter>
        <parameter>cancel</parameter>
        <parameter>cancelled</parameter>
      </parameter>
      <parameter type="collection">
        <parameter>in delivery</parameter>
        <parameter>return</parameter>
        <parameter>returned</parameter>
      </parameter>
      <parameter type="collection">
        <parameter>delivered</parameter>
        <parameter>return</parameter>
        <parameter>returned</parameter>
      </parameter>
    </parameter>
    <parameter key="elcodi.order_shipping_states_machine_identifier">order_shipping_states_machine</parameter>
    <parameter key="elcodi.order_shipping_states_machine_point_of_entry">preparing</parameter>
    <parameter key="elcodi.entity.coupon.class">Elcodi\Component\Coupon\Entity\Coupon</parameter>
    <parameter key="elcodi.entity.coupon.mapping_file">@ElcodiCouponBundle/Resources/config/doctrine/Coupon.orm.yml</parameter>
    <parameter key="elcodi.entity.coupon.manager">default</parameter>
    <parameter key="elcodi.entity.coupon.enabled">true</parameter>
    <parameter key="elcodi.entity.rule.class">Elcodi\Component\Rule\Entity\Rule</parameter>
    <parameter key="elcodi.entity.rule.mapping_file">@ElcodiRuleBundle/Resources/config/doctrine/Rule.orm.yml</parameter>
    <parameter key="elcodi.entity.rule.manager">default</parameter>
    <parameter key="elcodi.entity.rule.enabled">true</parameter>
    <parameter key="elcodi.mapping_implementations" type="collection">
      <parameter key="Elcodi\Plugin\CustomShippingBundle\Entity\Interfaces\CarrierInterface">Elcodi\Plugin\CustomShippingBundle\Entity\Carrier</parameter>
      <parameter key="Elcodi\Plugin\CustomShippingBundle\Entity\Interfaces\ShippingRangeInterface">Elcodi\Plugin\CustomShippingBundle\Entity\ShippingRange</parameter>
      <parameter key="Elcodi\Store\ConnectBundle\Entity\AuthorizationInterface">Elcodi\Store\ConnectBundle\Entity\Authorization</parameter>
      <parameter key="Elcodi\Component\Comment\Entity\Interfaces\CommentInterface">Elcodi\Component\Comment\Entity\Comment</parameter>
      <parameter key="Elcodi\Component\Comment\Entity\Interfaces\VoteInterface">Elcodi\Component\Comment\Entity\Vote</parameter>
      <parameter key="Elcodi\Component\Metric\Core\Entity\Interfaces\EntryInterface">Elcodi\Component\Metric\Core\Entity\Entry</parameter>
      <parameter key="Elcodi\Component\Page\Entity\Interfaces\PageInterface">Elcodi\Component\Page\Entity\Page</parameter>
      <parameter key="Elcodi\Component\Newsletter\Entity\Interfaces\NewsletterSubscriptionInterface">Elcodi\Component\Newsletter\Entity\NewsletterSubscription</parameter>
      <parameter key="Elcodi\Component\Banner\Entity\Interfaces\BannerInterface">Elcodi\Component\Banner\Entity\Banner</parameter>
      <parameter key="Elcodi\Component\Banner\Entity\Interfaces\BannerZoneInterface">Elcodi\Component\Banner\Entity\BannerZone</parameter>
      <parameter key="Elcodi\Component\CartCoupon\Entity\Interfaces\CartCouponInterface">Elcodi\Component\CartCoupon\Entity\CartCoupon</parameter>
      <parameter key="Elcodi\Component\CartCoupon\Entity\Interfaces\OrderCouponInterface">Elcodi\Component\CartCoupon\Entity\OrderCoupon</parameter>
      <parameter key="Elcodi\Component\Menu\Entity\Menu\Interfaces\NodeInterface">Elcodi\Component\Menu\Entity\Menu\Node</parameter>
      <parameter key="Elcodi\Component\Menu\Entity\Menu\Interfaces\MenuInterface">Elcodi\Component\Menu\Entity\Menu\Menu</parameter>
      <parameter key="Elcodi\Component\EntityTranslator\Entity\Interfaces\EntityTranslationInterface">Elcodi\Component\EntityTranslator\Entity\EntityTranslation</parameter>
      <parameter key="Elcodi\Component\Tax\Entity\Interfaces\TaxInterface">Elcodi\Component\Tax\Entity\Tax</parameter>
      <parameter key="Elcodi\Component\Zone\Entity\Interfaces\ZoneInterface">Elcodi\Component\Zone\Entity\Zone</parameter>
      <parameter key="Elcodi\Component\StateTransitionMachine\Entity\Interfaces\StateLineInterface">Elcodi\Component\StateTransitionMachine\Entity\StateLine</parameter>
      <parameter key="Elcodi\Component\Product\Entity\Interfaces\PurchasableInterface">Elcodi\Component\Product\Entity\Purchasable</parameter>
      <parameter key="Elcodi\Component\Product\Entity\Interfaces\ProductInterface">Elcodi\Component\Product\Entity\Product</parameter>
      <parameter key="Elcodi\Component\Product\Entity\Interfaces\VariantInterface">Elcodi\Component\Product\Entity\Variant</parameter>
      <parameter key="Elcodi\Component\Product\Entity\Interfaces\PackInterface">Elcodi\Component\Product\Entity\Pack</parameter>
      <parameter key="Elcodi\Component\Product\Entity\Interfaces\ManufacturerInterface">Elcodi\Component\Product\Entity\Manufacturer</parameter>
      <parameter key="Elcodi\Component\Product\Entity\Interfaces\CategoryInterface">Elcodi\Component\Product\Entity\Category</parameter>
      <parameter key="Elcodi\Component\User\Entity\Interfaces\CustomerInterface">Elcodi\Component\User\Entity\Customer</parameter>
      <parameter key="Elcodi\Component\User\Entity\Interfaces\AdminUserInterface">Elcodi\Component\User\Entity\AdminUser</parameter>
      <parameter key="Elcodi\Component\Store\Entity\Interfaces\StoreInterface">Elcodi\Component\Store\Entity\Store</parameter>
      <parameter key="Elcodi\Component\Attribute\Entity\Interfaces\AttributeInterface">Elcodi\Component\Attribute\Entity\Attribute</parameter>
      <parameter key="Elcodi\Component\Attribute\Entity\Interfaces\ValueInterface">Elcodi\Component\Attribute\Entity\Value</parameter>
      <parameter key="Elcodi\Component\Geo\Entity\Interfaces\AddressInterface">Elcodi\Component\Geo\Entity\Address</parameter>
      <parameter key="Elcodi\Component\Geo\Entity\Interfaces\LocationInterface">Elcodi\Component\Geo\Entity\Location</parameter>
      <parameter key="Elcodi\Component\Media\Entity\Interfaces\ImageInterface">Elcodi\Component\Media\Entity\Image</parameter>
      <parameter key="Elcodi\Component\Language\Entity\Interfaces\LanguageInterface">Elcodi\Component\Language\Entity\Language</parameter>
      <parameter key="Elcodi\Component\Currency\Entity\Interfaces\CurrencyInterface">Elcodi\Component\Currency\Entity\Currency</parameter>
      <parameter key="Elcodi\Component\Rule\Entity\Interfaces\RuleInterface">Elcodi\Component\Rule\Entity\Rule</parameter>
      <parameter key="Elcodi\Component\Coupon\Entity\Interfaces\CouponInterface">Elcodi\Component\Coupon\Entity\Coupon</parameter>
      <parameter key="Elcodi\Component\Cart\Entity\Interfaces\CartInterface">Elcodi\Component\Cart\Entity\Cart</parameter>
      <parameter key="Elcodi\Component\Cart\Entity\Interfaces\OrderInterface">Elcodi\Component\Cart\Entity\Order</parameter>
      <parameter key="Elcodi\Component\Cart\Entity\Interfaces\CartLineInterface">Elcodi\Component\Cart\Entity\CartLine</parameter>
      <parameter key="Elcodi\Component\Cart\Entity\Interfaces\OrderLineInterface">Elcodi\Component\Cart\Entity\OrderLine</parameter>
    </parameter>
    <parameter key="elcodi.entity.currency.class">Elcodi\Component\Currency\Entity\Currency</parameter>
    <parameter key="elcodi.entity.currency.mapping_file">@ElcodiCurrencyBundle/Resources/config/doctrine/Currency.orm.yml</parameter>
    <parameter key="elcodi.entity.currency.manager">default</parameter>
    <parameter key="elcodi.entity.currency.enabled">true</parameter>
    <parameter key="elcodi.entity.currency_exchange_rate.class">Elcodi\Component\Currency\Entity\CurrencyExchangeRate</parameter>
    <parameter key="elcodi.entity.currency_exchange_rate.mapping_file">@ElcodiCurrencyBundle/Resources/config/doctrine/CurrencyExchangeRate.orm.yml</parameter>
    <parameter key="elcodi.entity.currency_exchange_rate.manager">default</parameter>
    <parameter key="elcodi.entity.currency_exchange_rate.enabled">true</parameter>
    <parameter key="elcodi.default_currency">USD</parameter>
    <parameter key="elcodi.currency_session_field_name">currency_id</parameter>
    <parameter key="elcodi.entity.language.class">Elcodi\Component\Language\Entity\Language</parameter>
    <parameter key="elcodi.entity.language.mapping_file">@ElcodiLanguageBundle/Resources/config/doctrine/Language.orm.yml</parameter>
    <parameter key="elcodi.entity.language.manager">default</parameter>
    <parameter key="elcodi.entity.language.enabled">true</parameter>
    <parameter key="elcodi.entity.image.class">Elcodi\Component\Media\Entity\Image</parameter>
    <parameter key="elcodi.entity.image.mapping_file">@ElcodiMediaBundle/Resources/config/doctrine/Image.orm.yml</parameter>
    <parameter key="elcodi.entity.image.manager">default</parameter>
    <parameter key="elcodi.entity.image.enabled">true</parameter>
    <parameter key="elcodi.media_filesystem_service">gaufrette.local_filesystem</parameter>
    <parameter key="elcodi.image_generated_route_host"></parameter>
    <parameter key="elcodi.image_view_max_age">7884000</parameter>
    <parameter key="elcodi.image_view_shared_max_age">7884000</parameter>
    <parameter key="elcodi.image_upload_field_name">file</parameter>
    <parameter key="elcodi.image_resize_converter_bin_path">/usr/bin/convert</parameter>
    <parameter key="elcodi.image_resize_converter_default_profile">/usr/share/color/icc/colord/sRGB.icc</parameter>
    <parameter key="elcodi.entity.address.class">Elcodi\Component\Geo\Entity\Address</parameter>
    <parameter key="elcodi.entity.address.mapping_file">@ElcodiGeoBundle/Resources/config/doctrine/Address.orm.yml</parameter>
    <parameter key="elcodi.entity.address.manager">default</parameter>
    <parameter key="elcodi.entity.address.enabled">true</parameter>
    <parameter key="elcodi.entity.location.class">Elcodi\Component\Geo\Entity\Location</parameter>
    <parameter key="elcodi.entity.location.mapping_file">@ElcodiGeoBundle/Resources/config/doctrine/Location.orm.yml</parameter>
    <parameter key="elcodi.entity.location.manager">default</parameter>
    <parameter key="elcodi.entity.location.enabled">true</parameter>
    <parameter key="elcodi.location_api_host">null</parameter>
    <parameter key="elcodi.entity.attribute.class">Elcodi\Component\Attribute\Entity\Attribute</parameter>
    <parameter key="elcodi.entity.attribute.mapping_file">@ElcodiAttributeBundle/Resources/config/doctrine/Attribute.orm.yml</parameter>
    <parameter key="elcodi.entity.attribute.manager">default</parameter>
    <parameter key="elcodi.entity.attribute.enabled">true</parameter>
    <parameter key="elcodi.entity.attribute_value.class">Elcodi\Component\Attribute\Entity\Value</parameter>
    <parameter key="elcodi.entity.attribute_value.mapping_file">@ElcodiAttributeBundle/Resources/config/doctrine/Value.orm.yml</parameter>
    <parameter key="elcodi.entity.attribute_value.manager">default</parameter>
    <parameter key="elcodi.entity.attribute_value.enabled">true</parameter>
    <parameter key="elcodi.entity.store.class">Elcodi\Component\Store\Entity\Store</parameter>
    <parameter key="elcodi.entity.store.mapping_file">@ElcodiStoreBundle/Resources/config/doctrine/Store.orm.yml</parameter>
    <parameter key="elcodi.entity.store.manager">default</parameter>
    <parameter key="elcodi.entity.store.enabled">true</parameter>
    <parameter key="elcodi.entity.abstract_user.class">Elcodi\Component\User\Entity\Abstracts\AbstractUser</parameter>
    <parameter key="elcodi.entity.abstract_user.mapping_file">@ElcodiUserBundle/Resources/config/doctrine/AbstractUser.orm.yml</parameter>
    <parameter key="elcodi.entity.abstract_user.manager">default</parameter>
    <parameter key="elcodi.entity.abstract_user.enabled">true</parameter>
    <parameter key="elcodi.entity.admin_user.class">Elcodi\Component\User\Entity\AdminUser</parameter>
    <parameter key="elcodi.entity.admin_user.mapping_file">@ElcodiUserBundle/Resources/config/doctrine/AdminUser.orm.yml</parameter>
    <parameter key="elcodi.entity.admin_user.manager">default</parameter>
    <parameter key="elcodi.entity.admin_user.enabled">true</parameter>
    <parameter key="elcodi.entity.customer.class">Elcodi\Component\User\Entity\Customer</parameter>
    <parameter key="elcodi.entity.customer.mapping_file">@ElcodiUserBundle/Resources/config/doctrine/Customer.orm.yml</parameter>
    <parameter key="elcodi.entity.customer.manager">default</parameter>
    <parameter key="elcodi.entity.customer.enabled">true</parameter>
    <parameter key="elcodi.entity.purchasable.class">Elcodi\Component\Product\Entity\Purchasable</parameter>
    <parameter key="elcodi.entity.purchasable.mapping_file">@ElcodiProductBundle/Resources/config/doctrine/Purchasable.orm.yml</parameter>
    <parameter key="elcodi.entity.purchasable.manager">default</parameter>
    <parameter key="elcodi.entity.purchasable.enabled">true</parameter>
    <parameter key="elcodi.entity.product.class">Elcodi\Component\Product\Entity\Product</parameter>
    <parameter key="elcodi.entity.product.mapping_file">@ElcodiProductBundle/Resources/config/doctrine/Product.orm.yml</parameter>
    <parameter key="elcodi.entity.product.manager">default</parameter>
    <parameter key="elcodi.entity.product.enabled">true</parameter>
    <parameter key="elcodi.entity.product_variant.class">Elcodi\Component\Product\Entity\Variant</parameter>
    <parameter key="elcodi.entity.product_variant.mapping_file">@ElcodiProductBundle/Resources/config/doctrine/Variant.orm.yml</parameter>
    <parameter key="elcodi.entity.product_variant.manager">default</parameter>
    <parameter key="elcodi.entity.product_variant.enabled">true</parameter>
    <parameter key="elcodi.entity.purchasable_pack.class">Elcodi\Component\Product\Entity\Pack</parameter>
    <parameter key="elcodi.entity.purchasable_pack.mapping_file">@ElcodiProductBundle/Resources/config/doctrine/Pack.orm.yml</parameter>
    <parameter key="elcodi.entity.purchasable_pack.manager">default</parameter>
    <parameter key="elcodi.entity.purchasable_pack.enabled">true</parameter>
    <parameter key="elcodi.entity.category.class">Elcodi\Component\Product\Entity\Category</parameter>
    <parameter key="elcodi.entity.category.mapping_file">@ElcodiProductBundle/Resources/config/doctrine/Category.orm.yml</parameter>
    <parameter key="elcodi.entity.category.manager">default</parameter>
    <parameter key="elcodi.entity.category.enabled">true</parameter>
    <parameter key="elcodi.entity.manufacturer.class">Elcodi\Component\Product\Entity\Manufacturer</parameter>
    <parameter key="elcodi.entity.manufacturer.mapping_file">@ElcodiProductBundle/Resources/config/doctrine/Manufacturer.orm.yml</parameter>
    <parameter key="elcodi.entity.manufacturer.manager">default</parameter>
    <parameter key="elcodi.entity.manufacturer.enabled">true</parameter>
    <parameter key="elcodi.core.product.use_stock">false</parameter>
    <parameter key="elcodi.core.product.load_only_categories_with_products">false</parameter>
    <parameter key="elcodi.core.product.cache_key">categories</parameter>
    <parameter key="elcodi.entity.state_transition_machine.state_line.class">Elcodi\Component\StateTransitionMachine\Entity\StateLine</parameter>
    <parameter key="elcodi.entity.state_transition_machine.state_line.mapping_file">@ElcodiStateTransitionMachineBundle/Resources/config/doctrine/StateLine.orm.yml</parameter>
    <parameter key="elcodi.entity.state_transition_machine.state_line.manager">default</parameter>
    <parameter key="elcodi.entity.state_transition_machine.state_line.enabled">true</parameter>
    <parameter key="elcodi.entity.zone.class">Elcodi\Component\Zone\Entity\Zone</parameter>
    <parameter key="elcodi.entity.zone.mapping_file">@ElcodiZoneBundle/Resources/config/doctrine/Zone.orm.yml</parameter>
    <parameter key="elcodi.entity.zone.manager">default</parameter>
    <parameter key="elcodi.entity.zone.enabled">true</parameter>
    <parameter key="elcodi.entity.tax.class">Elcodi\Component\Tax\Entity\Tax</parameter>
    <parameter key="elcodi.entity.tax.mapping_file">@ElcodiTaxBundle/Resources/config/doctrine/Tax.orm.yml</parameter>
    <parameter key="elcodi.entity.tax.manager">default</parameter>
    <parameter key="elcodi.entity.tax.enabled">true</parameter>
    <parameter key="elcodi.entity.entity_translation.class">Elcodi\Component\EntityTranslator\Entity\EntityTranslation</parameter>
    <parameter key="elcodi.entity.entity_translation.mapping_file">@ElcodiEntityTranslatorBundle/Resources/config/doctrine/EntityTranslation.orm.yml</parameter>
    <parameter key="elcodi.entity.entity_translation.manager">default</parameter>
    <parameter key="elcodi.entity.entity_translation.enabled">true</parameter>
    <parameter key="elcodi.entity_translator_configuration" type="collection">
      <parameter key="Elcodi\Plugin\CustomShippingBundle\Entity\Interfaces\CarrierInterface" type="collection">
        <parameter key="alias">carrier</parameter>
        <parameter key="fields" type="collection">
          <parameter key="name" type="collection">
            <parameter key="getter">getName</parameter>
            <parameter key="setter">setName</parameter>
          </parameter>
          <parameter key="description" type="collection">
            <parameter key="getter">getDescription</parameter>
            <parameter key="setter">setDescription</parameter>
          </parameter>
        </parameter>
        <parameter key="idGetter">getId</parameter>
      </parameter>
      <parameter key="Elcodi\Component\Product\Entity\Interfaces\PurchasableInterface" type="collection">
        <parameter key="alias">purchasable</parameter>
        <parameter key="fields" type="collection">
          <parameter key="name" type="collection">
            <parameter key="getter">getName</parameter>
            <parameter key="setter">setName</parameter>
          </parameter>
          <parameter key="slug" type="collection">
            <parameter key="getter">getSlug</parameter>
            <parameter key="setter">setSlug</parameter>
          </parameter>
          <parameter key="description" type="collection">
            <parameter key="getter">getDescription</parameter>
            <parameter key="setter">setDescription</parameter>
          </parameter>
          <parameter key="shortDescription" type="collection">
            <parameter key="getter">getShortDescription</parameter>
            <parameter key="setter">setShortDescription</parameter>
          </parameter>
          <parameter key="metaTitle" type="collection">
            <parameter key="getter">getMetaTitle</parameter>
            <parameter key="setter">setMetaTitle</parameter>
          </parameter>
          <parameter key="metaDescription" type="collection">
            <parameter key="getter">getMetaDescription</parameter>
            <parameter key="setter">setMetaDescription</parameter>
          </parameter>
          <parameter key="metaKeywords" type="collection">
            <parameter key="getter">getMetaKeywords</parameter>
            <parameter key="setter">setMetaKeywords</parameter>
          </parameter>
        </parameter>
        <parameter key="idGetter">getId</parameter>
      </parameter>
      <parameter key="Elcodi\Component\Product\Entity\Interfaces\CategoryInterface" type="collection">
        <parameter key="alias">category</parameter>
        <parameter key="fields" type="collection">
          <parameter key="name" type="collection">
            <parameter key="getter">getName</parameter>
            <parameter key="setter">setName</parameter>
          </parameter>
          <parameter key="slug" type="collection">
            <parameter key="getter">getSlug</parameter>
            <parameter key="setter">setSlug</parameter>
          </parameter>
          <parameter key="metaTitle" type="collection">
            <parameter key="getter">getMetaTitle</parameter>
            <parameter key="setter">setMetaTitle</parameter>
          </parameter>
          <parameter key="metaDescription" type="collection">
            <parameter key="getter">getMetaDescription</parameter>
            <parameter key="setter">setMetaDescription</parameter>
          </parameter>
          <parameter key="metaKeywords" type="collection">
            <parameter key="getter">getMetaKeywords</parameter>
            <parameter key="setter">setMetaKeywords</parameter>
          </parameter>
        </parameter>
        <parameter key="idGetter">getId</parameter>
      </parameter>
      <parameter key="Elcodi\Component\Product\Entity\Interfaces\ManufacturerInterface" type="collection">
        <parameter key="alias">manufacturer</parameter>
        <parameter key="fields" type="collection">
          <parameter key="name" type="collection">
            <parameter key="getter">getName</parameter>
            <parameter key="setter">setName</parameter>
          </parameter>
          <parameter key="slug" type="collection">
            <parameter key="getter">getSlug</parameter>
            <parameter key="setter">setSlug</parameter>
          </parameter>
          <parameter key="description" type="collection">
            <parameter key="getter">getDescription</parameter>
            <parameter key="setter">setDescription</parameter>
          </parameter>
          <parameter key="metaTitle" type="collection">
            <parameter key="getter">getMetaTitle</parameter>
            <parameter key="setter">setMetaTitle</parameter>
          </parameter>
          <parameter key="metaDescription" type="collection">
            <parameter key="getter">getMetaDescription</parameter>
            <parameter key="setter">setMetaDescription</parameter>
          </parameter>
          <parameter key="metaKeywords" type="collection">
            <parameter key="getter">getMetaKeywords</parameter>
            <parameter key="setter">setMetaKeywords</parameter>
          </parameter>
        </parameter>
        <parameter key="idGetter">getId</parameter>
      </parameter>
      <parameter key="Elcodi\Component\Page\Entity\Interfaces\PageInterface" type="collection">
        <parameter key="alias">page</parameter>
        <parameter key="fields" type="collection">
          <parameter key="title" type="collection">
            <parameter key="getter">getTitle</parameter>
            <parameter key="setter">setTitle</parameter>
          </parameter>
          <parameter key="content" type="collection">
            <parameter key="getter">getContent</parameter>
            <parameter key="setter">setContent</parameter>
          </parameter>
          <parameter key="path" type="collection">
            <parameter key="getter">getPath</parameter>
            <parameter key="setter">setPath</parameter>
          </parameter>
          <parameter key="metaTitle" type="collection">
            <parameter key="getter">getMetaTitle</parameter>
            <parameter key="setter">setMetaTitle</parameter>
          </parameter>
          <parameter key="metaDescription" type="collection">
            <parameter key="getter">getMetaDescription</parameter>
            <parameter key="setter">setMetaDescription</parameter>
          </parameter>
          <parameter key="metaKeywords" type="collection">
            <parameter key="getter">getMetaKeywords</parameter>
            <parameter key="setter">setMetaKeywords</parameter>
          </parameter>
        </parameter>
        <parameter key="idGetter">getId</parameter>
      </parameter>
    </parameter>
    <parameter key="elcodi.entity_translator_cache_prefix">translation</parameter>
    <parameter key="elcodi.entity_translator_auto_translate">true</parameter>
    <parameter key="elcodi.entity_translator_language_master_locale">en</parameter>
    <parameter key="elcodi.entity_translator_language_fallback">true</parameter>
    <parameter key="elcodi.entity.menu.class">Elcodi\Component\Menu\Entity\Menu\Menu</parameter>
    <parameter key="elcodi.entity.menu.mapping_file">@ElcodiMenuBundle/Resources/config/doctrine/Menu.orm.yml</parameter>
    <parameter key="elcodi.entity.menu.manager">default</parameter>
    <parameter key="elcodi.entity.menu.enabled">true</parameter>
    <parameter key="elcodi.entity.menu_node.class">Elcodi\Component\Menu\Entity\Menu\Node</parameter>
    <parameter key="elcodi.entity.menu_node.mapping_file">@ElcodiMenuBundle/Resources/config/doctrine/MenuNode.orm.yml</parameter>
    <parameter key="elcodi.entity.menu_node.manager">default</parameter>
    <parameter key="elcodi.entity.menu_node.enabled">true</parameter>
    <parameter key="elcodi.menu_cache_key">menus</parameter>
    <parameter key="elcodi.entity.plugin.class">Elcodi\Component\Plugin\Entity\Plugin</parameter>
    <parameter key="elcodi.entity.plugin.mapping_file">@ElcodiPluginBundle/Resources/config/doctrine/Plugin.orm.yml</parameter>
    <parameter key="elcodi.entity.plugin.manager">default</parameter>
    <parameter key="elcodi.entity.plugin.enabled">true</parameter>
    <parameter key="elcodi.entity.plugin_configuration.class">Elcodi\Component\Plugin\Entity\PluginConfiguration</parameter>
    <parameter key="elcodi.entity.plugin_configuration.mapping_file">@ElcodiPluginBundle/Resources/config/doctrine/PluginConfiguration.orm.yml</parameter>
    <parameter key="elcodi.entity.plugin_configuration.manager">default</parameter>
    <parameter key="elcodi.entity.plugin_configuration.enabled">true</parameter>
    <parameter key="elcodi.entity.cart_coupon.class">Elcodi\Component\CartCoupon\Entity\CartCoupon</parameter>
    <parameter key="elcodi.entity.cart_coupon.mapping_file">@ElcodiCartCouponBundle/Resources/config/doctrine/CartCoupon.orm.yml</parameter>
    <parameter key="elcodi.entity.cart_coupon.manager">default</parameter>
    <parameter key="elcodi.entity.cart_coupon.enabled">true</parameter>
    <parameter key="elcodi.entity.order_coupon.class">Elcodi\Component\CartCoupon\Entity\OrderCoupon</parameter>
    <parameter key="elcodi.entity.order_coupon.mapping_file">@ElcodiCartCouponBundle/Resources/config/doctrine/OrderCoupon.orm.yml</parameter>
    <parameter key="elcodi.entity.order_coupon.manager">default</parameter>
    <parameter key="elcodi.entity.order_coupon.enabled">true</parameter>
    <parameter key="elcodi.entity.banner.class">Elcodi\Component\Banner\Entity\Banner</parameter>
    <parameter key="elcodi.entity.banner.mapping_file">@ElcodiBannerBundle/Resources/config/doctrine/Banner.orm.yml</parameter>
    <parameter key="elcodi.entity.banner.manager">default</parameter>
    <parameter key="elcodi.entity.banner.enabled">true</parameter>
    <parameter key="elcodi.entity.banner_zone.class">Elcodi\Component\Banner\Entity\BannerZone</parameter>
    <parameter key="elcodi.entity.banner_zone.mapping_file">@ElcodiBannerBundle/Resources/config/doctrine/BannerZone.orm.yml</parameter>
    <parameter key="elcodi.entity.banner_zone.manager">default</parameter>
    <parameter key="elcodi.entity.banner_zone.enabled">true</parameter>
    <parameter key="elcodi.entity.newsletter_subscription.class">Elcodi\Component\Newsletter\Entity\NewsletterSubscription</parameter>
    <parameter key="elcodi.entity.newsletter_subscription.mapping_file">@ElcodiNewsletterBundle/Resources/config/doctrine/NewsletterSubscription.orm.yml</parameter>
    <parameter key="elcodi.entity.newsletter_subscription.manager">default</parameter>
    <parameter key="elcodi.entity.newsletter_subscription.enabled">true</parameter>
    <parameter key="elcodi.entity.page.class">Elcodi\Component\Page\Entity\Page</parameter>
    <parameter key="elcodi.entity.page.mapping_file">@ElcodiPageBundle/Resources/config/doctrine/Page.orm.yml</parameter>
    <parameter key="elcodi.entity.page.manager">default</parameter>
    <parameter key="elcodi.entity.page.enabled">true</parameter>
    <parameter key="elcodi.entity.metric_entry.class">Elcodi\Component\Metric\Core\Entity\Entry</parameter>
    <parameter key="elcodi.entity.metric_entry.mapping_file">@ElcodiMetricBundle/Resources/config/doctrine/Entry.orm.yml</parameter>
    <parameter key="elcodi.entity.metric_entry.manager">default</parameter>
    <parameter key="elcodi.entity.metric_entry.enabled">true</parameter>
    <parameter key="elcodi.core.metric.bucket_client">elcodi.redis_metrics_bucket</parameter>
    <parameter key="elcodi.entity.comment.class">Elcodi\Component\Comment\Entity\Comment</parameter>
    <parameter key="elcodi.entity.comment.mapping_file">@ElcodiCommentBundle/Resources/config/doctrine/Comment.orm.yml</parameter>
    <parameter key="elcodi.entity.comment.manager">default</parameter>
    <parameter key="elcodi.entity.comment.enabled">true</parameter>
    <parameter key="elcodi.entity.comment_vote.class">Elcodi\Component\Comment\Entity\Vote</parameter>
    <parameter key="elcodi.entity.comment_vote.mapping_file">@ElcodiCommentBundle/Resources/config/doctrine/Vote.orm.yml</parameter>
    <parameter key="elcodi.entity.comment_vote.manager">default</parameter>
    <parameter key="elcodi.entity.comment_vote.enabled">true</parameter>
    <parameter key="elcodi.comment.cache_key">comments</parameter>
    <parameter key="store.product.menu_cache_key">tree</parameter>
    <parameter key="store.connect.entity.authorization.class">Elcodi\Store\ConnectBundle\Entity\Authorization</parameter>
    <parameter key="store.connect.entity.authorization.mapping_file">@StoreConnectBundle/Resources/config/doctrine/Authorization.orm.yml</parameter>
    <parameter key="store.connect.entity.authorization.manager">default</parameter>
    <parameter key="store.connect.entity.authorization.enabled">true</parameter>
    <parameter key="store.page.blog_posts_per_page">5</parameter>
    <parameter key="elcodi.core.bamboo.cache_prefix"></parameter>
    <parameter key="elcodi.entity.carrier.class">Elcodi\Plugin\CustomShippingBundle\Entity\Carrier</parameter>
    <parameter key="elcodi.entity.carrier.mapping_file">@ElcodiCustomShippingBundle/Resources/config/doctrine/Carrier.orm.yml</parameter>
    <parameter key="elcodi.entity.carrier.manager">default</parameter>
    <parameter key="elcodi.entity.carrier.enabled">true</parameter>
    <parameter key="elcodi.entity.shipping_range.class">Elcodi\Plugin\CustomShippingBundle\Entity\ShippingRange</parameter>
    <parameter key="elcodi.entity.shipping_range.mapping_file">@ElcodiCustomShippingBundle/Resources/config/doctrine/ShippingRange.orm.yml</parameter>
    <parameter key="elcodi.entity.shipping_range.manager">default</parameter>
    <parameter key="elcodi.entity.shipping_range.enabled">true</parameter>
    <parameter key="doctrine_cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine_cache.apcu.class">Doctrine\Common\Cache\ApcuCache</parameter>
    <parameter key="doctrine_cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine_cache.chain.class">Doctrine\Common\Cache\ChainCache</parameter>
    <parameter key="doctrine_cache.couchbase.class">Doctrine\Common\Cache\CouchbaseCache</parameter>
    <parameter key="doctrine_cache.couchbase.connection.class">Couchbase</parameter>
    <parameter key="doctrine_cache.couchbase.hostnames">localhost:8091</parameter>
    <parameter key="doctrine_cache.file_system.class">Doctrine\Common\Cache\FilesystemCache</parameter>
    <parameter key="doctrine_cache.php_file.class">Doctrine\Common\Cache\PhpFileCache</parameter>
    <parameter key="doctrine_cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine_cache.memcache.connection.class">Memcache</parameter>
    <parameter key="doctrine_cache.memcache.host">localhost</parameter>
    <parameter key="doctrine_cache.memcache.port">11211</parameter>
    <parameter key="doctrine_cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine_cache.memcached.connection.class">Memcached</parameter>
    <parameter key="doctrine_cache.memcached.host">localhost</parameter>
    <parameter key="doctrine_cache.memcached.port">11211</parameter>
    <parameter key="doctrine_cache.mongodb.class">Doctrine\Common\Cache\MongoDBCache</parameter>
    <parameter key="doctrine_cache.mongodb.collection.class">MongoCollection</parameter>
    <parameter key="doctrine_cache.mongodb.connection.class">MongoClient</parameter>
    <parameter key="doctrine_cache.mongodb.server">localhost:27017</parameter>
    <parameter key="doctrine_cache.predis.client.class">Predis\Client</parameter>
    <parameter key="doctrine_cache.predis.scheme">tcp</parameter>
    <parameter key="doctrine_cache.predis.host">localhost</parameter>
    <parameter key="doctrine_cache.predis.port">6379</parameter>
    <parameter key="doctrine_cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine_cache.redis.connection.class">Redis</parameter>
    <parameter key="doctrine_cache.redis.host">localhost</parameter>
    <parameter key="doctrine_cache.redis.port">6379</parameter>
    <parameter key="doctrine_cache.riak.class">Doctrine\Common\Cache\RiakCache</parameter>
    <parameter key="doctrine_cache.riak.bucket.class">Riak\Bucket</parameter>
    <parameter key="doctrine_cache.riak.connection.class">Riak\Connection</parameter>
    <parameter key="doctrine_cache.riak.bucket_property_list.class">Riak\BucketPropertyList</parameter>
    <parameter key="doctrine_cache.riak.host">localhost</parameter>
    <parameter key="doctrine_cache.riak.port">8087</parameter>
    <parameter key="doctrine_cache.sqlite3.class">Doctrine\Common\Cache\SQLite3Cache</parameter>
    <parameter key="doctrine_cache.sqlite3.connection.class">SQLite3</parameter>
    <parameter key="doctrine_cache.void.class">Doctrine\Common\Cache\VoidCache</parameter>
    <parameter key="doctrine_cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine_cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine_cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine_cache.security.acl.cache.class">Doctrine\Bundle\DoctrineCacheBundle\Acl\Model\AclCache</parameter>
    <parameter key="knp_gaufrette.filesystem_map.class">Knp\Bundle\GaufretteBundle\FilesystemMap</parameter>
    <parameter key="paymentsuite.logger">true</parameter>
    <parameter key="paymentsuite.paypal_web_checkout.business">default</parameter>
    <parameter key="paymentsuite.paypal_web_checkout.debug">true</parameter>
    <parameter key="paymentsuite.paypal_web_checkout.api_endpoint">https://www.sandbox.paypal.com/cgi-bin/webscr</parameter>
    <parameter key="paymentsuite.stripe.private_key">@elcodi_plugin.stripe.private_key</parameter>
    <parameter key="paymentsuite.stripe.public_key">@elcodi_plugin.stripe.public_key</parameter>
    <parameter key="paymentsuite.stripe.api_endpoint">https://api.stripe.com/</parameter>
    <parameter key="paymentsuite.stripe.view_template">StripeBundle:Stripe:view.html.twig</parameter>
    <parameter key="paymentsuite.stripe.scripts_template">StripeBundle:Stripe:scripts.html.twig</parameter>
    <parameter key="controller_resolver.class">Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver</parameter>
    <parameter key="controller_name_converter.class">Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser</parameter>
    <parameter key="response_listener.class">Symfony\Component\HttpKernel\EventListener\ResponseListener</parameter>
    <parameter key="streamed_response_listener.class">Symfony\Component\HttpKernel\EventListener\StreamedResponseListener</parameter>
    <parameter key="locale_listener.class">Symfony\Component\HttpKernel\EventListener\LocaleListener</parameter>
    <parameter key="event_dispatcher.class">Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher</parameter>
    <parameter key="http_kernel.class">Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel</parameter>
    <parameter key="filesystem.class">Symfony\Component\Filesystem\Filesystem</parameter>
    <parameter key="cache_warmer.class">Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate</parameter>
    <parameter key="cache_clearer.class">Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer</parameter>
    <parameter key="file_locator.class">Symfony\Component\HttpKernel\Config\FileLocator</parameter>
    <parameter key="uri_signer.class">Symfony\Component\HttpKernel\UriSigner</parameter>
    <parameter key="request_stack.class">Symfony\Component\HttpFoundation\RequestStack</parameter>
    <parameter key="fragment.handler.class">Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler</parameter>
    <parameter key="fragment.renderer.inline.class">Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer</parameter>
    <parameter key="fragment.renderer.hinclude.class">Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer</parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.renderer.esi.class">Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="translator.class">Symfony\Bundle\FrameworkBundle\Translation\Translator</parameter>
    <parameter key="translator.identity.class">Symfony\Component\Translation\IdentityTranslator</parameter>
    <parameter key="translator.selector.class">Symfony\Component\Translation\MessageSelector</parameter>
    <parameter key="translation.loader.php.class">Symfony\Component\Translation\Loader\PhpFileLoader</parameter>
    <parameter key="translation.loader.yml.class">Symfony\Component\Translation\Loader\YamlFileLoader</parameter>
    <parameter key="translation.loader.xliff.class">Symfony\Component\Translation\Loader\XliffFileLoader</parameter>
    <parameter key="translation.loader.po.class">Symfony\Component\Translation\Loader\PoFileLoader</parameter>
    <parameter key="translation.loader.mo.class">Symfony\Component\Translation\Loader\MoFileLoader</parameter>
    <parameter key="translation.loader.qt.class">Symfony\Component\Translation\Loader\QtFileLoader</parameter>
    <parameter key="translation.loader.csv.class">Symfony\Component\Translation\Loader\CsvFileLoader</parameter>
    <parameter key="translation.loader.res.class">Symfony\Component\Translation\Loader\IcuResFileLoader</parameter>
    <parameter key="translation.loader.dat.class">Symfony\Component\Translation\Loader\IcuDatFileLoader</parameter>
    <parameter key="translation.loader.ini.class">Symfony\Component\Translation\Loader\IniFileLoader</parameter>
    <parameter key="translation.loader.json.class">Symfony\Component\Translation\Loader\JsonFileLoader</parameter>
    <parameter key="translation.dumper.php.class">Symfony\Component\Translation\Dumper\PhpFileDumper</parameter>
    <parameter key="translation.dumper.xliff.class">Symfony\Component\Translation\Dumper\XliffFileDumper</parameter>
    <parameter key="translation.dumper.po.class">Symfony\Component\Translation\Dumper\PoFileDumper</parameter>
    <parameter key="translation.dumper.mo.class">Symfony\Component\Translation\Dumper\MoFileDumper</parameter>
    <parameter key="translation.dumper.yml.class">Symfony\Component\Translation\Dumper\YamlFileDumper</parameter>
    <parameter key="translation.dumper.qt.class">Symfony\Component\Translation\Dumper\QtFileDumper</parameter>
    <parameter key="translation.dumper.csv.class">Symfony\Component\Translation\Dumper\CsvFileDumper</parameter>
    <parameter key="translation.dumper.ini.class">Symfony\Component\Translation\Dumper\IniFileDumper</parameter>
    <parameter key="translation.dumper.json.class">Symfony\Component\Translation\Dumper\JsonFileDumper</parameter>
    <parameter key="translation.dumper.res.class">Symfony\Component\Translation\Dumper\IcuResFileDumper</parameter>
    <parameter key="translation.extractor.php.class">Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor</parameter>
    <parameter key="translation.loader.class">Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader</parameter>
    <parameter key="translation.extractor.class">Symfony\Component\Translation\Extractor\ChainExtractor</parameter>
    <parameter key="translation.writer.class">Symfony\Component\Translation\Writer\TranslationWriter</parameter>
    <parameter key="property_accessor.class">Symfony\Component\PropertyAccess\PropertyAccessor</parameter>
    <parameter key="kernel.secret">4acbc300e57d46cb58ac0c629945c17b727f99c8</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.trusted_proxies" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="session.class">Symfony\Component\HttpFoundation\Session\Session</parameter>
    <parameter key="session.flashbag.class">Symfony\Component\HttpFoundation\Session\Flash\FlashBag</parameter>
    <parameter key="session.attribute_bag.class">Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag</parameter>
    <parameter key="session.storage.metadata_bag.class">Symfony\Component\HttpFoundation\Session\Storage\MetadataBag</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.native.class">Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage</parameter>
    <parameter key="session.storage.php_bridge.class">Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage</parameter>
    <parameter key="session.storage.mock_file.class">Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage</parameter>
    <parameter key="session.handler.native_file.class">Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler</parameter>
    <parameter key="session.handler.write_check.class">Symfony\Component\HttpFoundation\Session\Storage\Handler\WriteCheckSessionHandler</parameter>
    <parameter key="session_listener.class">Symfony\Bundle\FrameworkBundle\EventListener\SessionListener</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">/Users/michael/Documents/workspace/bamboo/app/cache/dev/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="security.secure_random.class">Symfony\Component\Security\Core\Util\SecureRandom</parameter>
    <parameter key="form.resolved_type_factory.class">Symfony\Component\Form\ResolvedFormTypeFactory</parameter>
    <parameter key="form.registry.class">Symfony\Component\Form\FormRegistry</parameter>
    <parameter key="form.factory.class">Symfony\Component\Form\FormFactory</parameter>
    <parameter key="form.extension.class">Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension</parameter>
    <parameter key="form.type_guesser.validator.class">Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</parameter>
    <parameter key="form.type_extension.form.request_handler.class">Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="security.csrf.token_generator.class">Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator</parameter>
    <parameter key="security.csrf.token_storage.class">Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage</parameter>
    <parameter key="security.csrf.token_manager.class">Symfony\Component\Security\Csrf\CsrfTokenManager</parameter>
    <parameter key="templating.engine.delegating.class">Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine</parameter>
    <parameter key="templating.name_parser.class">Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser</parameter>
    <parameter key="templating.filename_parser.class">Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser</parameter>
    <parameter key="templating.cache_warmer.template_paths.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer</parameter>
    <parameter key="templating.locator.class">Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator</parameter>
    <parameter key="templating.loader.filesystem.class">Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader</parameter>
    <parameter key="templating.loader.cache.class">Symfony\Component\Templating\Loader\CacheLoader</parameter>
    <parameter key="templating.loader.chain.class">Symfony\Component\Templating\Loader\ChainLoader</parameter>
    <parameter key="templating.finder.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder</parameter>
    <parameter key="templating.helper.assets.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\AssetsHelper</parameter>
    <parameter key="templating.helper.router.class">Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="templating.loader.cache.path">null</parameter>
    <parameter key="templating.engines" type="collection">
      <parameter>twig</parameter>
    </parameter>
    <parameter key="validator.class">Symfony\Component\Validator\Validator\ValidatorInterface</parameter>
    <parameter key="validator.builder.class">Symfony\Component\Validator\ValidatorBuilderInterface</parameter>
    <parameter key="validator.builder.factory.class">Symfony\Component\Validator\Validation</parameter>
    <parameter key="validator.mapping.cache.apc.class">Symfony\Component\Validator\Mapping\Cache\ApcCache</parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.validator_factory.class">Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory</parameter>
    <parameter key="validator.expression.class">Symfony\Component\Validator\Constraints\ExpressionValidator</parameter>
    <parameter key="validator.email.class">Symfony\Component\Validator\Constraints\EmailValidator</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="validator.api">2.5-bc</parameter>
    <parameter key="fragment.listener.class">Symfony\Component\HttpKernel\EventListener\FragmentListener</parameter>
    <parameter key="translator.logging">true</parameter>
    <parameter key="profiler.class">Symfony\Component\HttpKernel\Profiler\Profiler</parameter>
    <parameter key="profiler_listener.class">Symfony\Component\HttpKernel\EventListener\ProfilerListener</parameter>
    <parameter key="data_collector.config.class">Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector</parameter>
    <parameter key="data_collector.request.class">Symfony\Component\HttpKernel\DataCollector\RequestDataCollector</parameter>
    <parameter key="data_collector.exception.class">Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector</parameter>
    <parameter key="data_collector.events.class">Symfony\Component\HttpKernel\DataCollector\EventDataCollector</parameter>
    <parameter key="data_collector.logger.class">Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector</parameter>
    <parameter key="data_collector.time.class">Symfony\Component\HttpKernel\DataCollector\TimeDataCollector</parameter>
    <parameter key="data_collector.memory.class">Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector</parameter>
    <parameter key="data_collector.router.class">Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector</parameter>
    <parameter key="form.resolved_type_factory.data_collector_proxy.class">Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy</parameter>
    <parameter key="form.type_extension.form.data_collector.class">Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension</parameter>
    <parameter key="data_collector.form.class">Symfony\Component\Form\Extension\DataCollector\FormDataCollector</parameter>
    <parameter key="data_collector.form.extractor.class">Symfony\Component\Form\Extension\DataCollector\FormDataExtractor</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_master_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:/Users/michael/Documents/workspace/bamboo/app/cache/dev/profiler</parameter>
    <parameter key="profiler.storage.username"></parameter>
    <parameter key="profiler.storage.password"></parameter>
    <parameter key="profiler.storage.lifetime">86400</parameter>
    <parameter key="router.class">Symfony\Bundle\FrameworkBundle\Routing\Router</parameter>
    <parameter key="router.request_context.class">Symfony\Component\Routing\RequestContext</parameter>
    <parameter key="routing.loader.class">Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader</parameter>
    <parameter key="routing.resolver.class">Symfony\Component\Config\Loader\LoaderResolver</parameter>
    <parameter key="routing.loader.xml.class">Symfony\Component\Routing\Loader\XmlFileLoader</parameter>
    <parameter key="routing.loader.yml.class">Symfony\Component\Routing\Loader\YamlFileLoader</parameter>
    <parameter key="routing.loader.php.class">Symfony\Component\Routing\Loader\PhpFileLoader</parameter>
    <parameter key="router.options.generator_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</parameter>
    <parameter key="router.options.matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</parameter>
    <parameter key="router.cache_warmer.class">Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer</parameter>
    <parameter key="router.options.matcher.cache_class">appDevUrlMatcher</parameter>
    <parameter key="router.options.generator.cache_class">appDevUrlGenerator</parameter>
    <parameter key="router_listener.class">Symfony\Component\HttpKernel\EventListener\RouterListener</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">/Users/michael/Documents/workspace/bamboo/app/config/routing/routing_dev.yml</parameter>
    <parameter key="router.cache_class_prefix">appDev</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="annotations.reader.class">Doctrine\Common\Annotations\AnnotationReader</parameter>
    <parameter key="annotations.cached_reader.class">Doctrine\Common\Annotations\CachedReader</parameter>
    <parameter key="annotations.file_cache_reader.class">Doctrine\Common\Annotations\FileCacheReader</parameter>
    <parameter key="debug.debug_handlers_listener.class">Symfony\Component\HttpKernel\EventListener\DebugHandlersListener</parameter>
    <parameter key="debug.stopwatch.class">Symfony\Component\Stopwatch\Stopwatch</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.event_dispatcher.class">Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher</parameter>
    <parameter key="debug.container.dump">/Users/michael/Documents/workspace/bamboo/app/cache/dev/appDevDebugProjectContainer.xml</parameter>
    <parameter key="debug.controller_resolver.class">Symfony\Component\HttpKernel\Controller\TraceableControllerResolver</parameter>
    <parameter key="security.context.class">Symfony\Component\Security\Core\SecurityContext</parameter>
    <parameter key="security.user_checker.class">Symfony\Component\Security\Core\User\UserChecker</parameter>
    <parameter key="security.encoder_factory.generic.class">Symfony\Component\Security\Core\Encoder\EncoderFactory</parameter>
    <parameter key="security.encoder.digest.class">Symfony\Component\Security\Core\Encoder\MessageDigestPasswordEncoder</parameter>
    <parameter key="security.encoder.plain.class">Symfony\Component\Security\Core\Encoder\PlaintextPasswordEncoder</parameter>
    <parameter key="security.encoder.pbkdf2.class">Symfony\Component\Security\Core\Encoder\Pbkdf2PasswordEncoder</parameter>
    <parameter key="security.encoder.bcrypt.class">Symfony\Component\Security\Core\Encoder\BCryptPasswordEncoder</parameter>
    <parameter key="security.user.provider.in_memory.class">Symfony\Component\Security\Core\User\InMemoryUserProvider</parameter>
    <parameter key="security.user.provider.in_memory.user.class">Symfony\Component\Security\Core\User\User</parameter>
    <parameter key="security.user.provider.chain.class">Symfony\Component\Security\Core\User\ChainUserProvider</parameter>
    <parameter key="security.authentication.trust_resolver.class">Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver</parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</parameter>
    <parameter key="security.authentication.manager.class">Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager</parameter>
    <parameter key="security.authentication.session_strategy.class">Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy</parameter>
    <parameter key="security.access.decision_manager.class">Symfony\Component\Security\Core\Authorization\AccessDecisionManager</parameter>
    <parameter key="security.access.simple_role_voter.class">Symfony\Component\Security\Core\Authorization\Voter\RoleVoter</parameter>
    <parameter key="security.access.authenticated_voter.class">Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter</parameter>
    <parameter key="security.access.role_hierarchy_voter.class">Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter</parameter>
    <parameter key="security.access.expression_voter.class">Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter</parameter>
    <parameter key="security.firewall.class">Symfony\Component\Security\Http\Firewall</parameter>
    <parameter key="security.firewall.map.class">Symfony\Bundle\SecurityBundle\Security\FirewallMap</parameter>
    <parameter key="security.firewall.context.class">Symfony\Bundle\SecurityBundle\Security\FirewallContext</parameter>
    <parameter key="security.matcher.class">Symfony\Component\HttpFoundation\RequestMatcher</parameter>
    <parameter key="security.expression_matcher.class">Symfony\Component\HttpFoundation\ExpressionRequestMatcher</parameter>
    <parameter key="security.role_hierarchy.class">Symfony\Component\Security\Core\Role\RoleHierarchy</parameter>
    <parameter key="security.http_utils.class">Symfony\Component\Security\Http\HttpUtils</parameter>
    <parameter key="security.validator.user_password.class">Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator</parameter>
    <parameter key="security.expression_language.class">Symfony\Component\Security\Core\Authorization\ExpressionLanguage</parameter>
    <parameter key="security.authentication.retry_entry_point.class">Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint</parameter>
    <parameter key="security.channel_listener.class">Symfony\Component\Security\Http\Firewall\ChannelListener</parameter>
    <parameter key="security.authentication.form_entry_point.class">Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.form.class">Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener</parameter>
    <parameter key="security.authentication.listener.simple_form.class">Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener</parameter>
    <parameter key="security.authentication.listener.simple_preauth.class">Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener</parameter>
    <parameter key="security.authentication.listener.basic.class">Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener</parameter>
    <parameter key="security.authentication.basic_entry_point.class">Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.digest.class">Symfony\Component\Security\Http\Firewall\DigestAuthenticationListener</parameter>
    <parameter key="security.authentication.digest_entry_point.class">Symfony\Component\Security\Http\EntryPoint\DigestAuthenticationEntryPoint</parameter>
    <parameter key="security.authentication.listener.x509.class">Symfony\Component\Security\Http\Firewall\X509AuthenticationListener</parameter>
    <parameter key="security.authentication.listener.anonymous.class">Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener</parameter>
    <parameter key="security.authentication.switchuser_listener.class">Symfony\Component\Security\Http\Firewall\SwitchUserListener</parameter>
    <parameter key="security.logout_listener.class">Symfony\Component\Security\Http\Firewall\LogoutListener</parameter>
    <parameter key="security.logout.handler.session.class">Symfony\Component\Security\Http\Logout\SessionLogoutHandler</parameter>
    <parameter key="security.logout.handler.cookie_clearing.class">Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler</parameter>
    <parameter key="security.logout.success_handler.class">Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler</parameter>
    <parameter key="security.access_listener.class">Symfony\Component\Security\Http\Firewall\AccessListener</parameter>
    <parameter key="security.access_map.class">Symfony\Component\Security\Http\AccessMap</parameter>
    <parameter key="security.exception_listener.class">Symfony\Component\Security\Http\Firewall\ExceptionListener</parameter>
    <parameter key="security.context_listener.class">Symfony\Component\Security\Http\Firewall\ContextListener</parameter>
    <parameter key="security.authentication.provider.dao.class">Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.simple.class">Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.pre_authenticated.class">Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider</parameter>
    <parameter key="security.authentication.provider.anonymous.class">Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider</parameter>
    <parameter key="security.authentication.success_handler.class">Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler</parameter>
    <parameter key="security.authentication.failure_handler.class">Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler</parameter>
    <parameter key="security.authentication.simple_success_failure_handler.class">Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler</parameter>
    <parameter key="security.authentication.provider.rememberme.class">Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider</parameter>
    <parameter key="security.authentication.listener.rememberme.class">Symfony\Component\Security\Http\Firewall\RememberMeListener</parameter>
    <parameter key="security.rememberme.token.provider.in_memory.class">Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider</parameter>
    <parameter key="security.authentication.rememberme.services.persistent.class">Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices</parameter>
    <parameter key="security.authentication.rememberme.services.simplehash.class">Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices</parameter>
    <parameter key="security.rememberme.response_listener.class">Symfony\Component\Security\Http\RememberMe\ResponseListener</parameter>
    <parameter key="templating.helper.logout_url.class">Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper</parameter>
    <parameter key="templating.helper.security.class">Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper</parameter>
    <parameter key="twig.extension.logout_url.class">Symfony\Bridge\Twig\Extension\LogoutUrlExtension</parameter>
    <parameter key="twig.extension.security.class">Symfony\Bridge\Twig\Extension\SecurityExtension</parameter>
    <parameter key="data_collector.security.class">Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector</parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="hwi_oauth.resource_ownermap.configured.store_area" type="collection">
      <parameter key="github">/login/check-github</parameter>
      <parameter key="paypal">/login/check-paypal</parameter>
    </parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_CUSTOMER" type="collection">
        <parameter>IS_AUTHENTICATED_ANONYMOUSLY</parameter>
      </parameter>
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>IS_AUTHENTICATED_ANONYMOUSLY</parameter>
      </parameter>
    </parameter>
    <parameter key="twig.class">Twig_Environment</parameter>
    <parameter key="twig.loader.filesystem.class">Symfony\Bundle\TwigBundle\Loader\FilesystemLoader</parameter>
    <parameter key="twig.loader.chain.class">Twig_Loader_Chain</parameter>
    <parameter key="templating.engine.twig.class">Symfony\Bundle\TwigBundle\TwigEngine</parameter>
    <parameter key="twig.cache_warmer.class">Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer</parameter>
    <parameter key="twig.extension.trans.class">Symfony\Bridge\Twig\Extension\TranslationExtension</parameter>
    <parameter key="twig.extension.actions.class">Symfony\Bundle\TwigBundle\Extension\ActionsExtension</parameter>
    <parameter key="twig.extension.code.class">Symfony\Bridge\Twig\Extension\CodeExtension</parameter>
    <parameter key="twig.extension.routing.class">Symfony\Bridge\Twig\Extension\RoutingExtension</parameter>
    <parameter key="twig.extension.yaml.class">Symfony\Bridge\Twig\Extension\YamlExtension</parameter>
    <parameter key="twig.extension.form.class">Symfony\Bridge\Twig\Extension\FormExtension</parameter>
    <parameter key="twig.extension.httpkernel.class">Symfony\Bridge\Twig\Extension\HttpKernelExtension</parameter>
    <parameter key="twig.extension.debug.stopwatch.class">Symfony\Bridge\Twig\Extension\StopwatchExtension</parameter>
    <parameter key="twig.extension.expression.class">Symfony\Bridge\Twig\Extension\ExpressionExtension</parameter>
    <parameter key="twig.form.engine.class">Symfony\Bridge\Twig\Form\TwigRendererEngine</parameter>
    <parameter key="twig.form.renderer.class">Symfony\Bridge\Twig\Form\TwigRenderer</parameter>
    <parameter key="twig.translation.extractor.class">Symfony\Bridge\Twig\Translation\TwigExtractor</parameter>
    <parameter key="twig.exception_listener.class">Symfony\Component\HttpKernel\EventListener\ExceptionListener</parameter>
    <parameter key="twig.controller.exception.class">Symfony\Bundle\TwigBundle\Controller\ExceptionController</parameter>
    <parameter key="twig.controller.preview_error.class">Symfony\Bundle\TwigBundle\Controller\PreviewErrorController</parameter>
    <parameter key="twig.exception_listener.controller">twig.controller.exception:showAction</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
    </parameter>
    <parameter key="monolog.logger.class">Symfony\Bridge\Monolog\Logger</parameter>
    <parameter key="monolog.gelf.publisher.class">Gelf\MessagePublisher</parameter>
    <parameter key="monolog.gelfphp.publisher.class">Gelf\Publisher</parameter>
    <parameter key="monolog.handler.stream.class">Monolog\Handler\StreamHandler</parameter>
    <parameter key="monolog.handler.console.class">Symfony\Bridge\Monolog\Handler\ConsoleHandler</parameter>
    <parameter key="monolog.handler.group.class">Monolog\Handler\GroupHandler</parameter>
    <parameter key="monolog.handler.buffer.class">Monolog\Handler\BufferHandler</parameter>
    <parameter key="monolog.handler.rotating_file.class">Monolog\Handler\RotatingFileHandler</parameter>
    <parameter key="monolog.handler.syslog.class">Monolog\Handler\SyslogHandler</parameter>
    <parameter key="monolog.handler.syslogudp.class">Monolog\Handler\SyslogUdpHandler</parameter>
    <parameter key="monolog.handler.null.class">Monolog\Handler\NullHandler</parameter>
    <parameter key="monolog.handler.test.class">Monolog\Handler\TestHandler</parameter>
    <parameter key="monolog.handler.gelf.class">Monolog\Handler\GelfHandler</parameter>
    <parameter key="monolog.handler.rollbar.class">Monolog\Handler\RollbarHandler</parameter>
    <parameter key="monolog.handler.flowdock.class">Monolog\Handler\FlowdockHandler</parameter>
    <parameter key="monolog.handler.browser_console.class">Monolog\Handler\BrowserConsoleHandler</parameter>
    <parameter key="monolog.handler.firephp.class">Symfony\Bridge\Monolog\Handler\FirePHPHandler</parameter>
    <parameter key="monolog.handler.chromephp.class">Symfony\Bridge\Monolog\Handler\ChromePhpHandler</parameter>
    <parameter key="monolog.handler.debug.class">Symfony\Bridge\Monolog\Handler\DebugHandler</parameter>
    <parameter key="monolog.handler.swift_mailer.class">Symfony\Bridge\Monolog\Handler\SwiftMailerHandler</parameter>
    <parameter key="monolog.handler.native_mailer.class">Monolog\Handler\NativeMailerHandler</parameter>
    <parameter key="monolog.handler.socket.class">Monolog\Handler\SocketHandler</parameter>
    <parameter key="monolog.handler.pushover.class">Monolog\Handler\PushoverHandler</parameter>
    <parameter key="monolog.handler.raven.class">Monolog\Handler\RavenHandler</parameter>
    <parameter key="monolog.handler.newrelic.class">Monolog\Handler\NewRelicHandler</parameter>
    <parameter key="monolog.handler.hipchat.class">Monolog\Handler\HipChatHandler</parameter>
    <parameter key="monolog.handler.slack.class">Monolog\Handler\SlackHandler</parameter>
    <parameter key="monolog.handler.cube.class">Monolog\Handler\CubeHandler</parameter>
    <parameter key="monolog.handler.amqp.class">Monolog\Handler\AmqpHandler</parameter>
    <parameter key="monolog.handler.error_log.class">Monolog\Handler\ErrorLogHandler</parameter>
    <parameter key="monolog.handler.loggly.class">Monolog\Handler\LogglyHandler</parameter>
    <parameter key="monolog.handler.logentries.class">Monolog\Handler\LogEntriesHandler</parameter>
    <parameter key="monolog.handler.whatfailuregroup.class">Monolog\Handler\WhatFailureGroupHandler</parameter>
    <parameter key="monolog.activation_strategy.not_found.class">Symfony\Bundle\MonologBundle\NotFoundActivationStrategy</parameter>
    <parameter key="monolog.handler.fingers_crossed.class">Monolog\Handler\FingersCrossedHandler</parameter>
    <parameter key="monolog.handler.fingers_crossed.error_level_activation_strategy.class">Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy</parameter>
    <parameter key="monolog.handler.filter.class">Monolog\Handler\FilterHandler</parameter>
    <parameter key="monolog.handler.mongo.class">Monolog\Handler\MongoDBHandler</parameter>
    <parameter key="monolog.mongo.client.class">MongoClient</parameter>
    <parameter key="monolog.handler.elasticsearch.class">Monolog\Handler\ElasticSearchHandler</parameter>
    <parameter key="monolog.elastica.client.class">Elastica\Client</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.console">null</parameter>
      <parameter key="monolog.handler.main">null</parameter>
    </parameter>
    <parameter key="swiftmailer.class">Swift_Mailer</parameter>
    <parameter key="swiftmailer.transport.sendmail.class">Swift_Transport_SendmailTransport</parameter>
    <parameter key="swiftmailer.transport.mail.class">Swift_Transport_MailTransport</parameter>
    <parameter key="swiftmailer.transport.failover.class">Swift_Transport_FailoverTransport</parameter>
    <parameter key="swiftmailer.plugin.redirecting.class">Swift_Plugins_RedirectingPlugin</parameter>
    <parameter key="swiftmailer.plugin.impersonate.class">Swift_Plugins_ImpersonatePlugin</parameter>
    <parameter key="swiftmailer.plugin.messagelogger.class">Swift_Plugins_MessageLogger</parameter>
    <parameter key="swiftmailer.plugin.antiflood.class">Swift_Plugins_AntiFloodPlugin</parameter>
    <parameter key="swiftmailer.transport.smtp.class">Swift_Transport_EsmtpTransport</parameter>
    <parameter key="swiftmailer.plugin.blackhole.class">Swift_Plugins_BlackholePlugin</parameter>
    <parameter key="swiftmailer.spool.file.class">Swift_FileSpool</parameter>
    <parameter key="swiftmailer.spool.memory.class">Swift_MemorySpool</parameter>
    <parameter key="swiftmailer.email_sender.listener.class">Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</parameter>
    <parameter key="swiftmailer.data_collector.class">Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector</parameter>
    <parameter key="swiftmailer.mailer.default.transport.name">smtp</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">false</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.encryption">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.port">25</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.host">127.0.0.1</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.username">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.password">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.auth_mode">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.timeout">30</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.source_ip">null</parameter>
    <parameter key="swiftmailer.spool.default.memory.path">/Users/michael/Documents/workspace/bamboo/app/cache/dev/swiftmailer/spool/default</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.spool.enabled">true</parameter>
    <parameter key="swiftmailer.delivery.enabled">false</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="assetic.asset_factory.class">Symfony\Bundle\AsseticBundle\Factory\AssetFactory</parameter>
    <parameter key="assetic.asset_manager.class">Assetic\Factory\LazyAssetManager</parameter>
    <parameter key="assetic.asset_manager_cache_warmer.class">Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer</parameter>
    <parameter key="assetic.cached_formula_loader.class">Assetic\Factory\Loader\CachedFormulaLoader</parameter>
    <parameter key="assetic.config_cache.class">Assetic\Cache\ConfigCache</parameter>
    <parameter key="assetic.config_loader.class">Symfony\Bundle\AsseticBundle\Factory\Loader\ConfigurationLoader</parameter>
    <parameter key="assetic.config_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\ConfigurationResource</parameter>
    <parameter key="assetic.coalescing_directory_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource</parameter>
    <parameter key="assetic.directory_resource.class">Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource</parameter>
    <parameter key="assetic.filter_manager.class">Symfony\Bundle\AsseticBundle\FilterManager</parameter>
    <parameter key="assetic.worker.ensure_filter.class">Assetic\Factory\Worker\EnsureFilterWorker</parameter>
    <parameter key="assetic.worker.cache_busting.class">Assetic\Factory\Worker\CacheBustingWorker</parameter>
    <parameter key="assetic.value_supplier.class">Symfony\Bundle\AsseticBundle\DefaultValueSupplier</parameter>
    <parameter key="assetic.node.paths" type="collection"/>
    <parameter key="assetic.cache_dir">/Users/michael/Documents/workspace/bamboo/app/cache/dev/assetic</parameter>
    <parameter key="assetic.bundles" type="collection">
      <parameter>AdminCoreBundle</parameter>
      <parameter>StoreCoreBundle</parameter>
      <parameter>StoreTemplateBundle</parameter>
      <parameter>AdminGeoBundle</parameter>
      <parameter>AdminStoreBundle</parameter>
    </parameter>
    <parameter key="assetic.twig_extension.class">Symfony\Bundle\AsseticBundle\Twig\AsseticExtension</parameter>
    <parameter key="assetic.twig_formula_loader.class">Assetic\Extension\Twig\TwigFormulaLoader</parameter>
    <parameter key="assetic.helper.dynamic.class">Symfony\Bundle\AsseticBundle\Templating\DynamicAsseticHelper</parameter>
    <parameter key="assetic.helper.static.class">Symfony\Bundle\AsseticBundle\Templating\StaticAsseticHelper</parameter>
    <parameter key="assetic.php_formula_loader.class">Symfony\Bundle\AsseticBundle\Factory\Loader\AsseticHelperFormulaLoader</parameter>
    <parameter key="assetic.debug">true</parameter>
    <parameter key="assetic.use_controller">false</parameter>
    <parameter key="assetic.enable_profiler">false</parameter>
    <parameter key="assetic.read_from">/Users/michael/Documents/workspace/bamboo/app/../web</parameter>
    <parameter key="assetic.write_to">/Users/michael/Documents/workspace/bamboo/app/../web</parameter>
    <parameter key="assetic.variables" type="collection"/>
    <parameter key="assetic.java.bin">/usr/bin/java</parameter>
    <parameter key="assetic.node.bin">/usr/bin/node</parameter>
    <parameter key="assetic.ruby.bin">/usr/bin/ruby</parameter>
    <parameter key="assetic.sass.bin">/usr/bin/sass</parameter>
    <parameter key="assetic.reactjsx.bin">/usr/bin/jsx</parameter>
    <parameter key="assetic.filter.cssrewrite.class">Assetic\Filter\CssRewriteFilter</parameter>
    <parameter key="assetic.twig_extension.functions" type="collection"/>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection"/>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Mmoreram\SimpleDoctrineMapping\Mapping\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\ORM\Mapping\DefaultEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/Users/michael/Documents/workspace/bamboo/app/cache/dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="doctrine_migrations.dir_name">/Users/michael/Documents/workspace/bamboo/app/DoctrineMigrations</parameter>
    <parameter key="doctrine_migrations.namespace">Application\Migrations</parameter>
    <parameter key="doctrine_migrations.table_name">migration_versions</parameter>
    <parameter key="doctrine_migrations.name">Application Migrations</parameter>
    <parameter key="sensio_framework_extra.view.guesser.class">Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser</parameter>
    <parameter key="sensio_framework_extra.controller.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_dir.class">Symfony\Component\Routing\Loader\AnnotationDirectoryLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_file.class">Symfony\Component\Routing\Loader\AnnotationFileLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_class.class">Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader</parameter>
    <parameter key="sensio_framework_extra.view.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener</parameter>
    <parameter key="templating.helper.gravatar.class">Ornicar\GravatarBundle\Templating\Helper\GravatarHelper</parameter>
    <parameter key="twig.extension.gravatar.class">Ornicar\GravatarBundle\Twig\GravatarExtension</parameter>
    <parameter key="gravatar.api.class">Ornicar\GravatarBundle\GravatarApi</parameter>
    <parameter key="hwi_oauth.authentication.listener.oauth.class">HWI\Bundle\OAuthBundle\Security\Http\Firewall\OAuthListener</parameter>
    <parameter key="hwi_oauth.authentication.provider.oauth.class">HWI\Bundle\OAuthBundle\Security\Core\Authentication\Provider\OAuthProvider</parameter>
    <parameter key="hwi_oauth.authentication.entry_point.oauth.class">HWI\Bundle\OAuthBundle\Security\Http\EntryPoint\OAuthEntryPoint</parameter>
    <parameter key="hwi_oauth.user.provider.class">HWI\Bundle\OAuthBundle\Security\Core\User\OAuthUserProvider</parameter>
    <parameter key="hwi_oauth.user.provider.entity.class">HWI\Bundle\OAuthBundle\Security\Core\User\EntityUserProvider</parameter>
    <parameter key="hwi_oauth.user.provider.fosub_bridge.class">HWI\Bundle\OAuthBundle\Security\Core\User\FOSUBUserProvider</parameter>
    <parameter key="hwi_oauth.registration.form.handler.fosub_bridge.class">HWI\Bundle\OAuthBundle\Form\FOSUBRegistrationFormHandler</parameter>
    <parameter key="hwi_oauth.resource_owner.oauth1.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\GenericOAuth1ResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.oauth2.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\GenericOAuth2ResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.amazon.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\AmazonResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.auth0.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\Auth0ResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.azure.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\AzureResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.bitbucket.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\BitbucketResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.bitly.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\BitlyResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.box.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\BoxResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.bufferapp.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\BufferAppResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.dailymotion.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\DailymotionResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.deviantart.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\DeviantartResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.deezer.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\DeezerResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.discogs.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\DiscogsResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.disqus.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\DisqusResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.dropbox.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\DropboxResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.eve_online.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\EveOnlineResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.eventbrite.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\EventbriteResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.facebook.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\FacebookResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.fiware.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\FiwareResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.flickr.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\FlickrResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.foursquare.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\FoursquareResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.github.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\GitHubResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.google.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\GoogleResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.youtube.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\YoutubeResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.hubic.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\HubicResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.instagram.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\InstagramResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.jira.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\JiraResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.linkedin.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\LinkedinResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.mailru.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\MailRuResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.paypal.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\PaypalResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.qq.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\QQResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.reddit.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\RedditResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.runkeeper.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\RunKeeperResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.salesforce.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\SalesforceResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.sensio_connect.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\SensioConnectResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.sina_weibo.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\SinaWeiboResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.slack.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\SlackResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.spotify.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\SpotifyResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.soundcloud.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\SoundcloudResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.stack_exchange.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\StackExchangeResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.stereomood.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\StereomoodResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.strava.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\StravaResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.toshl.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\ToshlResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.trakt.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\TraktResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.trello.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\TrelloResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.twitch.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\TwitchResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.twitter.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\TwitterResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.vkontakte.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\VkontakteResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.wechat.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\WechatResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.windows_live.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\WindowsLiveResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.wordpress.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\WordpressResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.xing.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\XingResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.yahoo.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\YahooResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.yandex.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\YandexResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.odnoklassniki.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\OdnoklassnikiResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_owner.37signals.class">HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\ThirtySevenSignalsResourceOwner</parameter>
    <parameter key="hwi_oauth.resource_ownermap.class">HWI\Bundle\OAuthBundle\Security\Http\ResourceOwnerMap</parameter>
    <parameter key="hwi_oauth.security.oauth_utils.class">HWI\Bundle\OAuthBundle\Security\OAuthUtils</parameter>
    <parameter key="hwi_oauth.storage.session.class">HWI\Bundle\OAuthBundle\OAuth\RequestDataStorage\SessionStorage</parameter>
    <parameter key="hwi_oauth.templating.helper.oauth.class">HWI\Bundle\OAuthBundle\Templating\Helper\OAuthHelper</parameter>
    <parameter key="hwi_oauth.twig.extension.oauth.class">HWI\Bundle\OAuthBundle\Twig\Extension\OAuthExtension</parameter>
    <parameter key="hwi_oauth.http_client.class">Buzz\Client\Curl</parameter>
    <parameter key="hwi_oauth.firewall_names" type="collection">
      <parameter>store_area</parameter>
    </parameter>
    <parameter key="hwi_oauth.target_path_parameter">null</parameter>
    <parameter key="hwi_oauth.use_referer">false</parameter>
    <parameter key="hwi_oauth.failed_auth_path">hwi_oauth_connect</parameter>
    <parameter key="hwi_oauth.resource_owners" type="collection">
      <parameter key="github">github</parameter>
      <parameter key="paypal">paypal</parameter>
    </parameter>
    <parameter key="hwi_oauth.connect">false</parameter>
    <parameter key="hwi_oauth.templating.engine">twig</parameter>
    <parameter key="snc_redis.client.class">Predis\Client</parameter>
    <parameter key="snc_redis.client_options.class">Predis\Configuration\Options</parameter>
    <parameter key="snc_redis.connection_parameters.class">Predis\Connection\Parameters</parameter>
    <parameter key="snc_redis.connection_factory.class">Snc\RedisBundle\Client\Predis\Connection\ConnectionFactory</parameter>
    <parameter key="snc_redis.connection_wrapper.class">Snc\RedisBundle\Client\Predis\Connection\ConnectionWrapper</parameter>
    <parameter key="snc_redis.phpredis_client.class">Redis</parameter>
    <parameter key="snc_redis.phpredis_connection_wrapper.class">Snc\RedisBundle\Client\Phpredis\Client</parameter>
    <parameter key="snc_redis.logger.class">Snc\RedisBundle\Logger\RedisLogger</parameter>
    <parameter key="snc_redis.data_collector.class">Snc\RedisBundle\DataCollector\RedisDataCollector</parameter>
    <parameter key="snc_redis.doctrine_cache.class">Snc\RedisBundle\Doctrine\Cache\RedisCache</parameter>
    <parameter key="snc_redis.monolog_handler.class">Snc\RedisBundle\Monolog\Handler\RedisHandler</parameter>
    <parameter key="snc_redis.swiftmailer_spool.class">Snc\RedisBundle\SwiftMailer\RedisSpool</parameter>
    <parameter key="jms_i18n_routing.router.class">JMS\I18nRoutingBundle\Router\I18nRouter</parameter>
    <parameter key="jms_i18n_routing.locale_resolver.class">JMS\I18nRoutingBundle\Router\DefaultLocaleResolver</parameter>
    <parameter key="jms_i18n_routing.loader.class">JMS\I18nRoutingBundle\Router\I18nLoader</parameter>
    <parameter key="jms_i18n_routing.route_exclusion_strategy.class">JMS\I18nRoutingBundle\Router\DefaultRouteExclusionStrategy</parameter>
    <parameter key="jms_i18n_routing.pattern_generation_strategy.class">JMS\I18nRoutingBundle\Router\DefaultPatternGenerationStrategy</parameter>
    <parameter key="jms_i18n_routing.locale_choosing_listener.class">JMS\I18nRoutingBundle\EventListener\LocaleChoosingListener</parameter>
    <parameter key="jms_i18n_routing.cookie_setting_listener.class">JMS\I18nRoutingBundle\EventListener\CookieSettingListener</parameter>
    <parameter key="jms_i18n_routing.route_translation_extractor.class">JMS\I18nRoutingBundle\Translation\RouteTranslationExtractor</parameter>
    <parameter key="jms_i18n_routing.default_locale">en</parameter>
    <parameter key="jms_i18n_routing.locales" type="collection">
      <parameter>en</parameter>
    </parameter>
    <parameter key="jms_i18n_routing.catalogue">routes</parameter>
    <parameter key="jms_i18n_routing.strategy">prefix_except_default</parameter>
    <parameter key="jms_i18n_routing.redirect_to_host">true</parameter>
    <parameter key="jms_i18n_routing.cookie.name">hl</parameter>
    <parameter key="mmoreram.controllerextra.resolver_priority">-8</parameter>
    <parameter key="mmoreram.controllerextra.request">current</parameter>
    <parameter key="mmoreram.controllerextra.factory_default_method">create</parameter>
    <parameter key="mmoreram.controllerextra.factory_default_static">false</parameter>
    <parameter key="mmoreram.controllerextra.form_active">true</parameter>
    <parameter key="mmoreram.controllerextra.form_default_name">form</parameter>
    <parameter key="mmoreram.controllerextra.flush_active">true</parameter>
    <parameter key="mmoreram.controllerextra.flush_default_manager">default</parameter>
    <parameter key="mmoreram.controllerextra.entity_active">true</parameter>
    <parameter key="mmoreram.controllerextra.entity_default_name">entity</parameter>
    <parameter key="mmoreram.controllerextra.entity_default_persist">true</parameter>
    <parameter key="mmoreram.controllerextra.entity_fallback_mapping">false</parameter>
    <parameter key="mmoreram.controllerextra.json_response_active">true</parameter>
    <parameter key="mmoreram.controllerextra.json_response_default_status">200</parameter>
    <parameter key="mmoreram.controllerextra.json_response_default_error_status">500</parameter>
    <parameter key="mmoreram.controllerextra.json_response_default_headers" type="collection"/>
    <parameter key="mmoreram.controllerextra.log_active">true</parameter>
    <parameter key="mmoreram.controllerextra.log_default_level">info</parameter>
    <parameter key="mmoreram.controllerextra.log_default_execute">pre</parameter>
    <parameter key="mmoreram.controllerextra.paginator_active">true</parameter>
    <parameter key="mmoreram.controllerextra.paginator_default_name">paginator</parameter>
    <parameter key="mmoreram.controllerextra.paginator_default_page">1</parameter>
    <parameter key="mmoreram.controllerextra.paginator_default_limit_per_page">10</parameter>
    <parameter key="mmoreram.controllerextra.object_manager_active">true</parameter>
    <parameter key="mmoreram.controllerextra.object_manager_default_name">objectManager</parameter>
    <parameter key="mmoreram.controllerextra.get_active">true</parameter>
    <parameter key="mmoreram.controllerextra.post_active">true</parameter>
    <parameter key="mmoreram.controllerextra.event_listeners.resolver_event_listener.class">Mmoreram\ControllerExtraBundle\EventListener\ResolverEventListener</parameter>
    <parameter key="mmoreram.controllerextra.provider.entity_provider.class">Mmoreram\ControllerExtraBundle\Provider\EntityProvider</parameter>
    <parameter key="mmoreram.controllerextra.provider.request_parameter_provider.class">Mmoreram\ControllerExtraBundle\Provider\RequestParameterProvider</parameter>
    <parameter key="mmoreram.controllerextra.resolver.form_annotation_resolver.class">Mmoreram\ControllerExtraBundle\Resolver\FormAnnotationResolver</parameter>
    <parameter key="mmoreram.controllerextra.resolver.flush_annotation_resolver.class">Mmoreram\ControllerExtraBundle\Resolver\FlushAnnotationResolver</parameter>
    <parameter key="mmoreram.controllerextra.resolver.entity_annotation_resolver.class">Mmoreram\ControllerExtraBundle\Resolver\EntityAnnotationResolver</parameter>
    <parameter key="mmoreram.controllerextra.resolver.log_annotation_resolver.class">Mmoreram\ControllerExtraBundle\Resolver\LogAnnotationResolver</parameter>
    <parameter key="mmoreram.controllerextra.resolver.json_resolver_annotation_resolver.class">Mmoreram\ControllerExtraBundle\Resolver\JsonResponseAnnotationResolver</parameter>
    <parameter key="mmoreram.controllerextra.resolver.paginator_annotation_resolver.class">Mmoreram\ControllerExtraBundle\Resolver\PaginatorAnnotationResolver</parameter>
    <parameter key="mmoreram.controllerextra.collector.paginator_evaluator_collector.class">Mmoreram\ControllerExtraBundle\Resolver\Paginator\PaginatorEvaluatorCollector</parameter>
    <parameter key="mmoreram.controllerextra.evaluator.paginator_innerjoins_evaluator.class">Mmoreram\ControllerExtraBundle\Resolver\Paginator\PaginatorInnerJoinsEvaluator</parameter>
    <parameter key="mmoreram.controllerextra.evaluator.paginator_leftjoins_evaluator.class">Mmoreram\ControllerExtraBundle\Resolver\Paginator\PaginatorLeftJoinsEvaluator</parameter>
    <parameter key="mmoreram.controllerextra.evaluator.paginator_wheres_evaluator.class">Mmoreram\ControllerExtraBundle\Resolver\Paginator\PaginatorWheresEvaluator</parameter>
    <parameter key="mmoreram.controllerextra.evaluator.paginator_orderby_evaluator.class">Mmoreram\ControllerExtraBundle\Resolver\Paginator\PaginatorOrderByEvaluator</parameter>
    <parameter key="mmoreram.controllerextra.evaluator.paginator_notnulls_evaluator.class">Mmoreram\ControllerExtraBundle\Resolver\Paginator\PaginatorNotNullsEvaluator</parameter>
    <parameter key="mmoreram.controllerextra.resolver.object_manager_annotation_resolver.class">Mmoreram\ControllerExtraBundle\Resolver\ObjectManagerAnnotationResolver</parameter>
    <parameter key="mmoreram.controllerextra.resolver.get_annotation_resolver.class">Mmoreram\ControllerExtraBundle\Resolver\GetAnnotationResolver</parameter>
    <parameter key="mmoreram.controllerextra.resolver.post_annotation_resolver.class">Mmoreram\ControllerExtraBundle\Resolver\PostAnnotationResolver</parameter>
    <parameter key="http_headers.response" type="collection">
      <parameter key="X-Elcodi" type="collection">
        <parameter key="values" type="collection">
          <parameter>This E-commerce is built using Elcodi and Symfony</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="http_headers.listener.class">Mmoreram\HttpHeadersBundle\EventListener\Headers</parameter>
    <parameter key="jms_serializer.metadata.file_locator.class">Metadata\Driver\FileLocator</parameter>
    <parameter key="jms_serializer.metadata.annotation_driver.class">JMS\Serializer\Metadata\Driver\AnnotationDriver</parameter>
    <parameter key="jms_serializer.metadata.chain_driver.class">Metadata\Driver\DriverChain</parameter>
    <parameter key="jms_serializer.metadata.yaml_driver.class">JMS\Serializer\Metadata\Driver\YamlDriver</parameter>
    <parameter key="jms_serializer.metadata.xml_driver.class">JMS\Serializer\Metadata\Driver\XmlDriver</parameter>
    <parameter key="jms_serializer.metadata.php_driver.class">JMS\Serializer\Metadata\Driver\PhpDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrineTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_phpcr_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.lazy_loading_driver.class">Metadata\Driver\LazyLoadingDriver</parameter>
    <parameter key="jms_serializer.metadata.metadata_factory.class">Metadata\MetadataFactory</parameter>
    <parameter key="jms_serializer.metadata.cache.file_cache.class">Metadata\Cache\FileCache</parameter>
    <parameter key="jms_serializer.event_dispatcher.class">JMS\Serializer\EventDispatcher\LazyEventDispatcher</parameter>
    <parameter key="jms_serializer.camel_case_naming_strategy.class">JMS\Serializer\Naming\CamelCaseNamingStrategy</parameter>
    <parameter key="jms_serializer.serialized_name_annotation_strategy.class">JMS\Serializer\Naming\SerializedNameAnnotationStrategy</parameter>
    <parameter key="jms_serializer.cache_naming_strategy.class">JMS\Serializer\Naming\CacheNamingStrategy</parameter>
    <parameter key="jms_serializer.doctrine_object_constructor.class">JMS\Serializer\Construction\DoctrineObjectConstructor</parameter>
    <parameter key="jms_serializer.unserialize_object_constructor.class">JMS\Serializer\Construction\UnserializeObjectConstructor</parameter>
    <parameter key="jms_serializer.version_exclusion_strategy.class">JMS\Serializer\Exclusion\VersionExclusionStrategy</parameter>
    <parameter key="jms_serializer.serializer.class">JMS\Serializer\Serializer</parameter>
    <parameter key="jms_serializer.twig_extension.class">JMS\Serializer\Twig\SerializerExtension</parameter>
    <parameter key="jms_serializer.templating.helper.class">JMS\SerializerBundle\Templating\SerializerHelper</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.class">JMS\Serializer\JsonSerializationVisitor</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.options">0</parameter>
    <parameter key="jms_serializer.json_deserialization_visitor.class">JMS\Serializer\JsonDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_serialization_visitor.class">JMS\Serializer\XmlSerializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.class">JMS\Serializer\XmlDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.doctype_whitelist" type="collection"/>
    <parameter key="jms_serializer.yaml_serialization_visitor.class">JMS\Serializer\YamlSerializationVisitor</parameter>
    <parameter key="jms_serializer.handler_registry.class">JMS\Serializer\Handler\LazyHandlerRegistry</parameter>
    <parameter key="jms_serializer.datetime_handler.class">JMS\Serializer\Handler\DateHandler</parameter>
    <parameter key="jms_serializer.array_collection_handler.class">JMS\Serializer\Handler\ArrayCollectionHandler</parameter>
    <parameter key="jms_serializer.php_collection_handler.class">JMS\Serializer\Handler\PhpCollectionHandler</parameter>
    <parameter key="jms_serializer.form_error_handler.class">JMS\Serializer\Handler\FormErrorHandler</parameter>
    <parameter key="jms_serializer.constraint_violation_handler.class">JMS\Serializer\Handler\ConstraintViolationHandler</parameter>
    <parameter key="jms_serializer.doctrine_proxy_subscriber.class">JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber</parameter>
    <parameter key="jms_serializer.stopwatch_subscriber.class">JMS\SerializerBundle\Serializer\StopwatchEventSubscriber</parameter>
    <parameter key="jms_serializer.infer_types_from_doctrine_metadata">true</parameter>
    <parameter key="fos_rest.serializer.exclusion_strategy.version"></parameter>
    <parameter key="fos_rest.serializer.exclusion_strategy.groups" type="collection"/>
    <parameter key="fos_rest.view_handler.jsonp.callback_param"></parameter>
    <parameter key="fos_rest.view.exception_wrapper_handler">FOS\RestBundle\View\ExceptionWrapperHandler</parameter>
    <parameter key="fos_rest.view_handler.default.class">FOS\RestBundle\View\ViewHandler</parameter>
    <parameter key="fos_rest.view_handler.jsonp.class">FOS\RestBundle\View\JsonpHandler</parameter>
    <parameter key="fos_rest.serializer.exception_wrapper_serialize_handler.class">FOS\RestBundle\Serializer\ExceptionWrapperSerializeHandler</parameter>
    <parameter key="fos_rest.routing.loader.controller.class">FOS\RestBundle\Routing\Loader\RestRouteLoader</parameter>
    <parameter key="fos_rest.routing.loader.yaml_collection.class">FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader</parameter>
    <parameter key="fos_rest.routing.loader.xml_collection.class">FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader</parameter>
    <parameter key="fos_rest.routing.loader.processor.class">FOS\RestBundle\Routing\Loader\RestRouteProcessor</parameter>
    <parameter key="fos_rest.routing.loader.reader.controller.class">FOS\RestBundle\Routing\Loader\Reader\RestControllerReader</parameter>
    <parameter key="fos_rest.routing.loader.reader.action.class">FOS\RestBundle\Routing\Loader\Reader\RestActionReader</parameter>
    <parameter key="fos_rest.format_negotiator.class">FOS\RestBundle\Negotiation\FormatNegotiator</parameter>
    <parameter key="fos_rest.inflector.class">FOS\RestBundle\Inflector\DoctrineInflector</parameter>
    <parameter key="fos_rest.request_matcher.class">Symfony\Component\HttpFoundation\RequestMatcher</parameter>
    <parameter key="fos_rest.violation_formatter.class">FOS\RestBundle\Util\ViolationFormatter</parameter>
    <parameter key="fos_rest.request.param_fetcher.class">FOS\RestBundle\Request\ParamFetcher</parameter>
    <parameter key="fos_rest.request.param_fetcher.reader.class">FOS\RestBundle\Request\ParamReader</parameter>
    <parameter key="fos_rest.cache_dir">/Users/michael/Documents/workspace/bamboo/app/cache/dev/fos_rest</parameter>
    <parameter key="fos_rest.routing.loader.default_format">null</parameter>
    <parameter key="fos_rest.routing.loader.include_format">true</parameter>
    <parameter key="fos_rest.serializer.serialize_null">false</parameter>
    <parameter key="fos_rest.exception.codes" type="collection"/>
    <parameter key="fos_rest.exception.messages" type="collection"/>
    <parameter key="fos_rest.converter.request_body.validation_errors_argument">validationErrors</parameter>
    <parameter key="fos_rest.mime_types" type="collection"/>
    <parameter key="fos_rest.formats" type="collection">
      <parameter key="json">false</parameter>
      <parameter key="xml">false</parameter>
      <parameter key="html">true</parameter>
    </parameter>
    <parameter key="fos_rest.force_redirects" type="collection">
      <parameter key="html">302</parameter>
    </parameter>
    <parameter key="fos_rest.failed_validation">400</parameter>
    <parameter key="fos_rest.empty_content">204</parameter>
    <parameter key="fos_rest.serialize_null">false</parameter>
    <parameter key="fos_rest.default_engine">twig</parameter>
    <parameter key="fos_rest.normalizer.camel_keys.class">FOS\RestBundle\Normalizer\CamelKeysNormalizer</parameter>
    <parameter key="fos_rest.decoder.json.class">FOS\RestBundle\Decoder\JsonDecoder</parameter>
    <parameter key="fos_rest.decoder.jsontoform.class">FOS\RestBundle\Decoder\JsonToFormDecoder</parameter>
    <parameter key="fos_rest.decoder.xml.class">FOS\RestBundle\Decoder\XmlDecoder</parameter>
    <parameter key="fos_rest.decoder_provider.class">FOS\RestBundle\Decoder\ContainerDecoderProvider</parameter>
    <parameter key="fos_rest.body_listener.class">FOS\RestBundle\EventListener\BodyListener</parameter>
    <parameter key="fos_rest.throw_exception_on_unsupported_content_type">false</parameter>
    <parameter key="fos_rest.body_default_format">null</parameter>
    <parameter key="fos_rest.decoders" type="collection">
      <parameter key="json">fos_rest.decoder.json</parameter>
      <parameter key="xml">fos_rest.decoder.xml</parameter>
    </parameter>
    <parameter key="web_profiler.controller.profiler.class">Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController</parameter>
    <parameter key="web_profiler.controller.router.class">Symfony\Bundle\WebProfilerBundle\Controller\RouterController</parameter>
    <parameter key="web_profiler.controller.exception.class">Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController</parameter>
    <parameter key="twig.extension.webprofiler.class">Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension</parameter>
    <parameter key="web_profiler.debug_toolbar.position">bottom</parameter>
    <parameter key="web_profiler.debug_toolbar.class">Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="sensio_distribution.webconfigurator.class">Sensio\Bundle\DistributionBundle\Configurator\Configurator</parameter>
    <parameter key="sensio_distribution.webconfigurator.doctrine_step.class">Sensio\Bundle\DistributionBundle\Configurator\Step\DoctrineStep</parameter>
    <parameter key="sensio_distribution.webconfigurator.secret_step.class">Sensio\Bundle\DistributionBundle\Configurator\Step\SecretStep</parameter>
    <parameter key="sensio_distribution.security_checker.class">SensioLabs\Security\SecurityChecker</parameter>
    <parameter key="sensio_distribution.security_checker.command.class">SensioLabs\Security\Command\SecurityCheckerCommand</parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.translation" type="collection">
        <parameter>translation</parameter>
        <parameter>@WebProfiler/Collector/translation.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="swiftmailer.data_collector" type="collection">
        <parameter>swiftmailer</parameter>
        <parameter>@Swiftmailer/Collector/swiftmailer.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="snc_redis.data_collector" type="collection">
        <parameter>redis</parameter>
        <parameter>SncRedisBundle:Collector:redis</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>elcodi.command.populate_currency_rates</parameter>
      <parameter>elcodi.command.location_populate</parameter>
      <parameter>elcodi.command.location_load</parameter>
      <parameter>elcodi.command.location_drop</parameter>
      <parameter>elcodi.command.plugins_load</parameter>
      <parameter>elcodi.command.plugins_list</parameter>
      <parameter>elcodi.command.plugin_enable</parameter>
      <parameter>elcodi.command.plugin_disable</parameter>
      <parameter>elcodi.command.metrics_load</parameter>
      <parameter>elcodi.command.sitemap_dump</parameter>
      <parameter>elcodi.command.sitemap_profile</parameter>
      <parameter>elcodi.command.elcodi_install</parameter>
      <parameter>store.fixtures_booster.command.load_fixtures</parameter>
      <parameter>sensio_distribution.security_checker.command</parameter>
      <parameter>visithor.command.go</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="elcodi.event_listener.customer_password" class="Elcodi\Component\User\EventListener\CustomerPasswordEventListener">
      <tag name="doctrine.event_listener" event="preUpdate" method="preUpdate"/>
      <tag name="doctrine.event_listener" event="prePersist" method="prePersist"/>
      <argument type="service" id="elcodi.provider.customer_provider"/>
    </service>
    <service id="elcodi.event_listener.admin_user_password" class="Elcodi\Component\User\EventListener\AdminUserPasswordEventListener">
      <tag name="doctrine.event_listener" event="preUpdate" method="preUpdate"/>
      <tag name="doctrine.event_listener" event="prePersist" method="prePersist"/>
      <argument type="service" id="elcodi.provider.admin_user_provider"/>
    </service>
    <service id="twig.extension.text" class="Twig_Extensions_Extension_Text">
      <tag name="twig.extension"/>
    </service>
    <service id="jms_i18n_routing.pattern_generation_strategy.default" class="JMS\I18nRoutingBundle\Router\DefaultPatternGenerationStrategy">
      <argument type="service" id="elcodi.store_routing_strategy"/>
      <argument type="service" id="translator"/>
      <argument type="service" id="elcodi.languages_iso_array"/>
      <argument>/Users/michael/Documents/workspace/bamboo/app/cache/dev</argument>
      <argument>routes</argument>
      <argument type="service" id="elcodi.store_default_language_iso"/>
    </service>
    <service id="elcodi_common.renderer.template_renderer" class="Elcodi\Component\Page\Renderer\TemplatedPageRenderer">
      <argument type="service" id="templating"/>
      <argument>Layout:_static.html.twig</argument>
      <argument type="collection">
        <argument type="service" id="elcodi.store_template_bundle"/>
      </argument>
    </service>
    <service id="elcodi.wrapper.default_currency" class="Elcodi\Component\Currency\Wrapper\DefaultCurrencyWrapper">
      <argument type="service" id="elcodi.repository.currency"/>
      <argument type="service" id="elcodi.store_default_currency_iso"/>
    </service>
    <service id="elcodi.event_listener.load_cart_prices" class="Elcodi\Component\Cart\EventListener\LoadCartPricesEventListener">
      <tag name="kernel.event_listener" event="cart.onload" method="loadCartPurchasablesAmount" priority="16"/>
      <tag name="kernel.event_listener" event="cart.onload" method="loadCartTotalAmount" priority="2"/>
      <argument type="service" id="elcodi.loader.cart_prices"/>
    </service>
    <service id="elcodi.event_listener.save_cart" class="Elcodi\Component\Cart\EventListener\SaveCartEventListener">
      <tag name="kernel.event_listener" event="cart.onload" method="saveCart" priority="0"/>
      <argument type="service" id="elcodi.cart_saver"/>
    </service>
    <service id="elcodi.event_listener.validate_cart_integrity" class="Elcodi\Component\Cart\EventListener\ValidateCartIntegrityEventListener">
      <tag name="kernel.event_listener" event="cart.preload" method="validateCartIntegrity" priority="24"/>
      <argument type="service" id="elcodi.validator.cart_integrity"/>
    </service>
    <service id="elcodi.event_listener.validate_cart_amount" class="Elcodi\Component\Cart\EventListener\ValidateCartAmountEventListener">
      <tag name="kernel.event_listener" event="cart.onload" method="validateAmount" priority="1"/>
      <argument type="service" id="elcodi.validator.cart_amount"/>
    </service>
    <service id="elcodi.event_listener.update_stock_by_cart_line" class="Elcodi\Component\Cart\EventListener\UpdateStockByCartLineEventListener">
      <tag name="kernel.event_listener" event="order_line.oncreated" method="updatePurchasableStockByCartLine" priority="0"/>
      <argument type="service" id="elcodi.updater.cart_line_stock"/>
    </service>
    <service id="elcodi.event_listener.validate_empty_shipping_amount" class="Elcodi\Component\Cart\EventListener\ValidateEmptyShippingAmountEventListener">
      <tag name="kernel.event_listener" event="cart.onload" method="validateEmptyShippingAmount" priority="4"/>
      <argument type="service" id="elcodi.validator.cart_shipping_method"/>
    </service>
    <service id="elcodi.event_listener.save_cart_to_session" class="Elcodi\Component\Cart\EventListener\SaveCartToSessionEventListener">
      <tag name="kernel.event_listener" event="cart.onload" method="saveCartInSession" priority="-2"/>
      <argument type="service" id="elcodi.session_manager.cart"/>
    </service>
    <service id="elcodi.event_listener.order_creation" class="Elcodi\Component\Cart\EventListener\OrderCreationEventListener">
      <tag name="kernel.event_listener" event="order.oncreated" method="saveOrder" priority="0"/>
      <tag name="kernel.event_listener" event="order.oncreated" method="setCartAsOrdered" priority="-16"/>
      <argument type="service" id="elcodi.object_manager.order"/>
      <argument type="service" id="elcodi.object_manager.cart"/>
    </service>
    <service id="elcodi.event_listener.address_clone" class="Elcodi\Component\Cart\EventListener\AddressCloneEventListener">
      <tag name="kernel.event_listener" event="address.onclone" method="updateCarts" priority="0"/>
      <argument type="service" id="elcodi.repository.cart"/>
      <argument type="service" id="elcodi.object_manager.cart"/>
    </service>
    <service id="elcodi.manager.cart" class="Elcodi\Component\Cart\Services\CartManager">
      <argument type="service" id="elcodi.event_dispatcher.cart"/>
      <argument type="service" id="elcodi.event_dispatcher.cart_line"/>
      <argument type="service" id="elcodi.factory.cart"/>
      <argument type="service" id="elcodi.factory.cart_line"/>
    </service>
    <service id="elcodi.session_manager.cart" class="Elcodi\Component\Cart\Services\CartSessionManager">
      <argument type="service" id="session"/>
      <argument>cart_id</argument>
      <argument>true</argument>
    </service>
    <service id="elcodi.loader.cart_prices" class="Elcodi\Component\Cart\Services\CartPricesLoader">
      <argument type="service" id="elcodi.wrapper.currency"/>
      <argument type="service" id="elcodi.converter.currency"/>
    </service>
    <service id="elcodi.cart_saver" class="Elcodi\Component\Cart\Services\CartSaver">
      <argument type="service" id="elcodi.object_manager.cart"/>
    </service>
    <service id="elcodi.validator.cart_integrity" class="Elcodi\Component\Cart\Services\CartIntegrityValidator">
      <argument type="service" id="elcodi.event_dispatcher.cart"/>
      <argument type="service" id="elcodi.stock_validator.purchasable"/>
      <argument type="service" id="elcodi.manager.cart"/>
      <argument type="service" id="elcodi.store_uses_stock" on-invalid="ignore"/>
    </service>
    <service id="elcodi.validator.cart_amount" class="Elcodi\Component\Cart\Services\CartAmountValidator"/>
    <service id="elcodi.updater.cart_line_stock" class="Elcodi\Component\Cart\Services\CartLineStockUpdater">
      <argument type="service" id="elcodi.stock_updater.purchasable"/>
    </service>
    <service id="elcodi.validator.cart_shipping_method" class="Elcodi\Component\Cart\Services\CartShippingAmountValidator">
      <argument type="service" id="elcodi.wrapper.empty_money"/>
    </service>
    <service id="elcodi.wrapper.cart" class="Elcodi\Component\Cart\Wrapper\CartWrapper">
      <argument type="service" id="elcodi.event_dispatcher.cart"/>
      <argument type="service" id="elcodi.factory.cart"/>
      <argument type="service" id="elcodi.wrapper.cart_session"/>
      <argument type="service" id="elcodi.wrapper.customer"/>
    </service>
    <service id="elcodi.wrapper.cart_session" class="Elcodi\Component\Cart\Wrapper\CartSessionWrapper">
      <argument type="service" id="elcodi.session_manager.cart"/>
      <argument type="service" id="elcodi.repository.cart"/>
    </service>
    <service id="elcodi.factory.cart" class="Elcodi\Component\Cart\Factory\CartFactory">
      <argument type="service" id="elcodi.wrapper.empty_money"/>
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Cart\Entity\Cart</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.factory.order" class="Elcodi\Component\Cart\Factory\OrderFactory">
      <argument type="service" id="elcodi.wrapper.empty_money"/>
      <call method="setPaymentMachineManager">
        <argument type="service" id="elcodi.order_payment_states_machine_manager"/>
      </call>
      <call method="setShippingMachineManager">
        <argument type="service" id="elcodi.order_shipping_states_machine_manager"/>
      </call>
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Cart\Entity\Order</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.factory.cart_line" class="Elcodi\Component\Cart\Factory\CartLineFactory">
      <argument type="service" id="elcodi.wrapper.empty_money"/>
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Cart\Entity\CartLine</argument>
      </call>
    </service>
    <service id="elcodi.factory.order_line" class="Elcodi\Component\Cart\Factory\OrderLineFactory">
      <argument type="service" id="elcodi.wrapper.empty_money"/>
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Cart\Entity\OrderLine</argument>
      </call>
    </service>
    <service id="elcodi.repository.cart" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Cart\Entity\Cart</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.order" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Cart\Entity\Order</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.cart_line" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Cart\Entity\CartLine</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.order_line" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Cart\Entity\OrderLine</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.cart" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Cart\Entity\Cart</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.cart_line" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Cart\Entity\CartLine</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.order" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Cart\Entity\Order</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.order_line" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Cart\Entity\OrderLine</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.director.cart" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.cart"/>
      <argument type="service" id="elcodi.repository.cart"/>
      <argument type="service" id="elcodi.factory.cart"/>
    </service>
    <service id="elcodi.director.cart_line" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.cart_line"/>
      <argument type="service" id="elcodi.repository.cart_line"/>
      <argument type="service" id="elcodi.factory.cart_line"/>
    </service>
    <service id="elcodi.director.order" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.order"/>
      <argument type="service" id="elcodi.repository.order"/>
      <argument type="service" id="elcodi.factory.order"/>
    </service>
    <service id="elcodi.director.order_line" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.order_line"/>
      <argument type="service" id="elcodi.repository.order_line"/>
      <argument type="service" id="elcodi.factory.order_line"/>
    </service>
    <service id="elcodi.transformer.cart_order" class="Elcodi\Component\Cart\Transformer\CartOrderTransformer">
      <argument type="service" id="elcodi.event_dispatcher.order"/>
      <argument type="service" id="elcodi.transformer.cart_line_order_line"/>
      <argument type="service" id="elcodi.factory.order"/>
    </service>
    <service id="elcodi.transformer.cart_line_order_line" class="Elcodi\Component\Cart\Transformer\CartLineOrderLineTransformer">
      <argument type="service" id="elcodi.event_dispatcher.order_line"/>
      <argument type="service" id="elcodi.factory.order_line"/>
    </service>
    <service id="elcodi.event_dispatcher.cart" class="Elcodi\Component\Cart\EventDispatcher\CartEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi.event_dispatcher.cart_line" class="Elcodi\Component\Cart\EventDispatcher\CartLineEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi.event_dispatcher.order" class="Elcodi\Component\Cart\EventDispatcher\OrderEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi.event_dispatcher.order_line" class="Elcodi\Component\Cart\EventDispatcher\OrderLineEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi.order_payment_states_machine_builder" class="Elcodi\Component\StateTransitionMachine\Machine\MachineBuilder">
      <argument type="service" id="elcodi.factory.state_transition_machine"/>
      <argument>order_payment_states_machine</argument>
      <argument type="collection">
        <argument type="collection">
          <argument>unpaid</argument>
          <argument>pay</argument>
          <argument>paid</argument>
        </argument>
        <argument type="collection">
          <argument>paid</argument>
          <argument>refund</argument>
          <argument>refunded</argument>
        </argument>
      </argument>
      <argument>unpaid</argument>
    </service>
    <service id="elcodi.order.payment_states_machine" class="Elcodi\Component\StateTransitionMachine\Machine\Machine">
      <factory service="elcodi.order_payment_states_machine_builder" method="compile"/>
    </service>
    <service id="elcodi.order_payment_states_machine_manager" class="Elcodi\Component\StateTransitionMachine\Machine\MachineManager">
      <argument type="service" id="elcodi.order.payment_states_machine"/>
      <argument type="service" id="elcodi.event_dispatcher.machine"/>
      <argument type="service" id="elcodi.factory.state_transition_machine_state_line"/>
    </service>
    <service id="elcodi.order_shipping_states_machine_builder" class="Elcodi\Component\StateTransitionMachine\Machine\MachineBuilder">
      <argument type="service" id="elcodi.factory.state_transition_machine"/>
      <argument>order_shipping_states_machine</argument>
      <argument type="collection">
        <argument type="collection">
          <argument>preparing</argument>
          <argument>order ready</argument>
          <argument>processed</argument>
        </argument>
        <argument type="collection">
          <argument>processed</argument>
          <argument>picked up by carrier</argument>
          <argument>in delivery</argument>
        </argument>
        <argument type="collection">
          <argument>processed</argument>
          <argument>picked up on store</argument>
          <argument>delivered</argument>
        </argument>
        <argument type="collection">
          <argument>in delivery</argument>
          <argument>delivered</argument>
          <argument>delivered</argument>
        </argument>
        <argument type="collection">
          <argument>preparing</argument>
          <argument>cancel</argument>
          <argument>cancelled</argument>
        </argument>
        <argument type="collection">
          <argument>processed</argument>
          <argument>cancel</argument>
          <argument>cancelled</argument>
        </argument>
        <argument type="collection">
          <argument>in delivery</argument>
          <argument>cancel</argument>
          <argument>cancelled</argument>
        </argument>
        <argument type="collection">
          <argument>in delivery</argument>
          <argument>return</argument>
          <argument>returned</argument>
        </argument>
        <argument type="collection">
          <argument>delivered</argument>
          <argument>return</argument>
          <argument>returned</argument>
        </argument>
      </argument>
      <argument>preparing</argument>
    </service>
    <service id="elcodi.order.shipping_states_machine" class="Elcodi\Component\StateTransitionMachine\Machine\Machine">
      <factory service="elcodi.order_shipping_states_machine_builder" method="compile"/>
    </service>
    <service id="elcodi.order_shipping_states_machine_manager" class="Elcodi\Component\StateTransitionMachine\Machine\MachineManager">
      <argument type="service" id="elcodi.order.shipping_states_machine"/>
      <argument type="service" id="elcodi.event_dispatcher.machine"/>
      <argument type="service" id="elcodi.factory.state_transition_machine_state_line"/>
    </service>
    <service id="elcodi.manager.coupon" class="Elcodi\Component\Coupon\Services\CouponManager">
      <argument type="service" id="elcodi.factory.coupon"/>
      <argument type="service" id="elcodi.generator.random_string"/>
      <argument type="service" id="elcodi.factory.datetime"/>
    </service>
    <service id="elcodi.factory.coupon" class="Elcodi\Component\Coupon\Factory\CouponFactory">
      <argument type="service" id="elcodi.wrapper.empty_money"/>
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Coupon\Entity\Coupon</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.event_dispatcher.coupon" class="Elcodi\Component\Coupon\EventDispatcher\CouponEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi.event_listener.make_coupon_used" class="Elcodi\Component\Coupon\EventListener\MakeCouponUsedEventListener">
      <tag name="kernel.event_listener" event="coupon.onused" method="makeUse" priority="0"/>
      <argument type="service" id="elcodi.object_manager.coupon"/>
    </service>
    <service id="elcodi.repository.coupon" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Coupon\Entity\Coupon</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.coupon" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Coupon\Entity\Coupon</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.director.coupon" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.coupon"/>
      <argument type="service" id="elcodi.repository.coupon"/>
      <argument type="service" id="elcodi.factory.coupon"/>
    </service>
    <service id="elcodi.manager.rule" class="Elcodi\Component\Rule\Services\RuleManager" lazy="true">
      <argument type="service" id="elcodi.expression_language"/>
      <argument type="service" id="elcodi.expression_language_context_collector"/>
    </service>
    <service id="elcodi.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage">
      <call method="registerProvider">
        <argument type="service" id="elcodi.expression_language_container_provider"/>
      </call>
      <call method="registerProvider">
        <argument type="service" id="elcodi.expression_language_rule_provider"/>
      </call>
      <call method="registerProvider">
        <argument type="service" id="elcodi.expression_language.money_provider"/>
      </call>
    </service>
    <service id="elcodi.expression_language_context_collector" class="Elcodi\Component\Rule\ExpressionLanguage\Context\ContextCollector">
      <argument type="collection"/>
    </service>
    <service id="elcodi.expression_language_container_provider" class="Elcodi\Component\Rule\ExpressionLanguage\Provider\ContainerProvider">
      <tag name="elcodi.rule_configuration"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="elcodi.expression_language_rule_provider" class="Elcodi\Component\Rule\ExpressionLanguage\Provider\RuleProvider">
      <tag name="elcodi.rule_configuration"/>
      <argument type="service" id="elcodi.repository.rule"/>
      <argument type="service" id="elcodi.manager.rule"/>
    </service>
    <service id="elcodi.factory.rule" class="Elcodi\Component\Rule\Factory\RuleFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Rule\Entity\Rule</argument>
      </call>
    </service>
    <service id="elcodi.object_manager.rule" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Rule\Entity\Rule</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.rule" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Rule\Entity\Rule</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.director.rule" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.rule"/>
      <argument type="service" id="elcodi.repository.rule"/>
      <argument type="service" id="elcodi.factory.rule"/>
    </service>
    <service id="elcodi.container_parameters" class="Symfony\Component\DependencyInjection\ParameterBag\ParameterBag">
      <factory service="service_container" method="getParameterBag"/>
    </service>
    <service id="elcodi.provider.manager" class="Elcodi\Component\Core\Services\ManagerProvider">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="elcodi.container_parameters"/>
    </service>
    <service id="elcodi.provider.repository" class="Elcodi\Component\Core\Services\RepositoryProvider">
      <argument type="service" id="elcodi.provider.manager"/>
      <argument type="service" id="elcodi.container_parameters"/>
    </service>
    <service id="elcodi.mapping_provider" class="Elcodi\Component\Core\Services\MappingProvider">
      <argument type="collection">
        <argument key="Elcodi\Plugin\CustomShippingBundle\Entity\Interfaces\CarrierInterface">Elcodi\Plugin\CustomShippingBundle\Entity\Carrier</argument>
        <argument key="Elcodi\Plugin\CustomShippingBundle\Entity\Interfaces\ShippingRangeInterface">Elcodi\Plugin\CustomShippingBundle\Entity\ShippingRange</argument>
        <argument key="Elcodi\Store\ConnectBundle\Entity\AuthorizationInterface">Elcodi\Store\ConnectBundle\Entity\Authorization</argument>
        <argument key="Elcodi\Component\Comment\Entity\Interfaces\CommentInterface">Elcodi\Component\Comment\Entity\Comment</argument>
        <argument key="Elcodi\Component\Comment\Entity\Interfaces\VoteInterface">Elcodi\Component\Comment\Entity\Vote</argument>
        <argument key="Elcodi\Component\Metric\Core\Entity\Interfaces\EntryInterface">Elcodi\Component\Metric\Core\Entity\Entry</argument>
        <argument key="Elcodi\Component\Page\Entity\Interfaces\PageInterface">Elcodi\Component\Page\Entity\Page</argument>
        <argument key="Elcodi\Component\Newsletter\Entity\Interfaces\NewsletterSubscriptionInterface">Elcodi\Component\Newsletter\Entity\NewsletterSubscription</argument>
        <argument key="Elcodi\Component\Banner\Entity\Interfaces\BannerInterface">Elcodi\Component\Banner\Entity\Banner</argument>
        <argument key="Elcodi\Component\Banner\Entity\Interfaces\BannerZoneInterface">Elcodi\Component\Banner\Entity\BannerZone</argument>
        <argument key="Elcodi\Component\CartCoupon\Entity\Interfaces\CartCouponInterface">Elcodi\Component\CartCoupon\Entity\CartCoupon</argument>
        <argument key="Elcodi\Component\CartCoupon\Entity\Interfaces\OrderCouponInterface">Elcodi\Component\CartCoupon\Entity\OrderCoupon</argument>
        <argument key="Elcodi\Component\Menu\Entity\Menu\Interfaces\NodeInterface">Elcodi\Component\Menu\Entity\Menu\Node</argument>
        <argument key="Elcodi\Component\Menu\Entity\Menu\Interfaces\MenuInterface">Elcodi\Component\Menu\Entity\Menu\Menu</argument>
        <argument key="Elcodi\Component\EntityTranslator\Entity\Interfaces\EntityTranslationInterface">Elcodi\Component\EntityTranslator\Entity\EntityTranslation</argument>
        <argument key="Elcodi\Component\Tax\Entity\Interfaces\TaxInterface">Elcodi\Component\Tax\Entity\Tax</argument>
        <argument key="Elcodi\Component\Zone\Entity\Interfaces\ZoneInterface">Elcodi\Component\Zone\Entity\Zone</argument>
        <argument key="Elcodi\Component\StateTransitionMachine\Entity\Interfaces\StateLineInterface">Elcodi\Component\StateTransitionMachine\Entity\StateLine</argument>
        <argument key="Elcodi\Component\Product\Entity\Interfaces\PurchasableInterface">Elcodi\Component\Product\Entity\Purchasable</argument>
        <argument key="Elcodi\Component\Product\Entity\Interfaces\ProductInterface">Elcodi\Component\Product\Entity\Product</argument>
        <argument key="Elcodi\Component\Product\Entity\Interfaces\VariantInterface">Elcodi\Component\Product\Entity\Variant</argument>
        <argument key="Elcodi\Component\Product\Entity\Interfaces\PackInterface">Elcodi\Component\Product\Entity\Pack</argument>
        <argument key="Elcodi\Component\Product\Entity\Interfaces\ManufacturerInterface">Elcodi\Component\Product\Entity\Manufacturer</argument>
        <argument key="Elcodi\Component\Product\Entity\Interfaces\CategoryInterface">Elcodi\Component\Product\Entity\Category</argument>
        <argument key="Elcodi\Component\User\Entity\Interfaces\CustomerInterface">Elcodi\Component\User\Entity\Customer</argument>
        <argument key="Elcodi\Component\User\Entity\Interfaces\AdminUserInterface">Elcodi\Component\User\Entity\AdminUser</argument>
        <argument key="Elcodi\Component\Store\Entity\Interfaces\StoreInterface">Elcodi\Component\Store\Entity\Store</argument>
        <argument key="Elcodi\Component\Attribute\Entity\Interfaces\AttributeInterface">Elcodi\Component\Attribute\Entity\Attribute</argument>
        <argument key="Elcodi\Component\Attribute\Entity\Interfaces\ValueInterface">Elcodi\Component\Attribute\Entity\Value</argument>
        <argument key="Elcodi\Component\Geo\Entity\Interfaces\AddressInterface">Elcodi\Component\Geo\Entity\Address</argument>
        <argument key="Elcodi\Component\Geo\Entity\Interfaces\LocationInterface">Elcodi\Component\Geo\Entity\Location</argument>
        <argument key="Elcodi\Component\Media\Entity\Interfaces\ImageInterface">Elcodi\Component\Media\Entity\Image</argument>
        <argument key="Elcodi\Component\Language\Entity\Interfaces\LanguageInterface">Elcodi\Component\Language\Entity\Language</argument>
        <argument key="Elcodi\Component\Currency\Entity\Interfaces\CurrencyInterface">Elcodi\Component\Currency\Entity\Currency</argument>
        <argument key="Elcodi\Component\Rule\Entity\Interfaces\RuleInterface">Elcodi\Component\Rule\Entity\Rule</argument>
        <argument key="Elcodi\Component\Coupon\Entity\Interfaces\CouponInterface">Elcodi\Component\Coupon\Entity\Coupon</argument>
        <argument key="Elcodi\Component\Cart\Entity\Interfaces\CartInterface">Elcodi\Component\Cart\Entity\Cart</argument>
        <argument key="Elcodi\Component\Cart\Entity\Interfaces\OrderInterface">Elcodi\Component\Cart\Entity\Order</argument>
        <argument key="Elcodi\Component\Cart\Entity\Interfaces\CartLineInterface">Elcodi\Component\Cart\Entity\CartLine</argument>
        <argument key="Elcodi\Component\Cart\Entity\Interfaces\OrderLineInterface">Elcodi\Component\Cart\Entity\OrderLine</argument>
      </argument>
    </service>
    <service id="elcodi.referrer_provider" class="Elcodi\Component\Core\Services\ReferrerProvider">
      <argument type="service" id="session"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="elcodi.event_listener.referrer_session" class="Elcodi\Component\Core\EventListener\ReferrerSessionEventListener">
      <tag name="kernel.event_listener" event="kernel.request" method="updateSessionReferrer"/>
    </service>
    <service id="elcodi.generator.random_string" class="Elcodi\Component\Core\Generator\RandomGenerator"/>
    <service id="elcodi.generator.sha1" class="Elcodi\Component\Core\Generator\Sha1Generator">
      <argument type="service" id="elcodi.generator.random_string"/>
    </service>
    <service id="elcodi.generator.uniqid" class="Elcodi\Component\Core\Generator\UniqIdGenerator"/>
    <service id="elcodi.json_encoder" class="Elcodi\Component\Core\Encoder\JsonEncoder"/>
    <service id="elcodi.php_encoder" class="Elcodi\Component\Core\Encoder\PHPEncoder"/>
    <service id="elcodi.extractor" class="Mmoreram\Extractor\Extractor">
      <argument type="service">
        <service class="Mmoreram\Extractor\Filesystem\TemporaryDirectory" public="false"/>
      </argument>
      <argument type="service">
        <service class="Mmoreram\Extractor\Resolver\ExtensionResolver" public="false"/>
      </argument>
    </service>
    <service id="elcodi.factory.datetime" class="Elcodi\Component\Core\Factory\DateTimeFactory"/>
    <service id="elcodi.guzzle_client" class="GuzzleHttp\Client"/>
    <service id="elcodi.manager.currency" class="Elcodi\Component\Currency\Services\CurrencyManager">
      <argument type="service" id="elcodi.repository.currency"/>
      <argument type="service" id="elcodi.repository.currency_exchange_rate"/>
      <argument>USD</argument>
    </service>
    <service id="elcodi.manager.currency_session" class="Elcodi\Component\Currency\Services\CurrencySessionManager">
      <argument type="service" id="session"/>
      <argument>currency_id</argument>
    </service>
    <service id="elcodi.converter.currency" class="Elcodi\Component\Currency\Services\CurrencyConverter">
      <argument type="service" id="elcodi.calculator.exchange_rate"/>
    </service>
    <service id="elcodi.money_printer" class="Elcodi\Component\Currency\Services\MoneyPrinter">
      <argument type="service" id="elcodi.converter.currency"/>
      <argument type="service" id="elcodi.wrapper.currency"/>
      <argument type="service" id="elcodi.locale"/>
    </service>
    <service id="elcodi.populator.currency_exchange_rate" class="Elcodi\Component\Currency\Populator\CurrencyExchangeRatesPopulator" lazy="true">
      <argument type="service" id="elcodi.currency_exchange_rate_adapter.yahoo_finances"/>
      <argument type="service" id="elcodi.director.currency_exchange_rate"/>
      <argument type="service" id="elcodi.repository.currency"/>
      <argument>USD</argument>
    </service>
    <service id="elcodi.calculator.exchange_rate" class="Elcodi\Component\Currency\Services\ExchangeRateCalculator" lazy="true">
      <argument type="service" id="elcodi.manager.currency"/>
      <argument>USD</argument>
    </service>
    <service id="elcodi.wrapper.currency" class="Elcodi\Component\Currency\Wrapper\CurrencyWrapper">
      <argument type="service" id="elcodi.manager.currency_session"/>
      <argument type="service" id="elcodi.repository.currency"/>
      <argument type="service" id="elcodi.wrapper.default_currency"/>
    </service>
    <service id="elcodi.wrapper.empty_money" class="Elcodi\Component\Currency\Wrapper\EmptyMoneyWrapper">
      <argument type="service" id="elcodi.wrapper.default_currency"/>
    </service>
    <service id="elcodi.command.populate_currency_rates" class="Elcodi\Component\Currency\Command\CurrencyExchangeRatesPopulateCommand">
      <tag name="console.command"/>
      <argument type="service" id="elcodi.populator.currency_exchange_rate"/>
    </service>
    <service id="elcodi.currency_exchange_rate_adapter.yahoo_finances" class="Elcodi\Component\Currency\Adapter\CurrencyExchangeRatesProvider\YahooFinanceProviderAdapter">
      <argument type="service" id="elcodi.guzzle_client"/>
    </service>
    <service id="elcodi.currency_exchange_rate_adapter.dummy" class="Elcodi\Component\Currency\Adapter\CurrencyExchangeRatesProvider\DummyProviderAdapter"/>
    <service id="elcodi.expression_language.money_provider" class="Elcodi\Component\Currency\ExpressionLanguage\MoneyProvider">
      <tag name="elcodi.rule_configuration"/>
      <argument type="service" id="elcodi.wrapper.default_currency"/>
      <argument type="service" id="elcodi.repository.currency"/>
    </service>
    <service id="elcodi.factory.currency" class="Elcodi\Component\Currency\Factory\CurrencyFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Currency\Entity\Currency</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.factory.currency_exchange_rate" class="Elcodi\Component\Currency\Factory\CurrencyExchangeRateFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Currency\Entity\CurrencyExchangeRate</argument>
      </call>
    </service>
    <service id="elcodi.object_manager.currency" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Currency\Entity\Currency</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.currency_exchange_rate" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Currency\Entity\CurrencyExchangeRate</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.currency" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Currency\Entity\Currency</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.currency_exchange_rate" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Currency\Entity\CurrencyExchangeRate</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.director.currency" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.currency"/>
      <argument type="service" id="elcodi.repository.currency"/>
      <argument type="service" id="elcodi.factory.currency"/>
    </service>
    <service id="elcodi.director.currency_exchange_rate" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.currency_exchange_rate"/>
      <argument type="service" id="elcodi.repository.currency_exchange_rate"/>
      <argument type="service" id="elcodi.factory.currency_exchange_rate"/>
    </service>
    <service id="elcodi.factory.language" class="Elcodi\Component\Language\Factory\LanguageFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Language\Entity\Language</argument>
      </call>
    </service>
    <service id="elcodi.repository.language" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Language\Entity\Language</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.provider.locale" class="Elcodi\Component\Language\Services\LocaleProvider">
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
    </service>
    <service id="elcodi.manager.language" class="Elcodi\Component\Language\Services\LanguageManager">
      <argument type="service" id="elcodi.repository.language"/>
    </service>
    <service id="elcodi.manager.promoted_language" class="Elcodi\Component\Language\Services\PromotedLanguageManager">
      <argument type="service" id="elcodi.manager.language"/>
      <argument type="service" id="elcodi.locale"/>
    </service>
    <service id="elcodi.manager.locale" class="Elcodi\Component\Language\Services\LocaleManager">
      <argument type="service">
        <service class="Elcodi\Component\Language\Entity\Locale" public="false">
          <factory service="elcodi.provider.locale" method="getLocale"/>
        </service>
      </argument>
      <call method="initialize"/>
    </service>
    <service id="elcodi.languages" class="Doctrine\Common\Collections\Collection">
      <factory service="elcodi.manager.language" method="getLanguages"/>
    </service>
    <service id="elcodi.languages_with_master_promoted" class="Doctrine\Common\Collections\Collection">
      <factory service="elcodi.manager.promoted_language" method="getLanguagesWithMasterLanguagePromoted"/>
    </service>
    <service id="elcodi.languages_iso" class="Doctrine\Common\Collections\Collection">
      <factory service="elcodi.manager.language" method="getLanguagesIso"/>
    </service>
    <service id="elcodi.languages_iso_array" class="stdClass">
      <factory service="elcodi.languages_iso" method="toArray"/>
    </service>
    <service id="elcodi.locale" class="Elcodi\Component\Language\Entity\Locale">
      <factory service="elcodi.manager.locale" method="getLocale"/>
    </service>
    <service id="elcodi.object_manager.language" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Language\Entity\Language</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.director.language" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.language"/>
      <argument type="service" id="elcodi.repository.language"/>
      <argument type="service" id="elcodi.factory.language"/>
    </service>
    <service id="elcodi.manager.media_image" class="Elcodi\Component\Media\Services\ImageManager">
      <argument type="service" id="elcodi.factory.image"/>
      <argument type="service" id="elcodi.manager.media_file"/>
      <argument type="service" id="elcodi.media_resize_adapter.gd"/>
    </service>
    <service id="elcodi.manager.media_file" class="Elcodi\Component\Media\Services\FileManager">
      <argument type="service" id="gaufrette.local_filesystem"/>
      <argument type="service" id="elcodi.transformer.media_file_identifier"/>
    </service>
    <service id="elcodi.uploader.image" class="Elcodi\Component\Media\Services\ImageUploader">
      <argument type="service" id="elcodi.object_manager.image"/>
      <argument type="service" id="elcodi.manager.media_file"/>
      <argument type="service" id="elcodi.manager.media_image"/>
      <argument type="service" id="elcodi.event_dispatcher.media"/>
    </service>
    <service id="elcodi.resolver.image" class="Elcodi\Component\Media\Services\ImageResolver"/>
    <service id="elcodi.factory.image" class="Elcodi\Component\Media\Factory\ImageFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Media\Entity\Image</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.controller.image_resize" class="Elcodi\Component\Media\Controller\ImageResizeController">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="elcodi.repository.image"/>
      <argument type="service" id="elcodi.manager.media_image"/>
      <argument type="service" id="elcodi.transformer.media_image_etag"/>
      <argument>7884000</argument>
      <argument>7884000</argument>
    </service>
    <service id="elcodi.controller.image_upload" class="Elcodi\Component\Media\Controller\ImageUploadController">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="elcodi.uploader.image"/>
      <argument type="service" id="router"/>
      <argument>file</argument>
      <argument>elcodi.route.image_view</argument>
      <argument>elcodi.route.image_resize</argument>
    </service>
    <service id="elcodi.repository.image" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Media\Entity\Image</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.image" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Media\Entity\Image</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.transformer.media_image_etag" class="Elcodi\Component\Media\Transformer\ImageEtagTransformer"/>
    <service id="elcodi.transformer.media_file_identifier" class="Elcodi\Component\Media\Transformer\FileIdentifierTransformer"/>
    <service id="elcodi.event_dispatcher.media" class="Elcodi\Component\Media\EventDispatcher\MediaEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi.director.image" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.image"/>
      <argument type="service" id="elcodi.repository.image"/>
      <argument type="service" id="elcodi.factory.image"/>
    </service>
    <service id="elcodi.media_resize_adapter.imagemagick" class="Elcodi\Component\Media\Adapter\Resizer\ImageMagickResizeAdapter">
      <argument>/usr/bin/convert</argument>
      <argument>/usr/share/color/icc/colord/sRGB.icc</argument>
    </service>
    <service id="elcodi.media_resize_adapter.gd" class="Elcodi\Component\Media\Adapter\Resizer\GDResizeAdapter"/>
    <service id="doctrine_cache.providers.elcodi_categories" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>categories</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.elcodi_menus" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>menus</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.elcodi_translations" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>translations</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.elcodi_comments" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>comments</argument>
      </call>
    </service>
    <service id="elcodi.command.location_populate" class="Elcodi\Component\Geo\Command\LocationPopulateCommand">
      <tag name="console.command"/>
      <argument type="service" id="elcodi.director.location"/>
      <argument type="service" id="elcodi.location_populator"/>
    </service>
    <service id="elcodi.command.location_load" class="Elcodi\Component\Geo\Command\LocationLoadCommand">
      <tag name="console.command"/>
      <argument type="service" id="elcodi.director.location"/>
      <argument type="service" id="elcodi.location_loader"/>
    </service>
    <service id="elcodi.command.location_drop" class="Elcodi\Component\Geo\Command\LocationDropCommand">
      <tag name="console.command"/>
      <argument type="service" id="elcodi.director.location"/>
    </service>
    <service id="elcodi.controller.location_api" class="Elcodi\Component\Geo\Controller\LocationApiController">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="elcodi.location_provider_adapter.service"/>
    </service>
    <service id="elcodi.director.address" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.address"/>
      <argument type="service" id="elcodi.repository.address"/>
      <argument type="service" id="elcodi.factory.address"/>
    </service>
    <service id="elcodi.director.location" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.location"/>
      <argument type="service" id="elcodi.repository.location"/>
      <argument type="service" id="elcodi.factory.location"/>
    </service>
    <service id="elcodi.factory.address" class="Elcodi\Component\Geo\Factory\AddressFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Geo\Entity\Address</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.factory.location" class="Elcodi\Component\Geo\Factory\LocationFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Geo\Entity\Location</argument>
      </call>
    </service>
    <service id="elcodi.factory.location_data" class="Elcodi\Component\Geo\Factory\LocationDataFactory"/>
    <service id="elcodi.factory.address_view" class="Elcodi\Component\Geo\Factory\AddressViewFactory">
      <argument type="service" id="elcodi.location_provider_adapter.service"/>
    </service>
    <service id="elcodi.object_manager.address" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Geo\Entity\Address</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.location" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Geo\Entity\Location</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.address" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Geo\Entity\Address</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.location" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Geo\Entity\Location</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.location_builder" class="Elcodi\Component\Geo\Services\LocationBuilder">
      <argument type="service" id="elcodi.factory.location"/>
    </service>
    <service id="elcodi.location_populator" class="Elcodi\Component\Geo\Services\LocationPopulator">
      <argument type="service" id="elcodi.location_populator_adapter.geonames"/>
      <argument type="service" id="elcodi.object_manager.location"/>
    </service>
    <service id="elcodi.location_loader" class="Elcodi\Component\Geo\Services\LocationLoader">
      <argument type="service" id="elcodi.object_manager.location"/>
      <argument type="service" id="elcodi.location_loader_adapter.github"/>
    </service>
    <service id="elcodi.manager.address" class="Elcodi\Component\Geo\Services\AddressManager">
      <argument type="service" id="elcodi.object_manager.address"/>
      <argument type="service" id="elcodi.event_dispatcher.address"/>
    </service>
    <service id="elcodi.location_api_urls" class="Elcodi\Component\Geo\ValueObject\ApiUrls">
      <argument>elcodi.route.location_api_root_locations</argument>
      <argument>elcodi.route.location_api_children</argument>
      <argument>elcodi.route.location_api_parents</argument>
      <argument>elcodi.route.location_api_location</argument>
      <argument>elcodi.route.location_api_hierarchy</argument>
      <argument>elcodi.route.location_api_in</argument>
    </service>
    <service id="elcodi.transformer.location_to_location_data" class="Elcodi\Component\Geo\Transformer\LocationToLocationDataTransformer">
      <argument type="service" id="elcodi.factory.location_data"/>
    </service>
    <service id="elcodi.event_dispatcher.address" class="Elcodi\Component\Geo\EventDispatcher\AddressEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi.formatter.address" class="Elcodi\Component\Geo\Formatter\AddressFormatter">
      <argument type="service" id="elcodi.location_provider_adapter.service"/>
    </service>
    <service id="elcodi.location_loader_adapter.github" class="Elcodi\Component\Geo\Adapter\LocationLoader\GithubLocationLoaderAdapter"/>
    <service id="elcodi.location_populator_adapter.geonames" class="Elcodi\Component\Geo\Adapter\LocationPopulator\GeonamesLocationPopulatorAdapter">
      <argument type="service" id="elcodi.extractor"/>
      <argument type="service" id="elcodi.location_builder"/>
    </service>
    <service id="elcodi.location_provider_adapter.service" class="Elcodi\Component\Geo\Adapter\LocationProvider\LocationServiceProviderAdapter">
      <argument type="service" id="elcodi.repository.location"/>
      <argument type="service" id="elcodi.transformer.location_to_location_data"/>
    </service>
    <service id="elcodi.location_provider_adapter.api" class="Elcodi\Component\Geo\Adapter\LocationProvider\LocationApiProviderAdapter">
      <argument type="service" id="elcodi.factory.location_data"/>
      <argument type="service" id="router"/>
      <argument type="service" id="elcodi.location_api_urls"/>
      <argument>null</argument>
    </service>
    <service id="elcodi.validator.city_exists" class="Elcodi\Component\Geo\Validator\Constraints\CityExistsValidator">
      <tag name="validator.constraint_validator" alias="city_exists"/>
      <argument type="service" id="elcodi.location_provider_adapter.service"/>
    </service>
    <service id="knp_gaufrette.filesystem_map" class="Knp\Bundle\GaufretteBundle\FilesystemMap">
      <argument type="collection">
        <argument key="local" type="service" id="gaufrette.local_filesystem"/>
      </argument>
    </service>
    <service id="gaufrette.local_filesystem" class="Gaufrette\Filesystem">
      <argument type="service">
        <service class="Gaufrette\Adapter\Local" public="false">
          <argument>/Users/michael/Documents/workspace/bamboo/app/../web/local</argument>
          <argument>true</argument>
        </service>
      </argument>
    </service>
    <service id="elcodi.factory.attribute" class="Elcodi\Component\Attribute\Factory\AttributeFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Attribute\Entity\Attribute</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.factory.attribute_value" class="Elcodi\Component\Attribute\Factory\ValueFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Attribute\Entity\Value</argument>
      </call>
    </service>
    <service id="elcodi.repository.attribute" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Attribute\Entity\Attribute</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.attribute_value" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Attribute\Entity\Value</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.attribute" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Attribute\Entity\Attribute</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.attribute_value" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Attribute\Entity\Value</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.director.attribute" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.attribute"/>
      <argument type="service" id="elcodi.repository.attribute"/>
      <argument type="service" id="elcodi.factory.attribute"/>
    </service>
    <service id="elcodi.director.attribute_value" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.attribute_value"/>
      <argument type="service" id="elcodi.repository.attribute_value"/>
      <argument type="service" id="elcodi.factory.attribute_value"/>
    </service>
    <service id="elcodi.repository.store" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Store\Entity\Store</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.store" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Store\Entity\Store</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.director.store" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.store"/>
      <argument type="service" id="elcodi.repository.store"/>
      <argument type="service" id="elcodi.factory.store"/>
    </service>
    <service id="elcodi.factory.store" class="Elcodi\Component\Store\Factory\StoreFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Store\Entity\Store</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.wrapper.store" class="Elcodi\Component\Store\Wrapper\StoreWrapper" lazy="true">
      <argument type="service" id="elcodi.repository.store"/>
    </service>
    <service id="elcodi.store" class="Elcodi\Component\Store\Entity\Interfaces\StoreInterface" lazy="true">
      <factory service="elcodi.wrapper.store" method="get"/>
    </service>
    <service id="elcodi.store_uses_stock" class="StdClass">
      <factory service="elcodi.store" method="getUseStock"/>
    </service>
    <service id="elcodi.store_tracker" class="StdClass">
      <factory service="elcodi.store" method="getTracker"/>
    </service>
    <service id="elcodi.store_address" class="Elcodi\Component\Geo\Entity\Address" lazy="true">
      <factory service="elcodi.store" method="getAddress"/>
    </service>
    <service id="elcodi.store_template_hash" class="StdClass">
      <factory service="elcodi.store" method="getTemplate"/>
    </service>
    <service id="elcodi.store_template" class="Elcodi\Component\Plugin\Entity\Plugin" lazy="true">
      <argument type="collection">
        <argument key="hash" type="service" id="elcodi.store_template_hash"/>
      </argument>
      <factory service="elcodi.repository.plugin" method="findOneBy"/>
    </service>
    <service id="elcodi.store_template_bundle" class="StdClass">
      <factory service="elcodi.store_template" method="getBundleName"/>
    </service>
    <service id="elcodi.store_default_language" class="Elcodi\Component\Language\Entity\Interfaces\LanguageInterface" lazy="true">
      <factory service="elcodi.store" method="getDefaultLanguage"/>
    </service>
    <service id="elcodi.store_default_language_iso" class="StdClass">
      <factory service="elcodi.store_default_language" method="getIso"/>
    </service>
    <service id="elcodi.store_routing_strategy" class="StdClass">
      <factory service="elcodi.store" method="getRoutingStrategy"/>
    </service>
    <service id="elcodi.store_default_currency" class="Elcodi\Component\Language\Entity\Interfaces\CurrencyInterface" lazy="true">
      <factory service="elcodi.store" method="getDefaultCurrency"/>
    </service>
    <service id="elcodi.store_default_currency_iso" class="StdClass">
      <factory service="elcodi.store_default_currency" method="getIso"/>
    </service>
    <service id="elcodi.event_listener.update_cart_with_user" class="Elcodi\Component\User\EventListener\UpdateCartWithUserListener">
      <tag name="kernel.event_listener" event="security.authentication.success" method="onAuthenticationSuccess"/>
      <argument type="service" id="elcodi.wrapper.cart"/>
      <argument type="service" id="elcodi.object_manager.cart"/>
    </service>
    <service id="elcodi.event_listener.update_last_login" class="Elcodi\Component\User\EventListener\UpdateLastLoginEventListener">
      <tag name="kernel.event_listener" event="security.interactive_login" method="updateLastLogin"/>
      <argument type="service" id="elcodi.provider.manager"/>
      <argument type="service" id="elcodi.factory.datetime"/>
    </service>
    <service id="elcodi.manager.password" class="Elcodi\Component\User\Services\PasswordManager">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="router"/>
      <argument type="service" id="elcodi.event_dispatcher.password"/>
      <argument type="service" id="elcodi.generator.sha1"/>
    </service>
    <service id="elcodi.manager.customer" class="Elcodi\Component\User\Services\CustomerManager">
      <argument type="service" id="elcodi.event_dispatcher.user"/>
    </service>
    <service id="elcodi.manager.admin_user" class="Elcodi\Component\User\Services\AdminUserManager">
      <argument type="service" id="elcodi.event_dispatcher.user"/>
    </service>
    <service id="elcodi.factory.customer" class="Elcodi\Component\User\Factory\CustomerFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\User\Entity\Customer</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
      <call method="setGenerator">
        <argument type="service" id="elcodi.generator.random_string"/>
      </call>
    </service>
    <service id="elcodi.factory.admin_user" class="Elcodi\Component\User\Factory\AdminUserFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\User\Entity\AdminUser</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
      <call method="setGenerator">
        <argument type="service" id="elcodi.generator.random_string"/>
      </call>
    </service>
    <service id="elcodi.repository.customer" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\User\Entity\Customer</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.admin_user" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\User\Entity\AdminUser</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.wrapper.customer" class="Elcodi\Component\User\Wrapper\CustomerWrapper">
      <argument type="service" id="elcodi.factory.customer"/>
      <argument type="service" id="security.token_storage" on-invalid="ignore"/>
    </service>
    <service id="elcodi.wrapper.admin_user" class="Elcodi\Component\User\Wrapper\AdminUserWrapper">
      <argument type="service" id="elcodi.factory.admin_user"/>
      <argument type="service" id="security.token_storage" on-invalid="ignore"/>
    </service>
    <service id="elcodi.customer_provider_entity_instance" class="Elcodi\Component\User\Entity\Customer">
      <factory service="elcodi.factory.customer" method="create"/>
    </service>
    <service id="elcodi.admin_user_provider_entity_instance" class="Elcodi\Component\User\Entity\AdminUser">
      <factory service="elcodi.factory.admin_user" method="create"/>
    </service>
    <service id="elcodi.provider.customer_provider" class="Symfony\Component\Security\Core\Encoder\PasswordEncoderInterface">
      <argument type="service" id="elcodi.customer_provider_entity_instance"/>
      <factory service="security.encoder_factory" method="getEncoder"/>
    </service>
    <service id="elcodi.provider.admin_user_provider" class="Symfony\Component\Security\Core\Encoder\PasswordEncoderInterface">
      <argument type="service" id="elcodi.admin_user_provider_entity_instance"/>
      <factory service="security.encoder_factory" method="getEncoder"/>
    </service>
    <service id="elcodi.object_manager.customer" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\User\Entity\Customer</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.admin_user" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\User\Entity\AdminUser</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.director.customer" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.customer"/>
      <argument type="service" id="elcodi.repository.customer"/>
      <argument type="service" id="elcodi.factory.customer"/>
    </service>
    <service id="elcodi.director.admin_user" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.admin_user"/>
      <argument type="service" id="elcodi.repository.admin_user"/>
      <argument type="service" id="elcodi.factory.admin_user"/>
    </service>
    <service id="elcodi.event_dispatcher.user" class="Elcodi\Component\User\EventDispatcher\UserEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi.event_dispatcher.password" class="Elcodi\Component\User\EventDispatcher\PasswordEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi.provider.category_tree" class="Elcodi\Component\Product\Services\CategoryTree">
      <argument type="service" id="elcodi.repository.category"/>
    </service>
    <service id="elcodi.service.category_integrity_fixer" class="Elcodi\Component\Product\Services\CategoryIntegrityFixer"/>
    <service id="elcodi.resolver.product_options" class="Elcodi\Component\Product\Services\ProductOptionsResolver"/>
    <service id="elcodi.factory.product" class="Elcodi\Component\Product\Factory\ProductFactory">
      <argument type="service" id="elcodi.wrapper.empty_money"/>
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Product\Entity\Product</argument>
      </call>
      <call method="setUseStock">
        <argument type="service" id="elcodi.store_uses_stock"/>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.factory.product_variant" class="Elcodi\Component\Product\Factory\VariantFactory">
      <argument type="service" id="elcodi.wrapper.empty_money"/>
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Product\Entity\Variant</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.factory.purchasable_pack" class="Elcodi\Component\Product\Factory\PackFactory">
      <argument type="service" id="elcodi.wrapper.empty_money"/>
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Product\Entity\Pack</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.factory.manufacturer" class="Elcodi\Component\Product\Factory\ManufacturerFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Product\Entity\Manufacturer</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.factory.category" class="Elcodi\Component\Product\Factory\CategoryFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Product\Entity\Category</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.repository.purchasable" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Product\Entity\Purchasable</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.product" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Product\Entity\Product</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.product_variant" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Product\Entity\Variant</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.purchasable_pack" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Product\Entity\Pack</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.category" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Product\Entity\Category</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.manufacturer" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Product\Entity\Manufacturer</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.purchasable" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Product\Entity\Purchasable</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.product" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Product\Entity\Product</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.product_variant" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Product\Entity\Variant</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.purchasable_pack" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Product\Entity\Pack</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.category" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Product\Entity\Category</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.manufacturer" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Product\Entity\Manufacturer</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.director.product" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.product"/>
      <argument type="service" id="elcodi.repository.product"/>
      <argument type="service" id="elcodi.factory.product"/>
    </service>
    <service id="elcodi.director.product_variant" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.product_variant"/>
      <argument type="service" id="elcodi.repository.product_variant"/>
      <argument type="service" id="elcodi.factory.product_variant"/>
    </service>
    <service id="elcodi.director.purchasable_pack" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.purchasable_pack"/>
      <argument type="service" id="elcodi.repository.purchasable_pack"/>
      <argument type="service" id="elcodi.factory.purchasable_pack"/>
    </service>
    <service id="elcodi.director.category" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.category"/>
      <argument type="service" id="elcodi.repository.category"/>
      <argument type="service" id="elcodi.factory.category"/>
    </service>
    <service id="elcodi.director.manufacturer" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.manufacturer"/>
      <argument type="service" id="elcodi.repository.manufacturer"/>
      <argument type="service" id="elcodi.factory.manufacturer"/>
    </service>
    <service id="elcodi.event_listener.fix_category_integrity" class="Elcodi\Component\Product\EventListener\CategoryIntegrityEventListener">
      <tag name="doctrine.event_listener" event="preFlush" method="preFlush"/>
      <tag name="doctrine.event_listener" event="preUpdate" method="preUpdate"/>
      <argument type="service" id="elcodi.service.category_integrity_fixer"/>
    </service>
    <service id="elcodi.event_listener.root_category" class="Elcodi\Component\Product\EventListener\RootCategoryEventListener">
      <tag name="doctrine.event_listener" event="preFlush" method="preFlush"/>
      <tag name="doctrine.event_listener" event="preUpdate" method="preUpdate"/>
    </service>
    <service id="elcodi.related_purchasables_provider.same_category" class="Elcodi\Component\Product\Adapter\SimilarPurchasablesProvider\SameCategoryRelatedPurchasableProvider">
      <argument type="service" id="elcodi.repository.purchasable"/>
    </service>
    <service id="elcodi.name_resolver.product" class="Elcodi\Component\Product\NameResolver\ProductNameResolver">
      <tag name="elcodi.purchasable_name_resolver"/>
    </service>
    <service id="elcodi.name_resolver.product_variant" class="Elcodi\Component\Product\NameResolver\VariantNameResolver">
      <tag name="elcodi.purchasable_name_resolver"/>
    </service>
    <service id="elcodi.name_resolver.purchasable_pack" class="Elcodi\Component\Product\NameResolver\PackNameResolver">
      <tag name="elcodi.purchasable_name_resolver"/>
    </service>
    <service id="elcodi.name_resolver.purchasable" class="Elcodi\Component\Product\NameResolver\PurchasableNameResolver">
      <call method="addPurchasableNameResolver">
        <argument type="service" id="elcodi.name_resolver.product"/>
      </call>
      <call method="addPurchasableNameResolver">
        <argument type="service" id="elcodi.name_resolver.product_variant"/>
      </call>
      <call method="addPurchasableNameResolver">
        <argument type="service" id="elcodi.name_resolver.purchasable_pack"/>
      </call>
    </service>
    <service id="elcodi.stock_updater.product" class="Elcodi\Component\Product\StockUpdater\ProductStockUpdater">
      <tag name="elcodi.purchasable_stock_updater"/>
      <argument type="service" id="elcodi.object_manager.product"/>
    </service>
    <service id="elcodi.stock_updater.product_variant" class="Elcodi\Component\Product\StockUpdater\VariantStockUpdater">
      <tag name="elcodi.purchasable_stock_updater"/>
      <argument type="service" id="elcodi.object_manager.product_variant"/>
    </service>
    <service id="elcodi.stock_updater.purchasable_pack" class="Elcodi\Component\Product\StockUpdater\PackStockUpdater">
      <tag name="elcodi.purchasable_stock_updater"/>
      <argument type="service" id="elcodi.object_manager.purchasable_pack"/>
      <call method="addPurchasableStockUpdater">
        <argument type="service" id="elcodi.stock_updater.product"/>
      </call>
      <call method="addPurchasableStockUpdater">
        <argument type="service" id="elcodi.stock_updater.product_variant"/>
      </call>
    </service>
    <service id="elcodi.stock_updater.purchasable" class="Elcodi\Component\Product\StockUpdater\PurchasableStockUpdater">
      <call method="addPurchasableStockUpdater">
        <argument type="service" id="elcodi.stock_updater.product"/>
      </call>
      <call method="addPurchasableStockUpdater">
        <argument type="service" id="elcodi.stock_updater.product_variant"/>
      </call>
      <call method="addPurchasableStockUpdater">
        <argument type="service" id="elcodi.stock_updater.purchasable_pack"/>
      </call>
    </service>
    <service id="elcodi.stock_validator.product" class="Elcodi\Component\Product\StockValidator\ProductStockValidator">
      <tag name="elcodi.purchasable_stock_validator"/>
    </service>
    <service id="elcodi.stock_validator.product_variant" class="Elcodi\Component\Product\StockValidator\VariantStockValidator">
      <tag name="elcodi.purchasable_stock_validator"/>
    </service>
    <service id="elcodi.stock_validator.purchasable_pack" class="Elcodi\Component\Product\StockValidator\PackStockValidator">
      <tag name="elcodi.purchasable_stock_validator"/>
      <call method="addPurchasableStockValidator">
        <argument type="service" id="elcodi.stock_validator.product"/>
      </call>
      <call method="addPurchasableStockValidator">
        <argument type="service" id="elcodi.stock_validator.product_variant"/>
      </call>
    </service>
    <service id="elcodi.stock_validator.purchasable" class="Elcodi\Component\Product\StockValidator\PurchasableStockValidator">
      <call method="addPurchasableStockValidator">
        <argument type="service" id="elcodi.stock_validator.product"/>
      </call>
      <call method="addPurchasableStockValidator">
        <argument type="service" id="elcodi.stock_validator.product_variant"/>
      </call>
      <call method="addPurchasableStockValidator">
        <argument type="service" id="elcodi.stock_validator.purchasable_pack"/>
      </call>
    </service>
    <service id="elcodi.image_resolver.abstract_product" class="Elcodi\Component\Product\ImageResolver\Abstracts\AbstractImageResolver">
      <argument type="service" id="elcodi.resolver.image"/>
    </service>
    <service id="elcodi.image_resolver.product" class="Elcodi\Component\Product\ImageResolver\ProductImageResolver">
      <tag name="elcodi.purchasable_image_resolver"/>
      <argument type="service" id="elcodi.resolver.image"/>
    </service>
    <service id="elcodi.image_resolver.product_variant" class="Elcodi\Component\Product\ImageResolver\VariantImageResolver">
      <tag name="elcodi.purchasable_image_resolver"/>
      <argument type="service" id="elcodi.resolver.image"/>
      <call method="addPurchasableImageResolver">
        <argument type="service" id="elcodi.image_resolver.product"/>
      </call>
    </service>
    <service id="elcodi.image_resolver.purchasable_pack" class="Elcodi\Component\Product\ImageResolver\PackImageResolver">
      <tag name="elcodi.purchasable_image_resolver"/>
      <argument type="service" id="elcodi.resolver.image"/>
      <call method="addPurchasableImageResolver">
        <argument type="service" id="elcodi.image_resolver.product"/>
      </call>
      <call method="addPurchasableImageResolver">
        <argument type="service" id="elcodi.image_resolver.product_variant"/>
      </call>
    </service>
    <service id="elcodi.image_resolver.purchasable" class="Elcodi\Component\Product\ImageResolver\PurchasableImageResolver">
      <call method="addPurchasableImageResolver">
        <argument type="service" id="elcodi.image_resolver.product"/>
      </call>
      <call method="addPurchasableImageResolver">
        <argument type="service" id="elcodi.image_resolver.product_variant"/>
      </call>
      <call method="addPurchasableImageResolver">
        <argument type="service" id="elcodi.image_resolver.purchasable_pack"/>
      </call>
    </service>
    <service id="elcodi.factory.state_transition_machine" class="Elcodi\Component\StateTransitionMachine\Factory\MachineFactory"/>
    <service id="elcodi.factory.state_transition_machine_state_line" class="Elcodi\Component\StateTransitionMachine\Factory\StateLineFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\StateTransitionMachine\Entity\StateLine</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.repository.state_transition_machine_state_line" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\StateTransitionMachine\Entity\StateLine</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.state_transition_machine_state_line" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\StateTransitionMachine\Entity\StateLine</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.director.state_transition_machine_state_line" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.state_transition_machine_state_line"/>
      <argument type="service" id="elcodi.repository.state_transition_machine_state_line"/>
      <argument type="service" id="elcodi.factory.state_transition_machine_state_line"/>
    </service>
    <service id="elcodi.event_dispatcher.machine" class="Elcodi\Component\StateTransitionMachine\EventDispatcher\MachineEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi.wrapper.shipping_methods" class="Elcodi\Component\Shipping\Wrapper\ShippingWrapper">
      <argument type="service" id="elcodi.event_dispatcher.shipping"/>
    </service>
    <service id="elcodi.shipping_plugins" class="StdClass">
      <argument type="collection">
        <argument key="type">plugin</argument>
        <argument key="category">shipping</argument>
      </argument>
      <factory service="elcodi.repository.plugin" method="findBy"/>
    </service>
    <service id="elcodi.enabled_shipping_plugins" class="StdClass">
      <argument type="collection">
        <argument key="enabled">true</argument>
        <argument key="type">plugin</argument>
        <argument key="category">shipping</argument>
      </argument>
      <factory service="elcodi.repository.plugin" method="findBy"/>
    </service>
    <service id="elcodi.event_dispatcher.shipping" class="Elcodi\Component\Shipping\EventDispatcher\ShippingEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi.resolver.shipping" class="Elcodi\Component\Shipping\Resolver\ShippingResolver">
      <argument type="service" id="elcodi.converter.currency"/>
    </service>
    <service id="paymentsuite.event_dispatcher" class="PaymentSuite\PaymentCoreBundle\Services\PaymentEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="paymentsuite.logger" class="PaymentSuite\PaymentCoreBundle\Services\PaymentLogger">
      <tag name="monolog.logger" channel="paymentsuite"/>
      <argument type="service" id="monolog.logger.paymentsuite"/>
      <argument>true</argument>
    </service>
    <service id="paymentsuite.bridge" class="Elcodi\Bridge\PaymentSuiteBridgeBundle\Services\PaymentBridge">
      <argument type="service" id="elcodi.repository.order"/>
      <argument type="service" id="elcodi.wrapper.cart"/>
      <argument type="service" id="elcodi.converter.currency"/>
      <argument type="service" id="elcodi.name_resolver.purchasable"/>
    </service>
    <service id="elcodi_bridge.payment_suite.event_listener.cart_paid" class="Elcodi\Bridge\PaymentSuiteBridgeBundle\EventListener\CartPaidEventListener">
      <tag name="kernel.event_listener" event="payment.order.load" method="transformCartToOrder"/>
      <argument type="service" id="elcodi.wrapper.cart"/>
      <argument type="service" id="elcodi.transformer.cart_order"/>
    </service>
    <service id="elcodi_bridge.payment_suite.event_listener.order_to_paid" class="Elcodi\Bridge\PaymentSuiteBridgeBundle\EventListener\OrderToPaidEventListener">
      <tag name="kernel.event_listener" event="payment.order.success" method="setOrderToPaid"/>
      <argument type="service" id="elcodi.order_payment_states_machine_manager"/>
      <argument type="service" id="elcodi.object_manager.order"/>
      <argument type="service" id="elcodi.object_manager.state_transition_machine_state_line"/>
    </service>
    <service id="paymentsuite.paypal_web_checkout.routes" class="PaymentSuite\PaymentCoreBundle\ValueObject\RedirectionRouteCollection">
      <call method="addRedirectionRoute">
        <argument type="service" id="paymentsuite.paypal_web_checkout.route_success"/>
        <argument>success</argument>
      </call>
      <call method="addRedirectionRoute">
        <argument type="service" id="paymentsuite.paypal_web_checkout.route_cancel"/>
        <argument>cancel</argument>
      </call>
    </service>
    <service id="paymentsuite.paypal_web_checkout.route_success" class="PaymentSuite\PaymentCoreBundle\ValueObject\RedirectionRoute">
      <argument>store_order_thanks</argument>
      <argument>true</argument>
      <argument>id</argument>
    </service>
    <service id="paymentsuite.paypal_web_checkout.route_cancel" class="PaymentSuite\PaymentCoreBundle\ValueObject\RedirectionRoute">
      <argument>store_homepage</argument>
      <argument>false</argument>
      <argument>order_id</argument>
    </service>
    <service id="paymentsuite.paypal_web_checkout.payment_controller" class="PaymentSuite\PaypalWebCheckoutBundle\Controller\PaymentController">
      <argument type="service" id="paymentsuite.paypal_web_checkout.manager"/>
      <argument type="service" id="templating"/>
    </service>
    <service id="paymentsuite.paypal_web_checkout.process_controller" class="PaymentSuite\PaypalWebCheckoutBundle\Controller\ProcessController">
      <argument type="service" id="paymentsuite.paypal_web_checkout.manager"/>
      <argument type="service" id="paymentsuite.logger"/>
    </service>
    <service id="paymentsuite.paypal_web_checkout.form_type_factory" class="PaymentSuite\PaypalWebCheckoutBundle\Services\PaypalWebCheckoutFormTypeFactory">
      <argument type="service" id="paymentsuite.paypal_web_checkout.url_factory"/>
      <argument type="service" id="paymentsuite.bridge"/>
      <argument type="service" id="form.factory"/>
      <argument>default</argument>
    </service>
    <service id="paymentsuite.paypal_web_checkout.manager" class="PaymentSuite\PaypalWebCheckoutBundle\Services\PaypalWebCheckoutManager">
      <argument type="service" id="paymentsuite.paypal_web_checkout.url_factory"/>
      <argument type="service" id="paymentsuite.paypal_web_checkout.form_type_factory"/>
      <argument type="service" id="paymentsuite.paypal_web_checkout.method_factory"/>
      <argument type="service" id="paymentsuite.bridge"/>
      <argument type="service" id="paymentsuite.event_dispatcher"/>
    </service>
    <service id="paymentsuite.paypal_web_checkout.url_factory" class="PaymentSuite\PaypalWebCheckoutBundle\Services\PaypalWebCheckoutUrlFactory">
      <argument type="service" id="paymentsuite.paypal_web_checkout.routes"/>
      <argument type="service" id="router"/>
      <argument>https://www.sandbox.paypal.com/cgi-bin/webscr</argument>
    </service>
    <service id="paymentsuite.paypal_web_checkout.method_factory" class="PaymentSuite\PaypalWebCheckoutBundle\Services\PaypalWebCheckoutMethodFactory"/>
    <service id="paymentsuite.freepayment.routes" class="PaymentSuite\PaymentCoreBundle\ValueObject\RedirectionRouteCollection">
      <call method="addRedirectionRoute">
        <argument type="service" id="paymentsuite.freepayment.route_success"/>
        <argument>success</argument>
      </call>
    </service>
    <service id="paymentsuite.freepayment.route_success" class="PaymentSuite\PaymentCoreBundle\ValueObject\RedirectionRoute">
      <argument>store_order_thanks</argument>
      <argument>true</argument>
      <argument>id</argument>
    </service>
    <service id="paymentsuite.freepayment.payment_controller" class="PaymentSuite\FreePaymentBundle\Controller\PaymentController">
      <argument type="service" id="paymentsuite.freepayment.manager"/>
      <argument type="service" id="paymentsuite.freepayment.route_success"/>
      <argument type="service" id="paymentsuite.bridge"/>
      <argument type="service" id="router"/>
    </service>
    <service id="paymentsuite.freepayment.method_factory" class="PaymentSuite\FreePaymentBundle\Services\FreePaymentMethodFactory"/>
    <service id="paymentsuite.freepayment.manager" class="PaymentSuite\FreePaymentBundle\Services\FreePaymentManager">
      <argument type="service" id="paymentsuite.freepayment.method_factory"/>
      <argument type="service" id="paymentsuite.bridge"/>
      <argument type="service" id="paymentsuite.event_dispatcher"/>
    </service>
    <service id="paymentsuite.stripe.routes" class="PaymentSuite\PaymentCoreBundle\ValueObject\RedirectionRouteCollection">
      <call method="addRedirectionRoute">
        <argument type="service" id="paymentsuite.stripe.route_success"/>
        <argument>success</argument>
      </call>
      <call method="addRedirectionRoute">
        <argument type="service" id="paymentsuite.stripe.route_failure"/>
        <argument>failure</argument>
      </call>
    </service>
    <service id="paymentsuite.stripe.route_success" class="PaymentSuite\PaymentCoreBundle\ValueObject\RedirectionRoute">
      <argument>store_order_thanks</argument>
      <argument>true</argument>
      <argument>id</argument>
    </service>
    <service id="paymentsuite.stripe.route_failure" class="PaymentSuite\PaymentCoreBundle\ValueObject\RedirectionRoute">
      <argument>store_checkout_payment_fail</argument>
      <argument>true</argument>
      <argument>id</argument>
    </service>
    <service id="paymentsuite.stripe.payment_controller" class="PaymentSuite\StripeBundle\Controller\PaymentController">
      <argument type="service" id="paymentsuite.stripe.manager"/>
      <argument type="service" id="paymentsuite.stripe.method_factory"/>
      <argument type="service" id="paymentsuite.stripe.routes"/>
      <argument type="service" id="paymentsuite.bridge"/>
      <argument type="service" id="router"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="paymentsuite.stripe.form_type" class="PaymentSuite\StripeBundle\Form\Type\StripeType">
      <tag name="form.type" alias="stripe_view"/>
      <argument type="service" id="paymentsuite.bridge"/>
    </service>
    <service id="paymentsuite.stripe.transaction_factory" class="PaymentSuite\StripeBundle\Services\StripeTransactionFactory">
      <argument type="service" id="elcodi_plugin.stripe.private_key"/>
    </service>
    <service id="paymentsuite.stripe.manager" class="PaymentSuite\StripeBundle\Services\StripeManager">
      <argument type="service" id="paymentsuite.stripe.transaction_factory"/>
      <argument type="service" id="paymentsuite.bridge"/>
      <argument type="service" id="paymentsuite.event_dispatcher"/>
    </service>
    <service id="paymentsuite.stripe.method_factory" class="PaymentSuite\StripeBundle\Services\StripeMethodFactory"/>
    <service id="paymentsuite.stripe.template_render" class="PaymentSuite\StripeBundle\Services\StripeTemplateRender">
      <argument type="service" id="paymentsuite.bridge"/>
      <argument type="service" id="form.factory"/>
      <argument>@elcodi_plugin.stripe.public_key</argument>
      <argument>StripeBundle:Stripe:view.html.twig</argument>
      <argument>StripeBundle:Stripe:scripts.html.twig</argument>
    </service>
    <service id="paymentsuite.stripe.twig_extension" class="PaymentSuite\StripeBundle\Twig\StripeExtension">
      <argument type="service" id="paymentsuite.bridge"/>
      <argument type="service" id="form.factory"/>
      <argument type="service" id="elcodi_plugin.stripe.private_key"/>
      <argument>StripeBundle:Stripe:view.html.twig</argument>
      <argument>StripeBundle:Stripe:scripts.html.twig</argument>
    </service>
    <service id="elcodi.factory.zone" class="Elcodi\Component\Zone\Factory\ZoneFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Zone\Entity\Zone</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.repository.zone" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Zone\Entity\Zone</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.zone" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Zone\Entity\Zone</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.matcher.zone" class="Elcodi\Component\Zone\Services\ZoneMatcher">
      <argument type="service" id="elcodi.location_provider_adapter.service"/>
    </service>
    <service id="elcodi.finder.zone" class="Elcodi\Component\Zone\Services\ZoneFinder">
      <argument type="service" id="elcodi.repository.zone"/>
      <argument type="service" id="elcodi.matcher.zone"/>
    </service>
    <service id="elcodi.director.zone" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.zone"/>
      <argument type="service" id="elcodi.repository.zone"/>
      <argument type="service" id="elcodi.factory.zone"/>
    </service>
    <service id="elcodi.factory.tax" class="Elcodi\Component\Tax\Factory\TaxFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Tax\Entity\Tax</argument>
      </call>
    </service>
    <service id="elcodi.repository.tax" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Tax\Entity\Tax</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.tax" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Tax\Entity\Tax</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.director.tax" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.tax"/>
      <argument type="service" id="elcodi.repository.tax"/>
      <argument type="service" id="elcodi.factory.tax"/>
    </service>
    <service id="elcodi.factory.entity_translation" class="Elcodi\Component\EntityTranslator\Factory\EntityTranslationFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\EntityTranslator\Entity\EntityTranslation</argument>
      </call>
    </service>
    <service id="elcodi.factory.entity_translator" class="Elcodi\Component\EntityTranslator\Factory\EntityTranslatorFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\EntityTranslator\Services\EntityTranslator</argument>
      </call>
    </service>
    <service id="elcodi.repository.entity_translation" class="Elcodi\Component\EntityTranslator\Repository\EntityTranslationRepository">
      <argument>Elcodi\Component\EntityTranslator\Entity\EntityTranslation</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.entity_translation" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\EntityTranslator\Entity\EntityTranslation</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.services.entity_translation_provider" class="Elcodi\Component\EntityTranslator\Services\EntityTranslationProvider" lazy="true">
      <argument type="service" id="elcodi.repository.entity_translation"/>
      <argument type="service" id="elcodi.factory.entity_translation"/>
      <argument type="service" id="elcodi.object_manager.entity_translation"/>
    </service>
    <service id="elcodi.services.cached_entity_translation_provider" class="Elcodi\Component\EntityTranslator\Services\CachedEntityTranslationProvider">
      <tag name="kernel.event_listener" event="translator.warmup" method="warmUp"/>
      <argument type="service" id="elcodi.services.entity_translation_provider"/>
      <argument type="service" id="elcodi.repository.entity_translation"/>
      <argument>translation</argument>
      <call method="setCache">
        <argument type="service" id="doctrine_cache.providers.elcodi_translations"/>
      </call>
    </service>
    <service id="elcodi.entity_translator_changes" class="Elcodi\Component\EntityTranslator\Services\EntityTranslationChangesBag"/>
    <service id="elcodi.entity_translator_builder" class="Elcodi\Component\EntityTranslator\Services\EntityTranslatorBuilder">
      <argument type="service" id="elcodi.services.cached_entity_translation_provider"/>
      <argument type="service" id="elcodi.factory.entity_translator"/>
      <argument type="collection">
        <argument key="Elcodi\Plugin\CustomShippingBundle\Entity\Interfaces\CarrierInterface" type="collection">
          <argument key="alias">carrier</argument>
          <argument key="fields" type="collection">
            <argument key="name" type="collection">
              <argument key="getter">getName</argument>
              <argument key="setter">setName</argument>
            </argument>
            <argument key="description" type="collection">
              <argument key="getter">getDescription</argument>
              <argument key="setter">setDescription</argument>
            </argument>
          </argument>
          <argument key="idGetter">getId</argument>
        </argument>
        <argument key="Elcodi\Component\Product\Entity\Interfaces\PurchasableInterface" type="collection">
          <argument key="alias">purchasable</argument>
          <argument key="fields" type="collection">
            <argument key="name" type="collection">
              <argument key="getter">getName</argument>
              <argument key="setter">setName</argument>
            </argument>
            <argument key="slug" type="collection">
              <argument key="getter">getSlug</argument>
              <argument key="setter">setSlug</argument>
            </argument>
            <argument key="description" type="collection">
              <argument key="getter">getDescription</argument>
              <argument key="setter">setDescription</argument>
            </argument>
            <argument key="shortDescription" type="collection">
              <argument key="getter">getShortDescription</argument>
              <argument key="setter">setShortDescription</argument>
            </argument>
            <argument key="metaTitle" type="collection">
              <argument key="getter">getMetaTitle</argument>
              <argument key="setter">setMetaTitle</argument>
            </argument>
            <argument key="metaDescription" type="collection">
              <argument key="getter">getMetaDescription</argument>
              <argument key="setter">setMetaDescription</argument>
            </argument>
            <argument key="metaKeywords" type="collection">
              <argument key="getter">getMetaKeywords</argument>
              <argument key="setter">setMetaKeywords</argument>
            </argument>
          </argument>
          <argument key="idGetter">getId</argument>
        </argument>
        <argument key="Elcodi\Component\Product\Entity\Interfaces\CategoryInterface" type="collection">
          <argument key="alias">category</argument>
          <argument key="fields" type="collection">
            <argument key="name" type="collection">
              <argument key="getter">getName</argument>
              <argument key="setter">setName</argument>
            </argument>
            <argument key="slug" type="collection">
              <argument key="getter">getSlug</argument>
              <argument key="setter">setSlug</argument>
            </argument>
            <argument key="metaTitle" type="collection">
              <argument key="getter">getMetaTitle</argument>
              <argument key="setter">setMetaTitle</argument>
            </argument>
            <argument key="metaDescription" type="collection">
              <argument key="getter">getMetaDescription</argument>
              <argument key="setter">setMetaDescription</argument>
            </argument>
            <argument key="metaKeywords" type="collection">
              <argument key="getter">getMetaKeywords</argument>
              <argument key="setter">setMetaKeywords</argument>
            </argument>
          </argument>
          <argument key="idGetter">getId</argument>
        </argument>
        <argument key="Elcodi\Component\Product\Entity\Interfaces\ManufacturerInterface" type="collection">
          <argument key="alias">manufacturer</argument>
          <argument key="fields" type="collection">
            <argument key="name" type="collection">
              <argument key="getter">getName</argument>
              <argument key="setter">setName</argument>
            </argument>
            <argument key="slug" type="collection">
              <argument key="getter">getSlug</argument>
              <argument key="setter">setSlug</argument>
            </argument>
            <argument key="description" type="collection">
              <argument key="getter">getDescription</argument>
              <argument key="setter">setDescription</argument>
            </argument>
            <argument key="metaTitle" type="collection">
              <argument key="getter">getMetaTitle</argument>
              <argument key="setter">setMetaTitle</argument>
            </argument>
            <argument key="metaDescription" type="collection">
              <argument key="getter">getMetaDescription</argument>
              <argument key="setter">setMetaDescription</argument>
            </argument>
            <argument key="metaKeywords" type="collection">
              <argument key="getter">getMetaKeywords</argument>
              <argument key="setter">setMetaKeywords</argument>
            </argument>
          </argument>
          <argument key="idGetter">getId</argument>
        </argument>
        <argument key="Elcodi\Component\Page\Entity\Interfaces\PageInterface" type="collection">
          <argument key="alias">page</argument>
          <argument key="fields" type="collection">
            <argument key="title" type="collection">
              <argument key="getter">getTitle</argument>
              <argument key="setter">setTitle</argument>
            </argument>
            <argument key="content" type="collection">
              <argument key="getter">getContent</argument>
              <argument key="setter">setContent</argument>
            </argument>
            <argument key="path" type="collection">
              <argument key="getter">getPath</argument>
              <argument key="setter">setPath</argument>
            </argument>
            <argument key="metaTitle" type="collection">
              <argument key="getter">getMetaTitle</argument>
              <argument key="setter">setMetaTitle</argument>
            </argument>
            <argument key="metaDescription" type="collection">
              <argument key="getter">getMetaDescription</argument>
              <argument key="setter">setMetaDescription</argument>
            </argument>
            <argument key="metaKeywords" type="collection">
              <argument key="getter">getMetaKeywords</argument>
              <argument key="setter">setMetaKeywords</argument>
            </argument>
          </argument>
          <argument key="idGetter">getId</argument>
        </argument>
      </argument>
      <argument>true</argument>
    </service>
    <service id="elcodi.entity_translator" class="Elcodi\Component\EntityTranslator\Services\EntityTranslator">
      <factory service="elcodi.entity_translator_builder" method="compile"/>
    </service>
    <service id="elcodi.event_dispatcher.entity_translator" class="Elcodi\Component\EntityTranslator\EventDispatcher\EntityTranslatorEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi.event_listener.entity_translator_form" class="Elcodi\Component\EntityTranslator\EventListener\EntityTranslatorFormEventListener">
      <tag name="kernel.event_listener" event="kernel.response" method="saveEntityTranslations"/>
      <argument type="service" id="elcodi.services.cached_entity_translation_provider"/>
      <argument type="collection">
        <argument key="Elcodi\Plugin\CustomShippingBundle\Entity\Interfaces\CarrierInterface" type="collection">
          <argument key="alias">carrier</argument>
          <argument key="fields" type="collection">
            <argument key="name" type="collection">
              <argument key="getter">getName</argument>
              <argument key="setter">setName</argument>
            </argument>
            <argument key="description" type="collection">
              <argument key="getter">getDescription</argument>
              <argument key="setter">setDescription</argument>
            </argument>
          </argument>
          <argument key="idGetter">getId</argument>
        </argument>
        <argument key="Elcodi\Component\Product\Entity\Interfaces\PurchasableInterface" type="collection">
          <argument key="alias">purchasable</argument>
          <argument key="fields" type="collection">
            <argument key="name" type="collection">
              <argument key="getter">getName</argument>
              <argument key="setter">setName</argument>
            </argument>
            <argument key="slug" type="collection">
              <argument key="getter">getSlug</argument>
              <argument key="setter">setSlug</argument>
            </argument>
            <argument key="description" type="collection">
              <argument key="getter">getDescription</argument>
              <argument key="setter">setDescription</argument>
            </argument>
            <argument key="shortDescription" type="collection">
              <argument key="getter">getShortDescription</argument>
              <argument key="setter">setShortDescription</argument>
            </argument>
            <argument key="metaTitle" type="collection">
              <argument key="getter">getMetaTitle</argument>
              <argument key="setter">setMetaTitle</argument>
            </argument>
            <argument key="metaDescription" type="collection">
              <argument key="getter">getMetaDescription</argument>
              <argument key="setter">setMetaDescription</argument>
            </argument>
            <argument key="metaKeywords" type="collection">
              <argument key="getter">getMetaKeywords</argument>
              <argument key="setter">setMetaKeywords</argument>
            </argument>
          </argument>
          <argument key="idGetter">getId</argument>
        </argument>
        <argument key="Elcodi\Component\Product\Entity\Interfaces\CategoryInterface" type="collection">
          <argument key="alias">category</argument>
          <argument key="fields" type="collection">
            <argument key="name" type="collection">
              <argument key="getter">getName</argument>
              <argument key="setter">setName</argument>
            </argument>
            <argument key="slug" type="collection">
              <argument key="getter">getSlug</argument>
              <argument key="setter">setSlug</argument>
            </argument>
            <argument key="metaTitle" type="collection">
              <argument key="getter">getMetaTitle</argument>
              <argument key="setter">setMetaTitle</argument>
            </argument>
            <argument key="metaDescription" type="collection">
              <argument key="getter">getMetaDescription</argument>
              <argument key="setter">setMetaDescription</argument>
            </argument>
            <argument key="metaKeywords" type="collection">
              <argument key="getter">getMetaKeywords</argument>
              <argument key="setter">setMetaKeywords</argument>
            </argument>
          </argument>
          <argument key="idGetter">getId</argument>
        </argument>
        <argument key="Elcodi\Component\Product\Entity\Interfaces\ManufacturerInterface" type="collection">
          <argument key="alias">manufacturer</argument>
          <argument key="fields" type="collection">
            <argument key="name" type="collection">
              <argument key="getter">getName</argument>
              <argument key="setter">setName</argument>
            </argument>
            <argument key="slug" type="collection">
              <argument key="getter">getSlug</argument>
              <argument key="setter">setSlug</argument>
            </argument>
            <argument key="description" type="collection">
              <argument key="getter">getDescription</argument>
              <argument key="setter">setDescription</argument>
            </argument>
            <argument key="metaTitle" type="collection">
              <argument key="getter">getMetaTitle</argument>
              <argument key="setter">setMetaTitle</argument>
            </argument>
            <argument key="metaDescription" type="collection">
              <argument key="getter">getMetaDescription</argument>
              <argument key="setter">setMetaDescription</argument>
            </argument>
            <argument key="metaKeywords" type="collection">
              <argument key="getter">getMetaKeywords</argument>
              <argument key="setter">setMetaKeywords</argument>
            </argument>
          </argument>
          <argument key="idGetter">getId</argument>
        </argument>
        <argument key="Elcodi\Component\Page\Entity\Interfaces\PageInterface" type="collection">
          <argument key="alias">page</argument>
          <argument key="fields" type="collection">
            <argument key="title" type="collection">
              <argument key="getter">getTitle</argument>
              <argument key="setter">setTitle</argument>
            </argument>
            <argument key="content" type="collection">
              <argument key="getter">getContent</argument>
              <argument key="setter">setContent</argument>
            </argument>
            <argument key="path" type="collection">
              <argument key="getter">getPath</argument>
              <argument key="setter">setPath</argument>
            </argument>
            <argument key="metaTitle" type="collection">
              <argument key="getter">getMetaTitle</argument>
              <argument key="setter">setMetaTitle</argument>
            </argument>
            <argument key="metaDescription" type="collection">
              <argument key="getter">getMetaDescription</argument>
              <argument key="setter">setMetaDescription</argument>
            </argument>
            <argument key="metaKeywords" type="collection">
              <argument key="getter">getMetaKeywords</argument>
              <argument key="setter">setMetaKeywords</argument>
            </argument>
          </argument>
          <argument key="idGetter">getId</argument>
        </argument>
      </argument>
      <argument type="service" id="elcodi.languages_iso_array"/>
      <argument>en</argument>
      <argument>true</argument>
      <argument type="service" id="elcodi.entity_translator_changes"/>
    </service>
    <service id="elcodi.event_listener.entity_translator_entity" class="Elcodi\Component\EntityTranslator\EventListener\EntityTranslatorEntityEventListener" lazy="true">
      <tag name="doctrine.event_listener" event="postLoad"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="elcodi.locale"/>
    </service>
    <service id="elcodi.director.entity_translation" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.entity_translation"/>
      <argument type="service" id="elcodi.repository.entity_translation"/>
      <argument type="service" id="elcodi.factory.entity_translation"/>
    </service>
    <service id="elcodi.command.translations_warmup" class="Elcodi\Component\EntityTranslator\Console\TranslationsWarmupCommand">
      <argument type="service" id="elcodi.event_dispatcher.entity_translator"/>
    </service>
    <service id="elcodi.manager.menu" class="Elcodi\Component\Menu\Services\MenuManager">
      <argument type="service" id="elcodi.repository.menu"/>
      <argument type="service" id="elcodi.object_manager.menu"/>
      <argument>menus</argument>
      <call method="setCache">
        <argument type="service" id="doctrine_cache.providers.elcodi_menus"/>
      </call>
      <call method="setEncoder">
        <argument type="service" id="elcodi.php_encoder"/>
      </call>
      <call method="addMenuChanger">
        <argument type="service" id="elcodi.menu_builder"/>
      </call>
      <call method="addMenuChanger">
        <argument type="service" id="elcodi.menu_filterer"/>
      </call>
      <call method="addMenuChanger">
        <argument type="service" id="elcodi.menu_modifier"/>
      </call>
    </service>
    <service id="elcodi.menu_builder" class="Elcodi\Component\Menu\Services\MenuBuilder">
      <tag name="menu.changer"/>
      <call method="addMenuBuilder">
        <argument type="service" id="elcodi_admin.menu_builder.core"/>
        <argument type="collection"/>
        <argument>before_cache</argument>
        <argument>32</argument>
      </call>
      <call method="addMenuBuilder">
        <argument type="service" id="elcodi_admin.menu_builder.user"/>
        <argument type="collection"/>
        <argument>before_cache</argument>
        <argument>32</argument>
      </call>
      <call method="addMenuBuilder">
        <argument type="service" id="elcodi_admin.menu_builder.cart"/>
        <argument type="collection"/>
        <argument>before_cache</argument>
        <argument>32</argument>
      </call>
      <call method="addMenuBuilder">
        <argument type="service" id="elcodi_admin.menu_builder.orders_not_shipped"/>
        <argument type="collection"/>
        <argument>after_cache</argument>
        <argument>0</argument>
      </call>
      <call method="addMenuBuilder">
        <argument type="service" id="elcodi_admin.menu_builder.coupon"/>
        <argument type="collection"/>
        <argument>before_cache</argument>
        <argument>32</argument>
      </call>
      <call method="addMenuBuilder">
        <argument type="service" id="elcodi_admin.menu_builder.currency"/>
        <argument type="collection"/>
        <argument>before_cache</argument>
        <argument>16</argument>
      </call>
      <call method="addMenuBuilder">
        <argument type="service" id="elcodi_admin.menu_builder.language"/>
        <argument type="collection"/>
        <argument>before_cache</argument>
        <argument>16</argument>
      </call>
      <call method="addMenuBuilder">
        <argument type="service" id="elcodi_admin.menu_builder.product"/>
        <argument type="collection"/>
        <argument>before_cache</argument>
        <argument>32</argument>
      </call>
      <call method="addMenuBuilder">
        <argument type="service" id="elcodi.admin.menu_builder.page"/>
        <argument type="collection"/>
        <argument>before_cache</argument>
        <argument>16</argument>
      </call>
      <call method="addMenuBuilder">
        <argument type="service" id="elcodi_admin.menu_builder.template"/>
        <argument type="collection"/>
        <argument>before_cache</argument>
        <argument>16</argument>
      </call>
      <call method="addMenuBuilder">
        <argument type="service" id="elcodi_admin.menu_builder.plugin_list"/>
        <argument type="collection"/>
        <argument>before_cache</argument>
        <argument>32</argument>
      </call>
      <call method="addMenuBuilder">
        <argument type="service" id="elcodi_admin.menu_builder.plugin_entries"/>
        <argument type="collection"/>
        <argument>before_cache</argument>
        <argument>16</argument>
      </call>
      <call method="addMenuBuilder">
        <argument type="service" id="elcodi_admin.menu_builder.shipping"/>
        <argument type="collection"/>
        <argument>before_cache</argument>
        <argument>32</argument>
      </call>
      <call method="addMenuBuilder">
        <argument type="service" id="elcodi_admin.menu_builder.payment"/>
        <argument type="collection"/>
        <argument>before_cache</argument>
        <argument>32</argument>
      </call>
      <call method="addMenuBuilder">
        <argument type="service" id="elcodi_admin.menu_builder.store"/>
        <argument type="collection"/>
        <argument>before_cache</argument>
        <argument>16</argument>
      </call>
      <call method="addMenuBuilder">
        <argument type="service" id="elcodi_plugin.custom_shipping.menu_builder"/>
        <argument type="collection"/>
        <argument>before_cache</argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="elcodi.menu_filterer" class="Elcodi\Component\Menu\Services\MenuFilterer">
      <tag name="menu.changer"/>
      <call method="addMenuFilter">
        <argument type="service" id="elcodi.menu_filter.menu_disabled"/>
        <argument type="collection"/>
        <argument>before_cache</argument>
        <argument>0</argument>
      </call>
      <call method="addMenuFilter">
        <argument type="service" id="elcodi.menu_filter.menu_expanded"/>
        <argument type="collection"/>
        <argument>after_cache</argument>
        <argument>-128</argument>
      </call>
    </service>
    <service id="elcodi.menu_modifier" class="Elcodi\Component\Menu\Services\MenuModifier">
      <tag name="menu.changer"/>
    </service>
    <service id="elcodi.factory.menu_node" class="Elcodi\Component\Menu\Factory\NodeFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Menu\Entity\Menu\Node</argument>
      </call>
    </service>
    <service id="elcodi.factory.menu" class="Elcodi\Component\Menu\Factory\MenuFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Menu\Entity\Menu\Menu</argument>
      </call>
    </service>
    <service id="elcodi.repository.menu_node" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Menu\Entity\Menu\Node</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.menu" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Menu\Entity\Menu\Menu</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.menu" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Menu\Entity\Menu\Menu</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.menu_node" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Menu\Entity\Menu\Node</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.director.menu_node" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.menu_node"/>
      <argument type="service" id="elcodi.repository.menu_node"/>
      <argument type="service" id="elcodi.factory.menu_node"/>
    </service>
    <service id="elcodi.director.menu" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.menu"/>
      <argument type="service" id="elcodi.repository.menu"/>
      <argument type="service" id="elcodi.factory.menu"/>
    </service>
    <service id="elcodi.menu_filter.menu_disabled" class="Elcodi\Component\Menu\Filter\MenuDisabledFilter">
      <tag name="menu.filter"/>
    </service>
    <service id="elcodi.menu_filter.menu_expanded" class="Elcodi\Component\Menu\Filter\MenuExpandedFilter">
      <tag name="menu.filter" stage="after_cache" priority="-128"/>
    </service>
    <service id="elcodi.manager.plugin" class="Elcodi\Component\Plugin\Services\PluginManager">
      <argument type="service" id="kernel"/>
      <argument type="service" id="elcodi.repository.plugin"/>
      <argument type="service" id="elcodi.object_manager.plugin"/>
      <argument type="service" id="elcodi.loader.plugin"/>
    </service>
    <service id="elcodi.loader.plugin" class="Elcodi\Component\Plugin\Services\PluginLoader"/>
    <service id="elcodi.loader.plugin_routes" class="Elcodi\Component\Plugin\Loader\RouterLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="elcodi.plugins"/>
    </service>
    <service id="elcodi.enabled_plugins" class="StdClass">
      <argument type="collection">
        <argument key="enabled">true</argument>
      </argument>
      <factory service="elcodi.repository.plugin" method="findBy"/>
    </service>
    <service id="elcodi.plugins" class="StdClass">
      <factory service="elcodi.repository.plugin" method="findAll"/>
    </service>
    <service id="elcodi.repository.plugin" class="Elcodi\Component\Plugin\Repository\PluginRepository">
      <argument>Elcodi\Component\Plugin\Entity\Plugin</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.plugin" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Plugin\Entity\Plugin</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.command.plugins_load" class="Elcodi\Component\Plugin\Command\PluginsLoadCommand">
      <tag name="console.command"/>
      <argument type="service" id="elcodi.manager.plugin"/>
    </service>
    <service id="elcodi.command.plugins_list" class="Elcodi\Component\Plugin\Command\PluginsListCommand">
      <tag name="console.command"/>
      <argument type="service" id="elcodi.repository.plugin"/>
    </service>
    <service id="elcodi.command.plugin_enable" class="Elcodi\Component\Plugin\Command\PluginEnableCommand">
      <tag name="console.command"/>
      <argument type="service" id="elcodi.repository.plugin"/>
      <argument type="service" id="elcodi.object_manager.plugin"/>
    </service>
    <service id="elcodi.command.plugin_disable" class="Elcodi\Component\Plugin\Command\PluginDisableCommand">
      <tag name="console.command"/>
      <argument type="service" id="elcodi.repository.plugin"/>
      <argument type="service" id="elcodi.object_manager.plugin"/>
    </service>
    <service id="elcodi.event_dispatcher.hook_system" class="Elcodi\Component\Plugin\EventDispatcher\HookSystemEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi.form_type.plugin" class="Elcodi\Component\Plugin\Form\Type\PluginType">
      <tag name="form.type" alias="elcodi_form_type_plugin"/>
    </service>
    <service id="paymentsuite.bankwire.routes" class="PaymentSuite\PaymentCoreBundle\ValueObject\RedirectionRouteCollection">
      <call method="addRedirectionRoute">
        <argument type="service" id="paymentsuite.bankwire.route_success"/>
        <argument>success</argument>
      </call>
    </service>
    <service id="paymentsuite.bankwire.route_success" class="PaymentSuite\PaymentCoreBundle\ValueObject\RedirectionRoute">
      <argument>store_order_thanks</argument>
      <argument>true</argument>
      <argument>id</argument>
    </service>
    <service id="paymentsuite.bankwire.payment_controller" class="PaymentSuite\BankwireBundle\Controller\PaymentController">
      <argument type="service" id="paymentsuite.bankwire.manager"/>
      <argument type="service" id="paymentsuite.bankwire.route_success"/>
      <argument type="service" id="paymentsuite.bridge"/>
      <argument type="service" id="router"/>
    </service>
    <service id="paymentsuite.bankwire.method_factory" class="PaymentSuite\BankwireBundle\Services\BankwireMethodFactory"/>
    <service id="paymentsuite.bankwire.manager" class="PaymentSuite\BankwireBundle\Services\BankwireManager">
      <argument type="service" id="paymentsuite.bankwire.method_factory"/>
      <argument type="service" id="paymentsuite.bridge"/>
      <argument type="service" id="paymentsuite.event_dispatcher"/>
    </service>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <argument>en</argument>
      <argument type="service" id="router" on-invalid="ignore"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="translator_listener" class="Symfony\Component\HttpKernel\EventListener\TranslatorListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="translator"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument>false</argument>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer" public="false">
            <tag name="kernel.cache_warmer" priority="20"/>
            <argument type="service">
              <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
                <argument type="service" id="kernel"/>
                <argument type="service" id="templating.filename_parser"/>
                <argument>/Users/michael/Documents/workspace/bamboo/app/Resources</argument>
              </service>
            </argument>
            <argument type="service" id="templating.locator"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer" public="false">
            <tag name="kernel.cache_warmer" priority="10"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="translator.default"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="service_container"/>
            <argument type="service">
              <service class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
                <argument type="service" id="kernel"/>
                <argument type="service" id="templating.filename_parser"/>
                <argument>/Users/michael/Documents/workspace/bamboo/app/Resources</argument>
              </service>
            </argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
            <tag name="kernel.cache_warmer"/>
            <argument type="service" id="doctrine"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="collection"/>
    </service>
    <service id="request" scope="request" synthetic="true" synchronized="true"/>
    <service id="service_container" synthetic="true"/>
    <service id="kernel" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
      <argument>/Users/michael/Documents/workspace/bamboo/app/Resources</argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>4acbc300e57d46cb58ac0c629945c17b727f99c8</argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument type="service" id="service_container"/>
      <argument>true</argument>
      <argument type="service" id="request_stack"/>
      <call method="addRendererService">
        <argument>inline</argument>
        <argument>fragment.renderer.inline</argument>
      </call>
      <call method="addRendererService">
        <argument>hinclude</argument>
        <argument>fragment.renderer.hinclude</argument>
      </call>
      <call method="addRendererService">
        <argument>hinclude</argument>
        <argument>fragment.renderer.hinclude</argument>
      </call>
      <call method="addRendererService">
        <argument>esi</argument>
        <argument>fragment.renderer.esi</argument>
      </call>
      <call method="addRendererService">
        <argument>ssi</argument>
        <argument>fragment.renderer.ssi</argument>
      </call>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="uri_signer"/>
      <argument>null</argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.esi" class="Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="esi"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.ssi" class="Symfony\Component\HttpKernel\Fragment\SsiFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="ssi"/>
      <argument>null</argument>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <argument type="service" id="service_container"/>
      <argument type="service">
        <service class="Symfony\Component\Translation\MessageSelector" public="false"/>
      </argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/Users/michael/Documents/workspace/bamboo/app/cache/dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ar.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ar.xlf</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.az.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.az.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.az.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.bg.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.bg.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ca.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ca.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/translations/messages.ca.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/translations/routes.ca.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CoreBundle/Resources/translations/messages.ca.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Common/CommonBundle/Resources/translations/messages.ca.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/GoogleAnalyticsBundle/Resources/translations/messages.ca.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/PinterestBundle/Resources/translations/messages.ca.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/ProductCsvBundle/Resources/translations/messages.ca.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreSetupWizardBundle/Resources/translations/messages.ca.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/DisqusBundle/Resources/translations/messages.ca.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/TwitterBundle/Resources/translations/messages.ca.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/FacebookBundle/Resources/translations/messages.ca.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreTemplateBundle/Resources/translations/messages.ca.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/PaypalWebCheckoutBundle/Resources/translations/messages.ca.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/FreePaymentBundle/Resources/translations/messages.ca.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StripeBundle/Resources/translations/messages.ca.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/BankwireBundle/Resources/translations/messages.ca.yml</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.cs.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.cs.xlf</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.da.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.da.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.da.xlf</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.de.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.de.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.de.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.de.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/translations/messages.de.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/translations/routes.de.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CoreBundle/Resources/translations/messages.de.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Common/CommonBundle/Resources/translations/messages.de.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/GoogleAnalyticsBundle/Resources/translations/messages.de.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/PinterestBundle/Resources/translations/messages.de.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/ProductCsvBundle/Resources/translations/messages.de.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreSetupWizardBundle/Resources/translations/messages.de.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/DisqusBundle/Resources/translations/messages.de.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/TwitterBundle/Resources/translations/messages.de.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/FacebookBundle/Resources/translations/messages.de.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreTemplateBundle/Resources/translations/messages.de.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/PaypalWebCheckoutBundle/Resources/translations/messages.de.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/FreePaymentBundle/Resources/translations/messages.de.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StripeBundle/Resources/translations/messages.de.yml</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.el.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.el.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.el.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.en.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.en.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.en.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.en.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/translations/messages.en.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/translations/routes.en.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CoreBundle/Resources/translations/messages.en.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Common/CommonBundle/Resources/translations/messages.en.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/GoogleAnalyticsBundle/Resources/translations/messages.en.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/PinterestBundle/Resources/translations/messages.en.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/ProductCsvBundle/Resources/translations/messages.en.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreSetupWizardBundle/Resources/translations/messages.en.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/DisqusBundle/Resources/translations/messages.en.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/TwitterBundle/Resources/translations/messages.en.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/FacebookBundle/Resources/translations/messages.en.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreTemplateBundle/Resources/translations/messages.en.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/PaypalWebCheckoutBundle/Resources/translations/messages.en.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/FreePaymentBundle/Resources/translations/messages.en.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StripeBundle/Resources/translations/messages.en.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/BankwireBundle/Resources/translations/messages.en.yml</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.es.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.es.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.es.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.es.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/translations/messages.es.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/translations/routes.es.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CoreBundle/Resources/translations/messages.es.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Common/CommonBundle/Resources/translations/messages.es.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/GoogleAnalyticsBundle/Resources/translations/messages.es.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/PinterestBundle/Resources/translations/messages.es.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/ProductCsvBundle/Resources/translations/messages.es.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreSetupWizardBundle/Resources/translations/messages.es.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/DisqusBundle/Resources/translations/messages.es.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/TwitterBundle/Resources/translations/messages.es.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/FacebookBundle/Resources/translations/messages.es.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreTemplateBundle/Resources/translations/messages.es.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/PaypalWebCheckoutBundle/Resources/translations/messages.es.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/FreePaymentBundle/Resources/translations/messages.es.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StripeBundle/Resources/translations/messages.es.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/BankwireBundle/Resources/translations/messages.es.yml</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.et.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.eu.xlf</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fa.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.fa.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.fa.yml</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fi.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/translations/messages.fi.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/translations/routes.fi.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CoreBundle/Resources/translations/messages.fi.yml</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.fr.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.fr.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.fr.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/translations/messages.fr.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/translations/routes.fr.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CoreBundle/Resources/translations/messages.fr.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Common/CommonBundle/Resources/translations/messages.fr.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreTemplateBundle/Resources/translations/messages.fr.yml</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.gl.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.gl.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/translations/messages.gl.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/translations/routes.gl.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CoreBundle/Resources/translations/messages.gl.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Common/CommonBundle/Resources/translations/messages.gl.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/GoogleAnalyticsBundle/Resources/translations/messages.gl.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/PinterestBundle/Resources/translations/messages.gl.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/ProductCsvBundle/Resources/translations/messages.gl.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreSetupWizardBundle/Resources/translations/messages.gl.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/DisqusBundle/Resources/translations/messages.gl.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/TwitterBundle/Resources/translations/messages.gl.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/FacebookBundle/Resources/translations/messages.gl.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreTemplateBundle/Resources/translations/messages.gl.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/PaypalWebCheckoutBundle/Resources/translations/messages.gl.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/FreePaymentBundle/Resources/translations/messages.gl.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StripeBundle/Resources/translations/messages.gl.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/BankwireBundle/Resources/translations/messages.gl.yml</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.he.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.he.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hr.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.hr.xlf</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hu.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.hu.xlf</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.id.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.id.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.id.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.it.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.it.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.it.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.it.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/translations/messages.it.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/translations/routes.it.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CoreBundle/Resources/translations/messages.it.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/GoogleAnalyticsBundle/Resources/translations/messages.it.yml</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ja.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ja.xlf</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lb.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lt.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.lt.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.mn.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nb.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.nl.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.nl.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.nl.yml</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.no.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.no.xlf</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pl.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pl.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.pl.yml</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt.xlf</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pt_BR.xlf</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ro.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ro.xlf</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.ru.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ru.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.ru.yml</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sk.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sk.xlf</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sl.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sl.xlf</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sr_Latn.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.sv.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.sv.xlf</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.th.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.th.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.tr.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.tr.yml</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.uk.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.uk.yml</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.zh_CN.xlf</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Validator/Resources/translations/validators.zh_TW.xlf</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/translations/validators.lv.xlf</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.pt_PT.xlf</argument>
          </argument>
          <argument key="ua" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Security/Core/Exception/../Resources/translations/security.ua.xlf</argument>
          </argument>
          <argument key="zh" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/vendor/hwi/oauth-bundle/Resources/translations/HWIOAuthBundle.zh.yml</argument>
          </argument>
          <argument key="sr" type="collection">
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/translations/messages.sr.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/translations/routes.sr.yml</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CoreBundle/Resources/translations/messages.sr.yml</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.loader" class="Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session">
      <argument type="service" id="session.storage.native"/>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
      </argument>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
      <argument type="collection">
        <argument key="gc_probability">1</argument>
      </argument>
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage">
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session_listener" class="Symfony\Bundle\FrameworkBundle\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="security.secure_random" class="Symfony\Component\Security\Core\Util\SecureRandom">
      <tag name="monolog.logger" channel="security"/>
      <argument>/Users/michael/Documents/workspace/bamboo/app/cache/dev/secure_random.seed</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="ignore"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy">
      <argument type="service">
        <service class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
      </argument>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension" public="false">
            <argument type="service" id="service_container"/>
            <argument type="collection">
              <argument key="stripe_view">paymentsuite.stripe.form_type</argument>
              <argument key="elcodi_form_type_plugin">elcodi.form_type.plugin</argument>
              <argument key="form">form.type.form</argument>
              <argument key="birthday">form.type.birthday</argument>
              <argument key="checkbox">form.type.checkbox</argument>
              <argument key="choice">form.type.choice</argument>
              <argument key="collection">form.type.collection</argument>
              <argument key="country">form.type.country</argument>
              <argument key="date">form.type.date</argument>
              <argument key="datetime">form.type.datetime</argument>
              <argument key="email">form.type.email</argument>
              <argument key="file">form.type.file</argument>
              <argument key="hidden">form.type.hidden</argument>
              <argument key="integer">form.type.integer</argument>
              <argument key="language">form.type.language</argument>
              <argument key="locale">form.type.locale</argument>
              <argument key="money">form.type.money</argument>
              <argument key="number">form.type.number</argument>
              <argument key="password">form.type.password</argument>
              <argument key="percent">form.type.percent</argument>
              <argument key="radio">form.type.radio</argument>
              <argument key="repeated">form.type.repeated</argument>
              <argument key="search">form.type.search</argument>
              <argument key="textarea">form.type.textarea</argument>
              <argument key="text">form.type.text</argument>
              <argument key="time">form.type.time</argument>
              <argument key="timezone">form.type.timezone</argument>
              <argument key="url">form.type.url</argument>
              <argument key="button">form.type.button</argument>
              <argument key="submit">form.type.submit</argument>
              <argument key="reset">form.type.reset</argument>
              <argument key="currency">form.type.currency</argument>
              <argument key="entity">form.type.entity</argument>
              <argument key="store_user_form_type_login">elcodi_elcodi_store.form_type.login</argument>
              <argument key="store_user_form_type_register">elcodi_elcodi_store.form_type.register</argument>
              <argument key="store_user_form_type_profile">elcodi_elcodi_store.form_type.profile</argument>
              <argument key="store_user_form_type_password_remember">elcodi_elcodi_store.form_type.password_remember</argument>
              <argument key="store_user_form_type_password_recover">elcodi_elcodi_store.form_type.password_recover</argument>
              <argument key="store_geo_form_type_address">elcodi_store.form_type.address</argument>
              <argument key="store_cart_form_type_cart">elcodi_store.form_type.cart</argument>
              <argument key="store_cart_form_type_cart_line">elcodi_store.form_type.cart_line</argument>
              <argument key="store_cart_coupon_form_type_coupon_apply">elcodi_store.form_type.coupon_apply</argument>
              <argument key="elcodi_admin_user_form_type_login">elcodi_admin.form_type.login</argument>
              <argument key="elcodi_admin_user_form_type_register">elcodi_admin.form_type.register</argument>
              <argument key="elcodi_admin_user_form_type_profile">elcodi_admin.form_type.profile</argument>
              <argument key="elcodi_admin_user_form_type_password_remember">elcodi_admin.form_type.password_remember</argument>
              <argument key="elcodi_admin_user_form_type_password_recover">elcodi_admin.form_type.password_recover</argument>
              <argument key="elcodi_admin_user_form_type_customer">elcodi_admin.form_type.customer</argument>
              <argument key="elcodi_admin_user_form_type_admin_user">elcodi_admin.form_type.admin_user</argument>
              <argument key="elcodi_admin_attribute_form_type_attribute">elcodi_admin.form_type.attribute</argument>
              <argument key="elcodi_admin_banner_form_type_banner">elcodi_admin.form_type.banner</argument>
              <argument key="elcodi_admin_banner_form_type_banner_zone">elcodi_admin.form_type.banner_zone</argument>
              <argument key="elcodi_admin_coupon_form_type_coupon">elcodi_admin.form_type.coupon</argument>
              <argument key="elcodi_admin_currency_form_type_currency">elcodi_admin.form_type.currency</argument>
              <argument key="money_object">elcodi_admin.form_type.money</argument>
              <argument key="elcodi_admin_media_form_type_image">elcodi_admin.form_type.image</argument>
              <argument key="elcodi_admin_newsletter_form_type_newsletter_subscription">elcodi_admin.form_type.newsletter_subscription</argument>
              <argument key="elcodi_admin_product_form_type_product">elcodi_admin.form_type.product</argument>
              <argument key="elcodi_admin_product_form_type_product_variant">elcodi_admin.form_type.product_variant</argument>
              <argument key="elcodi_admin_product_form_type_purchasable_pack">elcodi_admin.form_type.purchasable_pack</argument>
              <argument key="elcodi_admin_product_form_type_category">elcodi_admin.form_type.category</argument>
              <argument key="elcodi_admin_product_form_type_manufacturer">elcodi_admin.form_type.manufacturer</argument>
              <argument key="elcodi_admin_page_form_type_page">elcodi_admin.form_type.page</argument>
              <argument key="elcodi_admin_page_form_type_blog_post">elcodi_admin.form_type.blog_post</argument>
              <argument key="elcodi_admin_page_form_type_email">elcodi_admin.form_type.email</argument>
              <argument key="admin_geo_form_type_address">elcodi_admin.form_type.address</argument>
              <argument key="elcodi_admin_store_form_type_store_settings">elcodi_admin.form_type.language</argument>
              <argument key="elcodi_admin_store_form_type_store_address">elcodi_admin.form_type.store_address</argument>
              <argument key="elcodi_admin_store_form_type_store_corporate">elcodi_admin.form_type.store_corporate</argument>
              <argument key="elcodi_plugin_custom_shipping_form_type_shipping_range">elcodi_plugin.custom_shipping.form_type.shipping_range</argument>
              <argument key="elcodi_plugin_custom_shipping_form_type_carrier">elcodi_plugin.custom_shipping.form_type.carrier</argument>
            </argument>
            <argument type="collection">
              <argument key="form" type="collection">
                <argument>form.type_extension.form.http_foundation</argument>
                <argument>form.type_extension.form.validator</argument>
                <argument>form.type_extension.csrf</argument>
                <argument>form.type_extension.form.data_collector</argument>
              </argument>
              <argument key="repeated" type="collection">
                <argument>form.type_extension.repeated.validator</argument>
              </argument>
              <argument key="submit" type="collection">
                <argument>form.type_extension.submit.validator</argument>
              </argument>
            </argument>
            <argument type="collection">
              <argument>form.type_guesser.validator</argument>
              <argument>form.type_guesser.doctrine</argument>
            </argument>
          </service>
        </argument>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory">
      <argument type="service" id="form.registry"/>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType">
      <tag name="form.type" alias="form"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.birthday" class="Symfony\Component\Form\Extension\Core\Type\BirthdayType">
      <tag name="form.type" alias="birthday"/>
    </service>
    <service id="form.type.checkbox" class="Symfony\Component\Form\Extension\Core\Type\CheckboxType">
      <tag name="form.type" alias="checkbox"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType">
      <tag name="form.type" alias="choice"/>
      <argument type="service">
        <service class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
          <argument type="service">
            <service class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
              <argument type="service">
                <service class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
              </argument>
              <argument type="service" id="property_accessor"/>
            </service>
          </argument>
        </service>
      </argument>
    </service>
    <service id="form.type.collection" class="Symfony\Component\Form\Extension\Core\Type\CollectionType">
      <tag name="form.type" alias="collection"/>
    </service>
    <service id="form.type.country" class="Symfony\Component\Form\Extension\Core\Type\CountryType">
      <tag name="form.type" alias="country"/>
    </service>
    <service id="form.type.date" class="Symfony\Component\Form\Extension\Core\Type\DateType">
      <tag name="form.type" alias="date"/>
    </service>
    <service id="form.type.datetime" class="Symfony\Component\Form\Extension\Core\Type\DateTimeType">
      <tag name="form.type" alias="datetime"/>
    </service>
    <service id="form.type.email" class="Symfony\Component\Form\Extension\Core\Type\EmailType">
      <tag name="form.type" alias="email"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType">
      <tag name="form.type" alias="file"/>
    </service>
    <service id="form.type.hidden" class="Symfony\Component\Form\Extension\Core\Type\HiddenType">
      <tag name="form.type" alias="hidden"/>
    </service>
    <service id="form.type.integer" class="Symfony\Component\Form\Extension\Core\Type\IntegerType">
      <tag name="form.type" alias="integer"/>
    </service>
    <service id="form.type.language" class="Symfony\Component\Form\Extension\Core\Type\LanguageType">
      <tag name="form.type" alias="language"/>
    </service>
    <service id="form.type.locale" class="Symfony\Component\Form\Extension\Core\Type\LocaleType">
      <tag name="form.type" alias="locale"/>
    </service>
    <service id="form.type.money" class="Symfony\Component\Form\Extension\Core\Type\MoneyType">
      <tag name="form.type" alias="money"/>
    </service>
    <service id="form.type.number" class="Symfony\Component\Form\Extension\Core\Type\NumberType">
      <tag name="form.type" alias="number"/>
    </service>
    <service id="form.type.password" class="Symfony\Component\Form\Extension\Core\Type\PasswordType">
      <tag name="form.type" alias="password"/>
    </service>
    <service id="form.type.percent" class="Symfony\Component\Form\Extension\Core\Type\PercentType">
      <tag name="form.type" alias="percent"/>
    </service>
    <service id="form.type.radio" class="Symfony\Component\Form\Extension\Core\Type\RadioType">
      <tag name="form.type" alias="radio"/>
    </service>
    <service id="form.type.repeated" class="Symfony\Component\Form\Extension\Core\Type\RepeatedType">
      <tag name="form.type" alias="repeated"/>
    </service>
    <service id="form.type.search" class="Symfony\Component\Form\Extension\Core\Type\SearchType">
      <tag name="form.type" alias="search"/>
    </service>
    <service id="form.type.textarea" class="Symfony\Component\Form\Extension\Core\Type\TextareaType">
      <tag name="form.type" alias="textarea"/>
    </service>
    <service id="form.type.text" class="Symfony\Component\Form\Extension\Core\Type\TextType">
      <tag name="form.type" alias="text"/>
    </service>
    <service id="form.type.time" class="Symfony\Component\Form\Extension\Core\Type\TimeType">
      <tag name="form.type" alias="time"/>
    </service>
    <service id="form.type.timezone" class="Symfony\Component\Form\Extension\Core\Type\TimezoneType">
      <tag name="form.type" alias="timezone"/>
    </service>
    <service id="form.type.url" class="Symfony\Component\Form\Extension\Core\Type\UrlType">
      <tag name="form.type" alias="url"/>
    </service>
    <service id="form.type.button" class="Symfony\Component\Form\Extension\Core\Type\ButtonType">
      <tag name="form.type" alias="button"/>
    </service>
    <service id="form.type.submit" class="Symfony\Component\Form\Extension\Core\Type\SubmitType">
      <tag name="form.type" alias="submit"/>
    </service>
    <service id="form.type.reset" class="Symfony\Component\Form\Extension\Core\Type\ResetType">
      <tag name="form.type" alias="reset"/>
    </service>
    <service id="form.type.currency" class="Symfony\Component\Form\Extension\Core\Type\CurrencyType">
      <tag name="form.type" alias="currency"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="service">
        <service class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
          <argument type="service">
            <service class="Symfony\Component\Form\Util\ServerParams" public="false">
              <argument type="service" id="request_stack"/>
            </service>
          </argument>
        </service>
      </argument>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension">
      <tag name="form.type_extension" alias="repeated"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension">
      <tag name="form.type_extension" alias="submit"/>
    </service>
    <service id="form.csrf_provider" class="Symfony\Component\Form\Extension\Csrf\CsrfProvider\CsrfTokenManagerAdapter">
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.default"/>
      <argument>validators</argument>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager">
      <argument type="service">
        <service class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false">
          <argument type="service" id="security.secure_random"/>
        </service>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
          <argument type="service" id="session"/>
        </service>
      </argument>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="service">
        <service class="Symfony\Component\Asset\PathPackage" public="false">
          <argument></argument>
          <argument type="service">
            <service class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
          </argument>
          <argument type="service" id="assets.context"/>
        </service>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="templating.name_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="templating.filename_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser"/>
    <service id="templating.locator" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator" public="false">
      <argument type="service" id="file_locator"/>
      <argument>/Users/michael/Documents/workspace/bamboo/app/cache/dev</argument>
    </service>
    <service id="templating.helper.assets" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\AssetsHelper">
      <tag name="templating.helper" alias="assets"/>
      <argument type="service" id="assets.packages"/>
      <argument type="collection"/>
    </service>
    <service id="templating.helper.router" class="Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper">
      <tag name="templating.helper" alias="router"/>
      <argument type="service" id="router"/>
    </service>
    <service id="validator" class="Symfony\Component\Validator\Validator\ValidatorInterface">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilderInterface">
      <call method="setConstraintValidatorFactory">
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory" public="false">
            <argument type="service" id="service_container"/>
            <argument type="collection">
              <argument key="city_exists">elcodi.validator.city_exists</argument>
              <argument key="validator.expression">validator.expression</argument>
              <argument key="Symfony\Component\Validator\Constraints\EmailValidator">validator.email</argument>
              <argument key="security.validator.user_password">security.validator.user_password</argument>
              <argument key="doctrine.orm.validator.unique">doctrine.orm.validator.unique</argument>
              <argument key="minimum_money">elcodi_admin.validator.minimum_money</argument>
            </argument>
          </service>
        </argument>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="addYamlMappings">
        <argument type="collection">
          <argument>/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/GeoBundle/Resources/config/validation.yml</argument>
          <argument>/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/UserBundle/Resources/config/validation.yml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotation_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>false</argument>
    </service>
    <service id="fragment.listener" class="Symfony\Component\HttpKernel\EventListener\FragmentListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="uri_signer"/>
      <argument>/_fragment</argument>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler">
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service">
        <service class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage" public="false">
          <argument>file:/Users/michael/Documents/workspace/bamboo/app/cache/dev/profiler</argument>
          <argument></argument>
          <argument></argument>
          <argument>86400</argument>
        </service>
      </argument>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="255"/>
            <call method="setKernel">
              <argument type="service" id="kernel" on-invalid="ignore"/>
            </call>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bundle\FrameworkBundle\DataCollector\AjaxDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="255"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="255"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="255"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="255"/>
            <tag name="monolog.logger" channel="profiler"/>
            <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="255"/>
            <argument type="service" id="kernel" on-invalid="ignore"/>
            <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="255"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.translation"/>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
            <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="255"/>
            <argument type="service" id="twig.profile"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
            <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
            <argument type="service" id="doctrine"/>
            <call method="addLogger">
              <argument>default</argument>
              <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
            </call>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector" public="false">
            <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer" priority="245"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
            <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security"/>
            <argument type="service" id="security.token_storage" on-invalid="ignore"/>
            <argument type="service" id="security.role_hierarchy"/>
          </service>
        </argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Snc\RedisBundle\DataCollector\RedisDataCollector" public="false">
            <tag name="data_collector" template="SncRedisBundle:Collector:redis" id="redis"/>
            <argument type="service" id="snc_redis.logger"/>
          </service>
        </argument>
      </call>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="profiler"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="data_collector.request" class="Symfony\Component\HttpKernel\DataCollector\RequestDataCollector">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="255"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="255"/>
    </service>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension">
      <tag name="form.type_extension" alias="form"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="255"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="data_collector.translation" class="Symfony\Component\Translation\DataCollector\TranslationDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/translation.html.twig" id="translation" priority="255"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader">
      <tag name="monolog.logger" channel="router"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="monolog.logger.router" on-invalid="null"/>
      <argument type="service">
        <service class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
          <call method="addLoader">
            <argument type="service" id="elcodi.loader.plugin_routes"/>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                    <tag name="routing.loader"/>
                    <argument type="service" id="annotation_reader"/>
                  </service>
                </argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service">
                  <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                    <tag name="routing.loader"/>
                    <argument type="service" id="annotation_reader"/>
                  </service>
                </argument>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="annotation_reader"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service">
              <service class="FOS\RestBundle\Routing\Loader\DirectoryRouteLoader" public="false">
                <tag name="routing.loader"/>
                <argument type="service" id="file_locator"/>
                <argument type="service" id="fos_rest.routing.loader.processor"/>
              </service>
            </argument>
          </call>
          <call method="addLoader">
            <argument type="service" id="fos_rest.routing.loader.controller"/>
          </call>
          <call method="addLoader">
            <argument type="service" id="fos_rest.routing.loader.yaml_collection"/>
          </call>
          <call method="addLoader">
            <argument type="service" id="fos_rest.routing.loader.xml_collection"/>
          </call>
        </service>
      </argument>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="router"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch"/>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="monolog.logger" channel="event"/>
      <argument type="service">
        <service class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher" public="false">
          <argument type="service" id="service_container"/>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <call method="addListenerService">
        <argument>cart.onload</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.load_cart_prices</argument>
          <argument>loadCartPurchasablesAmount</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListenerService">
        <argument>cart.onload</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.load_cart_prices</argument>
          <argument>loadCartTotalAmount</argument>
        </argument>
        <argument>2</argument>
      </call>
      <call method="addListenerService">
        <argument>cart.onload</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.save_cart</argument>
          <argument>saveCart</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>cart.preload</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.validate_cart_integrity</argument>
          <argument>validateCartIntegrity</argument>
        </argument>
        <argument>24</argument>
      </call>
      <call method="addListenerService">
        <argument>cart.onload</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.validate_cart_amount</argument>
          <argument>validateAmount</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListenerService">
        <argument>order_line.oncreated</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.update_stock_by_cart_line</argument>
          <argument>updatePurchasableStockByCartLine</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>cart.onload</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.validate_empty_shipping_amount</argument>
          <argument>validateEmptyShippingAmount</argument>
        </argument>
        <argument>4</argument>
      </call>
      <call method="addListenerService">
        <argument>cart.onload</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.save_cart_to_session</argument>
          <argument>saveCartInSession</argument>
        </argument>
        <argument>-2</argument>
      </call>
      <call method="addListenerService">
        <argument>order.oncreated</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.order_creation</argument>
          <argument>saveOrder</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>order.oncreated</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.order_creation</argument>
          <argument>setCartAsOrdered</argument>
        </argument>
        <argument>-16</argument>
      </call>
      <call method="addListenerService">
        <argument>address.onclone</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.address_clone</argument>
          <argument>updateCarts</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>coupon.onused</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.make_coupon_used</argument>
          <argument>makeUse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.referrer_session</argument>
          <argument>updateSessionReferrer</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.update_cart_with_user</argument>
          <argument>onAuthenticationSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.update_last_login</argument>
          <argument>updateLastLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>payment.order.load</argument>
        <argument type="collection">
          <argument>elcodi_bridge.payment_suite.event_listener.cart_paid</argument>
          <argument>transformCartToOrder</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>payment.order.success</argument>
        <argument type="collection">
          <argument>elcodi_bridge.payment_suite.event_listener.order_to_paid</argument>
          <argument>setOrderToPaid</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>translator.warmup</argument>
        <argument type="collection">
          <argument>elcodi.services.cached_entity_translation_provider</argument>
          <argument>warmUp</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.entity_translator_form</argument>
          <argument>saveEntityTranslations</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument>data_collector.router</argument>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument>jms_i18n_routing.cookie_setting_listener</argument>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument>mmoreram.controllerextra.event_listeners.resolver_event_listener</argument>
          <argument>onKernelController</argument>
        </argument>
        <argument>%mmoreram.controllerextra.resolver_priority%</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument>mmoreram.controllerextra.resolver.flush_annotation_resolver</argument>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument>mmoreram.controllerextra.resolver.json_resolver_annotation_resolver</argument>
          <argument>onKernelView</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument>mmoreram.controllerextra.resolver.json_resolver_annotation_resolver</argument>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument>mmoreram.headers.listener</argument>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>order.oncreated</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.covert_cart_coupons_to_order_coupons</argument>
          <argument>createOrderCouponsByCartCoupons</argument>
        </argument>
        <argument>-16</argument>
      </call>
      <call method="addListenerService">
        <argument>cart_coupon.onapply</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.create_and_save_cart_coupon</argument>
          <argument>createAndSaveCartCoupon</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListenerService">
        <argument>order_coupon.onapply</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.create_order_coupon_by_coupon</argument>
          <argument>createOrderCouponByCoupon</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>cart.onload</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.load_cart_coupon_amount</argument>
          <argument>refreshCouponAmount</argument>
        </argument>
        <argument>6</argument>
      </call>
      <call method="addListenerService">
        <argument>cart_coupon.onremove</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.remove_cart_coupon</argument>
          <argument>removeCartCoupon</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>cart.onload</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.try_automatic_coupons_application</argument>
          <argument>tryAutomaticCoupons</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListenerService">
        <argument>cart_coupon.onapply</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.validate_cart_coupon</argument>
          <argument>validateCoupon</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListenerService">
        <argument>cart_coupon.onapply</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.validate_coupon_duplication</argument>
          <argument>validateDuplicatedCoupon</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListenerService">
        <argument>cart_coupon.oncheck</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.validate_coupon</argument>
          <argument>validateCoupon</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListenerService">
        <argument>cart_coupon.oncheck</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.validate_coupon_minimum_price</argument>
          <argument>validateCartCouponMinimumPrice</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>cart_coupon.oncheck</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.validate_coupon_rules</argument>
          <argument>validateCartCouponRules</argument>
        </argument>
        <argument>-16</argument>
      </call>
      <call method="addListenerService">
        <argument>cart.onload</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.validate_coupons_from_cart</argument>
          <argument>refreshCartCoupons</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListenerService">
        <argument>cart_coupon.onapply</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.validate_stackable_coupon</argument>
          <argument>validateStackableCoupon</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListenerService">
        <argument>cart_coupon.onapply</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.update_cart_after_coupon_change</argument>
          <argument>updateCart</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>cart_coupon.onremove</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.update_cart_after_coupon_change</argument>
          <argument>updateCart</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>newsletter.onsubscribe</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.newsletter</argument>
          <argument>onNewsletterSubscribeFlush</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>newsletter.onunsubscribe</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.newsletter</argument>
          <argument>onNewsletterUnsubscribeFlush</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>comment.onadd</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.comment_cache_invalidation</argument>
          <argument>onCommentChange</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>comment.onedit</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.comment_cache_invalidation</argument>
          <argument>onCommentChange</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>comment.onremove</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.comment_cache_invalidation</argument>
          <argument>onCommentChange</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>comment.onvoted</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.comment_cache_invalidation</argument>
          <argument>onCommentChange</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>cart.onload</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.load_cart_shipping_amount</argument>
          <argument>loadCartShippingAmount</argument>
        </argument>
        <argument>6</argument>
      </call>
      <call method="addListenerService">
        <argument>order.oncreated</argument>
        <argument type="collection">
          <argument>elcodi.event_listener.load_order_shipping_method</argument>
          <argument>loadOrderShippingMethod</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListenerService">
        <argument>categories.onchange</argument>
        <argument type="collection">
          <argument>elcodi_store.event_listener.categories_order_change</argument>
          <argument>onChange</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>password.recover</argument>
        <argument type="collection">
          <argument>elcodi_elcodi_store.event_listener.password_remember_credentials</argument>
          <argument>giveCredentialsWithNewPassword</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>customer.register</argument>
        <argument type="collection">
          <argument>elcodi_elcodi_store.event_listener.send_customer_registration_email</argument>
          <argument>sendCustomerRegistrationEmail</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>password.remember</argument>
        <argument type="collection">
          <argument>elcodi_elcodi_store.event_listener.send_password_remember_email</argument>
          <argument>sendPasswordRememberEmail</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>password.recover</argument>
        <argument type="collection">
          <argument>elcodi_elcodi_store.event_listener.send_password_recover_email</argument>
          <argument>sendPasswordRecoverEmail</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>cart.onload</argument>
        <argument type="collection">
          <argument>elcodi_store.event_listener.shipping_appliance</argument>
          <argument>removeInvalidShippingMethod</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListenerService">
        <argument>cart.onload</argument>
        <argument type="collection">
          <argument>elcodi_store.event_listener.shipping_appliance</argument>
          <argument>loadCheapestShippingMethod</argument>
        </argument>
        <argument>7</argument>
      </call>
      <call method="addListenerService">
        <argument>order.oncreated</argument>
        <argument type="collection">
          <argument>elcodi_elcodi_store.event_listener.send_order_confirmation_email</argument>
          <argument>sendOrderConfirmationEmail</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>state_machine.order_shipping_states_machine.transition_ship</argument>
        <argument type="collection">
          <argument>elcodi_elcodi_store.event_listener.send_order_shipped_email</argument>
          <argument>sendOrderShippedEmail</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>cart_coupon.onapply</argument>
        <argument type="collection">
          <argument>elcodi_store.event_listener.just_one_manual</argument>
          <argument>assertJustOneManualCoupon</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListenerService">
        <argument>order.oncreated</argument>
        <argument type="collection">
          <argument>elcodi_elcodi_store.event_listener.add_order_completed_metric</argument>
          <argument>addMetric</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>store.head_bottom</argument>
        <argument type="collection">
          <argument>elcodi_plugin.google_analytics.renderer</argument>
          <argument>renderJavascript</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>store.head_bottom</argument>
        <argument type="collection">
          <argument>elcodi_plugin.pinterest.renderer</argument>
          <argument>renderAsynchronousJavascript</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>store.body_bottom</argument>
        <argument type="collection">
          <argument>elcodi_plugin.pinterest.renderer</argument>
          <argument>renderJavascript</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>store.product_pin_top</argument>
        <argument type="collection">
          <argument>elcodi_plugin.pinterest.renderer</argument>
          <argument>renderPin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>admin.header_actions</argument>
        <argument type="collection">
          <argument>elcodi_plugin.product_csv.renderer</argument>
          <argument>renderButtons</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>admin.body_top</argument>
        <argument type="collection">
          <argument>elcodi_plugin.store_setup_wizard.renderer</argument>
          <argument>renderMiniWizard</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>admin.body_top</argument>
        <argument type="collection">
          <argument>elcodi_plugin.store_setup_wizard.renderer</argument>
          <argument>renderEnableStoreMessage</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>admin.body_top</argument>
        <argument type="collection">
          <argument>elcodi_plugin.store_setup_wizard.renderer</argument>
          <argument>renderGoNextStepMessage</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>admin.body_top</argument>
        <argument type="collection">
          <argument>elcodi_plugin.store_setup_wizard.renderer</argument>
          <argument>renderDisableUnderConstructionMode</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>store.head_bottom</argument>
        <argument type="collection">
          <argument>elcodi_plugin.disqus.renderer</argument>
          <argument>renderJavascript</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>store.blog_post_view_bottom</argument>
        <argument type="collection">
          <argument>elcodi_plugin.disqus.renderer</argument>
          <argument>renderDisqusBlogPostBlock</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>store.product_view_bottom</argument>
        <argument type="collection">
          <argument>elcodi_plugin.disqus.renderer</argument>
          <argument>renderDisqusProductBlock</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>store.body_bottom</argument>
        <argument type="collection">
          <argument>elcodi_plugin.twitter.javascript_renderer</argument>
          <argument>renderJavascript</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>admin.footer_script</argument>
        <argument type="collection">
          <argument>elcodi_plugin.twitter.javascript_renderer</argument>
          <argument>renderJavascript</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>store.product_pin_top</argument>
        <argument type="collection">
          <argument>elcodi_plugin.twitter.share_tweet_renderer</argument>
          <argument>renderShareProduct</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>store.order_thanks</argument>
        <argument type="collection">
          <argument>elcodi_plugin.twitter.share_tweet_renderer</argument>
          <argument>renderShareOrder</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>store.footer_social</argument>
        <argument type="collection">
          <argument>elcodi_plugin.twitter.follow_renderer</argument>
          <argument>renderFollowButton</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>store.body_bottom</argument>
        <argument type="collection">
          <argument>elcodi_plugin.facebook.javascript_renderer</argument>
          <argument>renderJavascript</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>store.product_pin_top</argument>
        <argument type="collection">
          <argument>elcodi_plugin.facebook.share_post_renderer</argument>
          <argument>renderShareProduct</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>store.order_thanks</argument>
        <argument type="collection">
          <argument>elcodi_plugin.facebook.share_post_renderer</argument>
          <argument>renderShareOrder</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>store.footer_social</argument>
        <argument type="collection">
          <argument>elcodi_plugin.facebook.follow_renderer</argument>
          <argument>renderFollowButton</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>payment.collect</argument>
        <argument type="collection">
          <argument>elcodi_plugin.paypal.event_listener.payment_collect</argument>
          <argument>addPaypalPaymentMethod</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>payment.collect</argument>
        <argument type="collection">
          <argument>elcodi_plugin.free_payment.event_listener.payment_collect</argument>
          <argument>addFreePaymentPaymentMethod</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>payment.collect</argument>
        <argument type="collection">
          <argument>elcodi_plugin.stripe.event_listener.payment_collect</argument>
          <argument>addStripePaymentMethod</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>shipping.collect</argument>
        <argument type="collection">
          <argument>elcodi_plugin.custom_shipping.event_listener.shipping_collect</argument>
          <argument>addCustomShippingMethods</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>payment.collect</argument>
        <argument type="collection">
          <argument>elcodi_plugin.bankwire.event_listener.payment_collect</argument>
          <argument>addFreePaymentPaymentMethod</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListenerService">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument>fos_rest.body_listener</argument>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addSubscriberService">
        <argument>response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>streamed_response_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\StreamedResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>locale_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\LocaleListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>translator_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\TranslatorListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>session_listener</argument>
        <argument>Symfony\Bundle\FrameworkBundle\EventListener\SessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>session.save_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\SaveSessionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>fragment.listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\FragmentListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>profiler_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ProfilerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>data_collector.request</argument>
        <argument>Symfony\Component\HttpKernel\DataCollector\RequestDataCollector</argument>
      </call>
      <call method="addSubscriberService">
        <argument>router_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\RouterListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>debug.debug_handlers_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\DebugHandlersListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>security.firewall</argument>
        <argument>Symfony\Component\Security\Http\Firewall</argument>
      </call>
      <call method="addSubscriberService">
        <argument>security.rememberme.response_listener</argument>
        <argument>Symfony\Component\Security\Http\RememberMe\ResponseListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>twig.exception_listener</argument>
        <argument>Symfony\Component\HttpKernel\EventListener\ExceptionListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>monolog.handler.console</argument>
        <argument>Symfony\Bridge\Monolog\Handler\ConsoleHandler</argument>
      </call>
      <call method="addSubscriberService">
        <argument>swiftmailer.email_sender.listener</argument>
        <argument>Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.controller.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.view.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.cache.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>sensio_framework_extra.security.listener</argument>
        <argument>Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener</argument>
      </call>
      <call method="addSubscriberService">
        <argument>web_profiler.debug_toolbar</argument>
        <argument>Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <argument type="service">
        <service class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
          <tag name="monolog.logger" channel="request"/>
          <argument type="service" id="service_container"/>
          <argument type="service" id="controller_name_converter"/>
          <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
        </service>
      </argument>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="security.context" class="Symfony\Component\Security\Core\SecurityContext">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage"/>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider" public="false">
            <argument type="service" id="elcodi_admin.security.one_time_login_authenticator"/>
            <argument type="service" id="security.user.provider.concrete.adminuser"/>
            <argument>admin_area</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
            <argument type="service" id="security.user.provider.concrete.adminuser"/>
            <argument type="service" id="hwi_oauth.user_checker"/>
            <argument>admin_area</argument>
            <argument type="service" id="security.encoder_factory"/>
            <argument>true</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
            <argument>57d4e442284ec5.72256132</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
            <argument type="service" id="security.user.provider.concrete.customer"/>
            <argument type="service" id="hwi_oauth.user_checker"/>
            <argument>store_area</argument>
            <argument type="service" id="security.encoder_factory"/>
            <argument>true</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="HWI\Bundle\OAuthBundle\Security\Core\Authentication\Provider\OAuthProvider" public="false">
            <argument type="service" id="elcodi_store.provider.oauth"/>
            <argument type="service" id="hwi_oauth.resource_ownermap.store_area"/>
            <argument type="service" id="hwi_oauth.user_checker"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
            <argument>57d4e442284ec5.72256132</argument>
          </service>
        </argument>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</argument>
      <argument>Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
            <tag name="security.voter" priority="245"/>
            <argument type="service" id="security.role_hierarchy"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
            <tag name="security.voter" priority="245"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false"/>
            </argument>
            <argument type="service" id="security.authentication.trust_resolver"/>
            <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
            <tag name="security.voter" priority="250"/>
            <argument type="service" id="security.authentication.trust_resolver"/>
          </service>
        </argument>
      </argument>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument type="collection">
        <argument key="ROLE_CUSTOMER" type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument key="ROLE_ADMIN" type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
      </argument>
    </service>
    <service id="security.firewall" class="Symfony\Component\Security\Http\Firewall">
      <tag name="kernel.event_subscriber"/>
      <argument type="service">
        <service class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument key="security.firewall.map.context.dev_area" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>^/_(?:profiler|wdt|error)/</argument>
              </service>
            </argument>
            <argument key="security.firewall.map.context.public_area" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>^/(?:css|images|js)/</argument>
              </service>
            </argument>
            <argument key="security.firewall.map.context.api_area" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>^/api/</argument>
              </service>
            </argument>
            <argument key="security.firewall.map.context.admin_area" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>^/admin(?:$|/)</argument>
              </service>
            </argument>
            <argument key="security.firewall.map.context.store_area" type="service">
              <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
                <argument>^/</argument>
              </service>
            </argument>
          </argument>
        </service>
      </argument>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <call method="registerListener">
        <argument>admin_area</argument>
        <argument>admin_logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
      </call>
      <call method="registerListener">
        <argument>store_area</argument>
        <argument>store_logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="router" on-invalid="null"/>
      <argument type="service" id="router" on-invalid="null"/>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
          <argument>80</argument>
          <argument>443</argument>
        </service>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/admin/login.*</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/admin/password.*</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/admin/.*</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service">
          <service class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
            <argument>^/.*</argument>
          </service>
        </argument>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="templating.helper.logout_url" class="Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper">
      <tag name="templating.helper" alias="logout_url"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="templating.helper.security" class="Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper">
      <tag name="templating.helper" alias="security"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="security.user.provider.concrete.customer" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false">
      <argument type="service" id="doctrine"/>
      <argument>Elcodi\Component\User\Entity\Customer</argument>
      <argument>email</argument>
      <argument>null</argument>
    </service>
    <service id="security.user.provider.concrete.adminuser" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false">
      <argument type="service" id="doctrine"/>
      <argument>Elcodi\Component\User\Entity\AdminUser</argument>
      <argument>email</argument>
      <argument>null</argument>
    </service>
    <service id="security.firewall.map.context.dev_area" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.firewall.map.context.public_area" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.firewall.map.context.api_area" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.firewall.map.context.admin_area" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument type="collection">
              <argument type="service" id="security.user.provider.concrete.customer"/>
              <argument type="service" id="security.user.provider.concrete.adminuser"/>
            </argument>
            <argument>admin_area</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="security.http_utils"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument>admin_login</argument>
              </service>
            </argument>
            <argument type="collection">
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="intention">logout</argument>
              <argument key="logout_path">admin_logout</argument>
            </argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument>admin_area</argument>
            <argument type="service" id="elcodi_admin.security.one_time_login_authenticator"/>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
            <tag name="security.remember_me_aware" id="admin_area" provider="security.user.provider.concrete.adminuser"/>
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument type="service" id="security.authentication.session_strategy"/>
            <argument type="service" id="security.http_utils"/>
            <argument>admin_area</argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">admin_login</argument>
                    <argument key="default_target_path">admin_homepage</argument>
                    <argument key="always_use_default_target_path">false</argument>
                    <argument key="target_path_parameter">_target_path</argument>
                    <argument key="use_referer">false</argument>
                  </argument>
                </call>
                <call method="setProviderKey">
                  <argument>admin_area</argument>
                </call>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
                <argument type="service" id="http_kernel"/>
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <argument type="service" id="monolog.logger.security" on-invalid="null"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">admin_login</argument>
                    <argument key="failure_path">null</argument>
                    <argument key="failure_forward">false</argument>
                    <argument key="failure_path_parameter">_failure_path</argument>
                  </argument>
                </call>
              </service>
            </argument>
            <argument type="collection">
              <argument key="check_path">admin_login_check</argument>
              <argument key="username_parameter">elcodi_admin_user_form_type_login[email]</argument>
              <argument key="password_parameter">elcodi_admin_user_form_type_login[password]</argument>
              <argument key="use_forward">false</argument>
              <argument key="require_previous_session">true</argument>
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="intention">authenticate</argument>
              <argument key="post_only">true</argument>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
            <argument>null</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument>57d4e442284ec5.72256132</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="security.authentication.manager"/>
          </service>
        </argument>
        <argument type="service" id="security.access_listener"/>
        <argument type="service" id="elcodi_plugin.store_setup_wizard.event_listener.dashboard_redirection"/>
        <argument type="service" id="elcodi_plugin.store_setup_wizard.event_listener.disable_wizard"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
          <argument type="service" id="security.token_storage"/>
          <argument type="service" id="security.authentication.trust_resolver"/>
          <argument type="service" id="security.http_utils"/>
          <argument>admin_area</argument>
          <argument type="service">
            <service class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
              <argument type="service" id="http_kernel"/>
              <argument type="service" id="security.http_utils"/>
              <argument>admin_login</argument>
              <argument>false</argument>
            </service>
          </argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="service" id="monolog.logger.security" on-invalid="null"/>
          <argument>false</argument>
        </service>
      </argument>
    </service>
    <service id="hwi_oauth.resource_ownermap.store_area" class="HWI\Bundle\OAuthBundle\Security\Http\ResourceOwnerMap">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection">
        <argument key="github">github</argument>
        <argument key="paypal">paypal</argument>
      </argument>
      <argument>%hwi_oauth.resource_ownermap.configured.store_area%</argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="security.firewall.map.context.store_area" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument type="collection">
              <argument type="service" id="security.user.provider.concrete.customer"/>
              <argument type="service" id="security.user.provider.concrete.adminuser"/>
            </argument>
            <argument>store_area</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="security.http_utils"/>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument>store_homepage</argument>
              </service>
            </argument>
            <argument type="collection">
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="intention">logout</argument>
              <argument key="logout_path">store_logout</argument>
            </argument>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
            <tag name="security.remember_me_aware" id="store_area" provider="security.user.provider.concrete.customer"/>
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument type="service" id="security.authentication.session_strategy"/>
            <argument type="service" id="security.http_utils"/>
            <argument>store_area</argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">store_login</argument>
                    <argument key="always_use_default_target_path">false</argument>
                    <argument key="default_target_path">/</argument>
                    <argument key="target_path_parameter">_target_path</argument>
                    <argument key="use_referer">false</argument>
                  </argument>
                </call>
                <call method="setProviderKey">
                  <argument>store_area</argument>
                </call>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
                <argument type="service" id="http_kernel"/>
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <argument type="service" id="monolog.logger.security" on-invalid="null"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">store_login</argument>
                    <argument key="failure_path">null</argument>
                    <argument key="failure_forward">false</argument>
                    <argument key="failure_path_parameter">_failure_path</argument>
                  </argument>
                </call>
              </service>
            </argument>
            <argument type="collection">
              <argument key="check_path">store_login_check</argument>
              <argument key="username_parameter">store_user_form_type_login[email]</argument>
              <argument key="password_parameter">store_user_form_type_login[password]</argument>
              <argument key="use_forward">false</argument>
              <argument key="require_previous_session">true</argument>
              <argument key="csrf_parameter">_csrf_token</argument>
              <argument key="intention">authenticate</argument>
              <argument key="post_only">true</argument>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
            <argument>null</argument>
          </service>
        </argument>
        <argument type="service">
          <service class="HWI\Bundle\OAuthBundle\Security\Http\Firewall\OAuthListener" public="false">
            <tag name="security.remember_me_aware" id="store_area" provider="security.user.provider.concrete.customer"/>
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="security.authentication.manager"/>
            <argument type="service" id="security.authentication.session_strategy"/>
            <argument type="service" id="security.http_utils"/>
            <argument>store_area</argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">store_login</argument>
                    <argument key="always_use_default_target_path">false</argument>
                    <argument key="default_target_path">/</argument>
                    <argument key="target_path_parameter">_target_path</argument>
                    <argument key="use_referer">false</argument>
                  </argument>
                </call>
                <call method="setProviderKey">
                  <argument>store_area</argument>
                </call>
              </service>
            </argument>
            <argument type="service">
              <service class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
                <argument type="service" id="http_kernel"/>
                <argument type="service" id="security.http_utils"/>
                <argument type="collection"/>
                <argument type="service" id="monolog.logger.security" on-invalid="null"/>
                <call method="setOptions">
                  <argument type="collection">
                    <argument key="login_path">store_login</argument>
                    <argument key="failure_path">store_login</argument>
                    <argument key="failure_forward">false</argument>
                    <argument key="failure_path_parameter">_failure_path</argument>
                  </argument>
                </call>
              </service>
            </argument>
            <argument type="collection">
              <argument key="use_forward">false</argument>
              <argument key="check_path">/login_check</argument>
              <argument key="require_previous_session">true</argument>
            </argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
            <call method="setResourceOwnerMap">
              <argument type="service" id="hwi_oauth.resource_ownermap.store_area"/>
            </call>
            <call method="setCheckPaths">
              <argument type="collection">
                <argument>/login/check-github</argument>
                <argument>/login/check-paypal</argument>
              </argument>
            </call>
          </service>
        </argument>
        <argument type="service">
          <service class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
            <argument type="service" id="security.token_storage"/>
            <argument>57d4e442284ec5.72256132</argument>
            <argument type="service" id="monolog.logger.security" on-invalid="null"/>
            <argument type="service" id="security.authentication.manager"/>
          </service>
        </argument>
        <argument type="service" id="security.access_listener"/>
        <argument type="service" id="elcodi_common.event_listener.firewall_store_area"/>
        <argument type="service" id="elcodi_store.event_listener.store_disabled"/>
      </argument>
      <argument type="service">
        <service class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
          <argument type="service" id="security.token_storage"/>
          <argument type="service" id="security.authentication.trust_resolver"/>
          <argument type="service" id="security.http_utils"/>
          <argument>store_area</argument>
          <argument type="service">
            <service class="HWI\Bundle\OAuthBundle\Security\Http\EntryPoint\OAuthEntryPoint" public="false">
              <argument type="service" id="http_kernel"/>
              <argument type="service" id="security.http_utils"/>
              <argument>store_login</argument>
              <argument>false</argument>
            </service>
          </argument>
          <argument>null</argument>
          <argument>null</argument>
          <argument type="service" id="monolog.logger.security" on-invalid="null"/>
          <argument>false</argument>
        </service>
      </argument>
    </service>
    <service id="twig" class="Twig_Environment">
      <argument type="service" id="twig.loader"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">false</argument>
        <argument key="exception_controller">twig.controller.exception:showAction</argument>
        <argument key="form_themes" type="collection">
          <argument>form_div_layout.html.twig</argument>
        </argument>
        <argument key="autoescape">filename</argument>
        <argument key="cache">/Users/michael/Documents/workspace/bamboo/app/cache/dev/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="paths" type="collection"/>
        <argument key="date" type="collection">
          <argument key="format">F j, Y H:i</argument>
          <argument key="interval_format">%d days</argument>
          <argument key="timezone">null</argument>
        </argument>
        <argument key="number_format" type="collection">
          <argument key="decimals">0</argument>
          <argument key="decimal_point">.</argument>
          <argument key="thousands_separator">,</argument>
        </argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.text"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Elcodi\Component\Currency\Twig\MoneyPrinterExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="elcodi.money_printer"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Elcodi\Component\Media\Twig\ImageExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="router"/>
            <argument>elcodi.route.image_resize</argument>
            <argument>elcodi.route.image_view</argument>
            <argument></argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Elcodi\Component\Product\Twig\ProductOptionsResolverExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="elcodi.resolver.product_options"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Elcodi\Component\Product\Twig\PurchasableNameResolverExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="elcodi.name_resolver.purchasable"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Elcodi\Component\Product\Twig\PurchasableImageResolverExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="elcodi.image_resolver.purchasable"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Elcodi\Component\Shipping\Twig\ShippingExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="elcodi.wrapper.shipping_methods"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Elcodi\Component\Menu\Twig\PrintRouteExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Elcodi\Component\Plugin\Twig\HookExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="elcodi.event_dispatcher.hook_system"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="security.logout_url_generator"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="twig.profile"/>
            <argument type="service" id="debug.stopwatch" on-invalid="null"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="translator"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="assets.packages"/>
            <argument type="service">
              <service class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
                <tag name="twig.extension"/>
                <argument type="service" id="request_stack"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\TwigBundle\Extension\ActionsExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="fragment.handler"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
            <tag name="twig.extension"/>
            <argument>null</argument>
            <argument>/Users/michael/Documents/workspace/bamboo/app</argument>
            <argument>UTF-8</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="router"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
            <argument>true</argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="fragment.handler"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="request_stack"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service">
              <service class="Symfony\Bridge\Twig\Form\TwigRenderer" public="false">
                <argument type="service">
                  <service class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
                    <argument type="collection">
                      <argument>form_div_layout.html.twig</argument>
                    </argument>
                  </service>
                </argument>
                <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Twig_Extension_Debug" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Twig\AsseticExtension" public="false">
            <tag name="twig.extension"/>
            <tag name="assetic.templating.twig"/>
            <argument type="service" id="assetic.asset_factory"/>
            <argument type="service" id="templating.name_parser"/>
            <argument>false</argument>
            <argument type="collection"/>
            <argument type="collection">
              <argument>AdminCoreBundle</argument>
              <argument>StoreCoreBundle</argument>
              <argument>StoreTemplateBundle</argument>
              <argument>AdminGeoBundle</argument>
              <argument>AdminStoreBundle</argument>
            </argument>
            <argument type="service">
              <service class="Symfony\Bundle\AsseticBundle\DefaultValueSupplier" public="false">
                <argument type="service" id="service_container"/>
              </service>
            </argument>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.gravatar"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="HWI\Bundle\OAuthBundle\Twig\Extension\OAuthExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="hwi_oauth.templating.helper.oauth"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Elcodi\Component\Metric\API\Twig\APIMetricExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="elcodi.redis_metrics_bucket"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Elcodi\Component\Payment\Twig\PaymentExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="elcodi.wrapper.payment_methods"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Elcodi\Store\CoreBundle\Twig\EncryptExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Elcodi\Store\CoreBundle\Twig\ReferrerExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="elcodi.referrer_provider"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Elcodi\Store\CoreBundle\Twig\TemplateLocatorExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.stringloader"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="elcodi_elcodi_store.twig_extension.store_page"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="elcodi_admin.twig_extension.metric_intervals"/>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="JMS\Serializer\Twig\SerializerExtension" public="false">
            <tag name="twig.extension"/>
            <argument type="service" id="jms_serializer"/>
          </service>
        </argument>
      </call>
      <call method="addExtension">
        <argument type="service">
          <service class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
            <tag name="twig.extension"/>
          </service>
        </argument>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service">
          <service class="Symfony\Bridge\Twig\AppVariable" public="false">
            <call method="setEnvironment">
              <argument>dev</argument>
            </call>
            <call method="setDebug">
              <argument>true</argument>
            </call>
            <call method="setTokenStorage">
              <argument type="service" id="security.token_storage" on-invalid="ignore"/>
            </call>
            <call method="setRequestStack">
              <argument type="service" id="request_stack" on-invalid="ignore"/>
            </call>
            <call method="setContainer">
              <argument type="service" id="service_container"/>
            </call>
          </service>
        </argument>
      </call>
      <call method="addGlobal">
        <argument>elcodi_context</argument>
        <argument type="collection"/>
      </call>
      <call method="addGlobal">
        <argument>currency_wrapper</argument>
        <argument type="service" id="elcodi.wrapper.currency"/>
      </call>
      <call method="addGlobal">
        <argument>store</argument>
        <argument type="service" id="elcodi.store"/>
      </call>
      <call method="addGlobal">
        <argument>store_tracker</argument>
        <argument type="service" id="elcodi.store_tracker"/>
      </call>
      <call method="addGlobal">
        <argument>elcodi_languages</argument>
        <argument type="service" id="elcodi.languages_with_master_promoted"/>
      </call>
      <configurator method="configure">
        <service class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
          <argument>F j, Y H:i</argument>
          <argument>%d days</argument>
          <argument>null</argument>
          <argument>0</argument>
          <argument>.</argument>
          <argument>,</argument>
        </service>
      </configurator>
    </service>
    <service id="twig.profile" class="Twig_Profiler_Profile"/>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>twig.controller.exception:showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController">
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController">
      <argument type="service" id="http_kernel"/>
      <argument>twig.controller.exception:showAction</argument>
    </service>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <argument>/Users/michael/Documents/workspace/bamboo/app/logs/dev.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument type="collection"/>
    </service>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.mailer.default.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher" public="false"/>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer">
      <argument type="service" id="swiftmailer.mailer.default.transport"/>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="assetic.filter_manager" class="Symfony\Bundle\AsseticBundle\FilterManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="cssrewrite">assetic.filter.cssrewrite</argument>
      </argument>
    </service>
    <service id="assetic.asset_manager" class="Assetic\Factory\LazyAssetManager">
      <argument type="service" id="assetic.asset_factory"/>
      <argument type="collection">
        <argument key="twig" type="service">
          <service class="Assetic\Factory\Loader\CachedFormulaLoader" public="false">
            <tag name="assetic.formula_loader" alias="twig"/>
            <tag name="assetic.templating.twig"/>
            <argument type="service">
              <service class="Assetic\Extension\Twig\TwigFormulaLoader" public="false">
                <tag name="assetic.templating.twig"/>
                <tag name="monolog.logger" channel="assetic"/>
                <argument type="service" id="twig"/>
                <argument type="service" id="monolog.logger.assetic" on-invalid="ignore"/>
              </service>
            </argument>
            <argument type="service">
              <service class="Assetic\Cache\ConfigCache" public="false">
                <argument>/Users/michael/Documents/workspace/bamboo/app/cache/dev/assetic/config</argument>
              </service>
            </argument>
            <argument>true</argument>
          </service>
        </argument>
      </argument>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>AdminCoreBundle</argument>
                  <argument>/Users/michael/Documents/workspace/bamboo/app/Resources/AdminCoreBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>AdminCoreBundle</argument>
                  <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CoreBundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>StoreCoreBundle</argument>
                  <argument>/Users/michael/Documents/workspace/bamboo/app/Resources/StoreCoreBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>StoreCoreBundle</argument>
                  <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>StoreTemplateBundle</argument>
                  <argument>/Users/michael/Documents/workspace/bamboo/app/Resources/StoreTemplateBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>StoreTemplateBundle</argument>
                  <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreTemplateBundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>AdminGeoBundle</argument>
                  <argument>/Users/michael/Documents/workspace/bamboo/app/Resources/AdminGeoBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>AdminGeoBundle</argument>
                  <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/GeoBundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="collection">
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>AdminStoreBundle</argument>
                  <argument>/Users/michael/Documents/workspace/bamboo/app/Resources/AdminStoreBundle/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
              <argument type="service">
                <service class="%assetic.directory_resource.class%" public="false">
                  <argument type="service" id="templating.loader"/>
                  <argument>AdminStoreBundle</argument>
                  <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/StoreBundle/Resources/views</argument>
                  <argument>/\.[^.]+\.twig$/</argument>
                </service>
              </argument>
            </argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
      <call method="addResource">
        <argument type="service">
          <service class="Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource" public="false">
            <tag name="assetic.templating.twig"/>
            <tag name="assetic.formula_resource" loader="twig"/>
            <argument type="service" id="templating.loader"/>
            <argument></argument>
            <argument>/Users/michael/Documents/workspace/bamboo/app/Resources/views</argument>
            <argument>/\.[^.]+\.twig$/</argument>
          </service>
        </argument>
        <argument>twig</argument>
      </call>
    </service>
    <service id="assetic.asset_factory" class="Symfony\Bundle\AsseticBundle\Factory\AssetFactory" public="false">
      <argument type="service" id="kernel"/>
      <argument type="service" id="service_container"/>
      <argument type="service">
        <service class="Symfony\Component\DependencyInjection\ParameterBag\ParameterBag" public="false">
          <factory service="service_container" method="getParameterBag"/>
        </service>
      </argument>
      <argument>/Users/michael/Documents/workspace/bamboo/app/../web</argument>
      <argument>true</argument>
    </service>
    <service id="assetic.filter.cssrewrite" class="Assetic\Filter\CssRewriteFilter">
      <tag name="assetic.filter" alias="cssrewrite"/>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection"/>
    </service>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="default">doctrine.dbal.default_connection</argument>
      </argument>
      <argument type="collection">
        <argument key="default">doctrine.orm.default_entity_manager</argument>
      </argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection">
      <argument type="collection">
        <argument key="driver">pdo_mysql</argument>
        <argument key="host">127.0.0.1</argument>
        <argument key="port">null</argument>
        <argument key="dbname">bamboo</argument>
        <argument key="user">root</argument>
        <argument key="password">123456</argument>
        <argument key="charset">UTF8</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service">
        <service class="Doctrine\DBAL\Configuration" public="false">
          <call method="setSQLLogger">
            <argument type="service">
              <service class="Doctrine\DBAL\Logging\LoggerChain" public="false">
                <call method="addLogger">
                  <argument type="service">
                    <service class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
                      <tag name="monolog.logger" channel="doctrine"/>
                      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
                      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
                    </service>
                  </argument>
                </call>
                <call method="addLogger">
                  <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
                </call>
              </service>
            </argument>
          </call>
        </service>
      </argument>
      <argument type="service">
        <service class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
          <argument type="service" id="service_container"/>
          <call method="addEventSubscriber">
            <argument type="service">
              <service class="Doctrine\ORM\Tools\ResolveTargetEntityListener" public="false">
                <tag name="doctrine.event_subscriber"/>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Plugin\CustomShippingBundle\Entity\Interfaces\CarrierInterface</argument>
                  <argument>Elcodi\Plugin\CustomShippingBundle\Entity\Carrier</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Plugin\CustomShippingBundle\Entity\Interfaces\ShippingRangeInterface</argument>
                  <argument>Elcodi\Plugin\CustomShippingBundle\Entity\ShippingRange</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Store\ConnectBundle\Entity\AuthorizationInterface</argument>
                  <argument>Elcodi\Store\ConnectBundle\Entity\Authorization</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Comment\Entity\Interfaces\CommentInterface</argument>
                  <argument>Elcodi\Component\Comment\Entity\Comment</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Comment\Entity\Interfaces\VoteInterface</argument>
                  <argument>Elcodi\Component\Comment\Entity\Vote</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Metric\Core\Entity\Interfaces\EntryInterface</argument>
                  <argument>Elcodi\Component\Metric\Core\Entity\Entry</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Page\Entity\Interfaces\PageInterface</argument>
                  <argument>Elcodi\Component\Page\Entity\Page</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Newsletter\Entity\Interfaces\NewsletterSubscriptionInterface</argument>
                  <argument>Elcodi\Component\Newsletter\Entity\NewsletterSubscription</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Banner\Entity\Interfaces\BannerInterface</argument>
                  <argument>Elcodi\Component\Banner\Entity\Banner</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Banner\Entity\Interfaces\BannerZoneInterface</argument>
                  <argument>Elcodi\Component\Banner\Entity\BannerZone</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\CartCoupon\Entity\Interfaces\CartCouponInterface</argument>
                  <argument>Elcodi\Component\CartCoupon\Entity\CartCoupon</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\CartCoupon\Entity\Interfaces\OrderCouponInterface</argument>
                  <argument>Elcodi\Component\CartCoupon\Entity\OrderCoupon</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Menu\Entity\Menu\Interfaces\NodeInterface</argument>
                  <argument>Elcodi\Component\Menu\Entity\Menu\Node</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Menu\Entity\Menu\Interfaces\MenuInterface</argument>
                  <argument>Elcodi\Component\Menu\Entity\Menu\Menu</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\EntityTranslator\Entity\Interfaces\EntityTranslationInterface</argument>
                  <argument>Elcodi\Component\EntityTranslator\Entity\EntityTranslation</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Tax\Entity\Interfaces\TaxInterface</argument>
                  <argument>Elcodi\Component\Tax\Entity\Tax</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Zone\Entity\Interfaces\ZoneInterface</argument>
                  <argument>Elcodi\Component\Zone\Entity\Zone</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\StateTransitionMachine\Entity\Interfaces\StateLineInterface</argument>
                  <argument>Elcodi\Component\StateTransitionMachine\Entity\StateLine</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Product\Entity\Interfaces\PurchasableInterface</argument>
                  <argument>Elcodi\Component\Product\Entity\Purchasable</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Product\Entity\Interfaces\ProductInterface</argument>
                  <argument>Elcodi\Component\Product\Entity\Product</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Product\Entity\Interfaces\VariantInterface</argument>
                  <argument>Elcodi\Component\Product\Entity\Variant</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Product\Entity\Interfaces\PackInterface</argument>
                  <argument>Elcodi\Component\Product\Entity\Pack</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Product\Entity\Interfaces\ManufacturerInterface</argument>
                  <argument>Elcodi\Component\Product\Entity\Manufacturer</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Product\Entity\Interfaces\CategoryInterface</argument>
                  <argument>Elcodi\Component\Product\Entity\Category</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\User\Entity\Interfaces\CustomerInterface</argument>
                  <argument>Elcodi\Component\User\Entity\Customer</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\User\Entity\Interfaces\AdminUserInterface</argument>
                  <argument>Elcodi\Component\User\Entity\AdminUser</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Store\Entity\Interfaces\StoreInterface</argument>
                  <argument>Elcodi\Component\Store\Entity\Store</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Attribute\Entity\Interfaces\AttributeInterface</argument>
                  <argument>Elcodi\Component\Attribute\Entity\Attribute</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Attribute\Entity\Interfaces\ValueInterface</argument>
                  <argument>Elcodi\Component\Attribute\Entity\Value</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Geo\Entity\Interfaces\AddressInterface</argument>
                  <argument>Elcodi\Component\Geo\Entity\Address</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Geo\Entity\Interfaces\LocationInterface</argument>
                  <argument>Elcodi\Component\Geo\Entity\Location</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Media\Entity\Interfaces\ImageInterface</argument>
                  <argument>Elcodi\Component\Media\Entity\Image</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Language\Entity\Interfaces\LanguageInterface</argument>
                  <argument>Elcodi\Component\Language\Entity\Language</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Currency\Entity\Interfaces\CurrencyInterface</argument>
                  <argument>Elcodi\Component\Currency\Entity\Currency</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Rule\Entity\Interfaces\RuleInterface</argument>
                  <argument>Elcodi\Component\Rule\Entity\Rule</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Coupon\Entity\Interfaces\CouponInterface</argument>
                  <argument>Elcodi\Component\Coupon\Entity\Coupon</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Cart\Entity\Interfaces\CartInterface</argument>
                  <argument>Elcodi\Component\Cart\Entity\Cart</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Cart\Entity\Interfaces\OrderInterface</argument>
                  <argument>Elcodi\Component\Cart\Entity\Order</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Cart\Entity\Interfaces\CartLineInterface</argument>
                  <argument>Elcodi\Component\Cart\Entity\CartLine</argument>
                  <argument type="collection"/>
                </call>
                <call method="addResolveTargetEntity">
                  <argument>Elcodi\Component\Cart\Entity\Interfaces\OrderLineInterface</argument>
                  <argument>Elcodi\Component\Cart\Entity\OrderLine</argument>
                  <argument type="collection"/>
                </call>
              </service>
            </argument>
          </call>
          <call method="addEventListener">
            <argument type="collection">
              <argument>preUpdate</argument>
            </argument>
            <argument type="service" id="elcodi_plugin.event_listener.twitter_username"/>
          </call>
          <call method="addEventListener">
            <argument type="collection">
              <argument>preUpdate</argument>
              <argument>prePersist</argument>
            </argument>
            <argument type="service" id="elcodi.event_listener.admin_user_password"/>
          </call>
          <call method="addEventListener">
            <argument type="collection">
              <argument>loadClassMetadata</argument>
            </argument>
            <argument type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
          </call>
          <call method="addEventListener">
            <argument type="collection">
              <argument>preFlush</argument>
              <argument>preUpdate</argument>
            </argument>
            <argument type="service" id="elcodi.event_listener.fix_category_integrity"/>
          </call>
          <call method="addEventListener">
            <argument type="collection">
              <argument>preUpdate</argument>
              <argument>prePersist</argument>
            </argument>
            <argument type="service" id="elcodi.event_listener.customer_password"/>
          </call>
          <call method="addEventListener">
            <argument type="collection">
              <argument>preFlush</argument>
              <argument>preUpdate</argument>
            </argument>
            <argument type="service" id="elcodi.event_listener.root_category"/>
          </call>
          <call method="addEventListener">
            <argument type="collection">
              <argument>preFlush</argument>
            </argument>
            <argument type="service" id="elcodi_admin.event_listener.category_position"/>
          </call>
          <call method="addEventListener">
            <argument type="collection">
              <argument>postLoad</argument>
            </argument>
            <argument type="service" id="elcodi.event_listener.entity_translator_entity"/>
          </call>
          <call method="addEventListener">
            <argument type="collection">
              <argument>preUpdate</argument>
            </argument>
            <argument type="service" id="elcodi_plugin.event_listener.facebook_username"/>
          </call>
        </service>
      </argument>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_metadata_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_f5945f0e8bb9eaf4058d45ccd9d4966e7cd12d2cc775ecc202d6e3f41ac8eee5</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_result_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_f5945f0e8bb9eaf4058d45ccd9d4966e7cd12d2cc775ecc202d6e3f41ac8eee5</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_query_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf2orm_default_f5945f0e8bb9eaf4058d45ccd9d4966e7cd12d2cc775ecc202d6e3f41ac8eee5</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\ORM\Mapping\DefaultEntityListenerResolver"/>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service">
        <service class="Doctrine\ORM\Configuration" public="false">
          <call method="setEntityNamespaces">
            <argument type="collection"/>
          </call>
          <call method="setMetadataCacheImpl">
            <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
          </call>
          <call method="setQueryCacheImpl">
            <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
          </call>
          <call method="setResultCacheImpl">
            <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
          </call>
          <call method="setMetadataDriverImpl">
            <argument type="service">
              <service class="Mmoreram\SimpleDoctrineMapping\Mapping\MappingDriverChain" public="false">
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Cart\Entity\Cart</argument>
                          <argument type="collection">
                            <argument>@ElcodiCartBundle/Resources/config/doctrine/Cart.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Cart\Entity\Cart</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Cart\Entity\Cart</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Cart\Entity\CartLine</argument>
                          <argument type="collection">
                            <argument>@ElcodiCartBundle/Resources/config/doctrine/CartLine.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Cart\Entity\CartLine</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Cart\Entity\CartLine</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Cart\Entity\Order</argument>
                          <argument type="collection">
                            <argument>@ElcodiCartBundle/Resources/config/doctrine/Order.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Cart\Entity\Order</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Cart\Entity\Order</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Cart\Entity\OrderLine</argument>
                          <argument type="collection">
                            <argument>@ElcodiCartBundle/Resources/config/doctrine/OrderLine.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Cart\Entity\OrderLine</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Cart\Entity\OrderLine</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Coupon\Entity\Coupon</argument>
                          <argument type="collection">
                            <argument>@ElcodiCouponBundle/Resources/config/doctrine/Coupon.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Coupon\Entity\Coupon</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Coupon\Entity\Coupon</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Rule\Entity\Rule</argument>
                          <argument type="collection">
                            <argument>@ElcodiRuleBundle/Resources/config/doctrine/Rule.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Rule\Entity\Rule</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Rule\Entity\Rule</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Currency\Entity\Currency</argument>
                          <argument type="collection">
                            <argument>@ElcodiCurrencyBundle/Resources/config/doctrine/Currency.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Currency\Entity\Currency</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Currency\Entity\Currency</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Currency\Entity\CurrencyExchangeRate</argument>
                          <argument type="collection">
                            <argument>@ElcodiCurrencyBundle/Resources/config/doctrine/CurrencyExchangeRate.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Currency\Entity\CurrencyExchangeRate</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Currency\Entity\CurrencyExchangeRate</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Language\Entity\Language</argument>
                          <argument type="collection">
                            <argument>@ElcodiLanguageBundle/Resources/config/doctrine/Language.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Language\Entity\Language</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Language\Entity\Language</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Media\Entity\Image</argument>
                          <argument type="collection">
                            <argument>@ElcodiMediaBundle/Resources/config/doctrine/Image.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Media\Entity\Image</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Media\Entity\Image</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Geo\Entity\Address</argument>
                          <argument type="collection">
                            <argument>@ElcodiGeoBundle/Resources/config/doctrine/Address.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Geo\Entity\Address</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Geo\Entity\Address</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Geo\Entity\Location</argument>
                          <argument type="collection">
                            <argument>@ElcodiGeoBundle/Resources/config/doctrine/Location.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Geo\Entity\Location</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Geo\Entity\Location</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Attribute\Entity\Attribute</argument>
                          <argument type="collection">
                            <argument>@ElcodiAttributeBundle/Resources/config/doctrine/Attribute.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Attribute\Entity\Attribute</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Attribute\Entity\Attribute</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Attribute\Entity\Value</argument>
                          <argument type="collection">
                            <argument>@ElcodiAttributeBundle/Resources/config/doctrine/Value.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Attribute\Entity\Value</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Attribute\Entity\Value</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Store\Entity\Store</argument>
                          <argument type="collection">
                            <argument>@ElcodiStoreBundle/Resources/config/doctrine/Store.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Store\Entity\Store</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Store\Entity\Store</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\User\Entity\Abstracts\AbstractUser</argument>
                          <argument type="collection">
                            <argument>@ElcodiUserBundle/Resources/config/doctrine/AbstractUser.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\User\Entity\Abstracts\AbstractUser</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\User\Entity\Abstracts\AbstractUser</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\User\Entity\AdminUser</argument>
                          <argument type="collection">
                            <argument>@ElcodiUserBundle/Resources/config/doctrine/AdminUser.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\User\Entity\AdminUser</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\User\Entity\AdminUser</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\User\Entity\Customer</argument>
                          <argument type="collection">
                            <argument>@ElcodiUserBundle/Resources/config/doctrine/Customer.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\User\Entity\Customer</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\User\Entity\Customer</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Product\Entity\Purchasable</argument>
                          <argument type="collection">
                            <argument>@ElcodiProductBundle/Resources/config/doctrine/Purchasable.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Product\Entity\Purchasable</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Product\Entity\Purchasable</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Product\Entity\Product</argument>
                          <argument type="collection">
                            <argument>@ElcodiProductBundle/Resources/config/doctrine/Product.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Product\Entity\Product</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Product\Entity\Product</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Product\Entity\Variant</argument>
                          <argument type="collection">
                            <argument>@ElcodiProductBundle/Resources/config/doctrine/Variant.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Product\Entity\Variant</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Product\Entity\Variant</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Product\Entity\Pack</argument>
                          <argument type="collection">
                            <argument>@ElcodiProductBundle/Resources/config/doctrine/Pack.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Product\Entity\Pack</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Product\Entity\Pack</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Product\Entity\Category</argument>
                          <argument type="collection">
                            <argument>@ElcodiProductBundle/Resources/config/doctrine/Category.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Product\Entity\Category</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Product\Entity\Category</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Product\Entity\Manufacturer</argument>
                          <argument type="collection">
                            <argument>@ElcodiProductBundle/Resources/config/doctrine/Manufacturer.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Product\Entity\Manufacturer</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Product\Entity\Manufacturer</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\StateTransitionMachine\Entity\StateLine</argument>
                          <argument type="collection">
                            <argument>@ElcodiStateTransitionMachineBundle/Resources/config/doctrine/StateLine.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\StateTransitionMachine\Entity\StateLine</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\StateTransitionMachine\Entity\StateLine</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Zone\Entity\Zone</argument>
                          <argument type="collection">
                            <argument>@ElcodiZoneBundle/Resources/config/doctrine/Zone.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Zone\Entity\Zone</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Zone\Entity\Zone</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Tax\Entity\Tax</argument>
                          <argument type="collection">
                            <argument>@ElcodiTaxBundle/Resources/config/doctrine/Tax.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Tax\Entity\Tax</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Tax\Entity\Tax</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\EntityTranslator\Entity\EntityTranslation</argument>
                          <argument type="collection">
                            <argument>@ElcodiEntityTranslatorBundle/Resources/config/doctrine/EntityTranslation.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\EntityTranslator\Entity\EntityTranslation</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\EntityTranslator\Entity\EntityTranslation</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Menu\Entity\Menu\Menu</argument>
                          <argument type="collection">
                            <argument>@ElcodiMenuBundle/Resources/config/doctrine/Menu.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Menu\Entity\Menu\Menu</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Menu\Entity\Menu\Menu</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Menu\Entity\Menu\Node</argument>
                          <argument type="collection">
                            <argument>@ElcodiMenuBundle/Resources/config/doctrine/MenuNode.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Menu\Entity\Menu\Node</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Menu\Entity\Menu\Node</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Plugin\Entity\Plugin</argument>
                          <argument type="collection">
                            <argument>@ElcodiPluginBundle/Resources/config/doctrine/Plugin.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Plugin\Entity\Plugin</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Plugin\Entity\Plugin</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Plugin\Entity\PluginConfiguration</argument>
                          <argument type="collection">
                            <argument>@ElcodiPluginBundle/Resources/config/doctrine/PluginConfiguration.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Plugin\Entity\PluginConfiguration</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Plugin\Entity\PluginConfiguration</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\CartCoupon\Entity\CartCoupon</argument>
                          <argument type="collection">
                            <argument>@ElcodiCartCouponBundle/Resources/config/doctrine/CartCoupon.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\CartCoupon\Entity\CartCoupon</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\CartCoupon\Entity\CartCoupon</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\CartCoupon\Entity\OrderCoupon</argument>
                          <argument type="collection">
                            <argument>@ElcodiCartCouponBundle/Resources/config/doctrine/OrderCoupon.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\CartCoupon\Entity\OrderCoupon</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\CartCoupon\Entity\OrderCoupon</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Banner\Entity\Banner</argument>
                          <argument type="collection">
                            <argument>@ElcodiBannerBundle/Resources/config/doctrine/Banner.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Banner\Entity\Banner</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Banner\Entity\Banner</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Banner\Entity\BannerZone</argument>
                          <argument type="collection">
                            <argument>@ElcodiBannerBundle/Resources/config/doctrine/BannerZone.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Banner\Entity\BannerZone</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Banner\Entity\BannerZone</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Newsletter\Entity\NewsletterSubscription</argument>
                          <argument type="collection">
                            <argument>@ElcodiNewsletterBundle/Resources/config/doctrine/NewsletterSubscription.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Newsletter\Entity\NewsletterSubscription</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Newsletter\Entity\NewsletterSubscription</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Page\Entity\Page</argument>
                          <argument type="collection">
                            <argument>@ElcodiPageBundle/Resources/config/doctrine/Page.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Page\Entity\Page</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Page\Entity\Page</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Metric\Core\Entity\Entry</argument>
                          <argument type="collection">
                            <argument>@ElcodiMetricBundle/Resources/config/doctrine/Entry.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Metric\Core\Entity\Entry</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Metric\Core\Entity\Entry</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Comment\Entity\Comment</argument>
                          <argument type="collection">
                            <argument>@ElcodiCommentBundle/Resources/config/doctrine/Comment.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Comment\Entity\Comment</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Comment\Entity\Comment</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Component\Comment\Entity\Vote</argument>
                          <argument type="collection">
                            <argument>@ElcodiCommentBundle/Resources/config/doctrine/Vote.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Component\Comment\Entity\Vote</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Component\Comment\Entity\Vote</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Store\ConnectBundle\Entity\Authorization</argument>
                          <argument type="collection">
                            <argument>@StoreConnectBundle/Resources/config/doctrine/Authorization.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Store\ConnectBundle\Entity\Authorization</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Store\ConnectBundle\Entity\Authorization</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Plugin\CustomShippingBundle\Entity\ShippingRange</argument>
                          <argument type="collection">
                            <argument>@ElcodiCustomShippingBundle/Resources/config/doctrine/ShippingRange.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Plugin\CustomShippingBundle\Entity\ShippingRange</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Plugin\CustomShippingBundle\Entity\ShippingRange</argument>
                </call>
                <call method="addDriver">
                  <argument type="service">
                    <service class="Doctrine\ORM\Mapping\Driver\YamlDriver" public="false">
                      <argument type="service">
                        <service class="Mmoreram\SimpleDoctrineMapping\Locator\SimpleDoctrineMappingLocator" public="false">
                          <argument>Elcodi\Plugin\CustomShippingBundle\Entity\Carrier</argument>
                          <argument type="collection">
                            <argument>@ElcodiCustomShippingBundle/Resources/config/doctrine/Carrier.orm.yml</argument>
                          </argument>
                          <configurator service="simple_doctrine_mapping.locator_configurator" method="configure"/>
                        </service>
                      </argument>
                      <call method="setGlobalBasename">
                        <argument>Elcodi\Plugin\CustomShippingBundle\Entity\Carrier</argument>
                      </call>
                    </service>
                  </argument>
                  <argument>Elcodi\Plugin\CustomShippingBundle\Entity\Carrier</argument>
                </call>
              </service>
            </argument>
          </call>
          <call method="setProxyDir">
            <argument>/Users/michael/Documents/workspace/bamboo/app/cache/dev/doctrine/orm/Proxies</argument>
          </call>
          <call method="setProxyNamespace">
            <argument>Proxies</argument>
          </call>
          <call method="setAutoGenerateProxyClasses">
            <argument>true</argument>
          </call>
          <call method="setClassMetadataFactoryName">
            <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
          </call>
          <call method="setDefaultRepositoryClassName">
            <argument>Doctrine\ORM\EntityRepository</argument>
          </call>
          <call method="setNamingStrategy">
            <argument type="service">
              <service class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
            </argument>
          </call>
          <call method="setQuoteStrategy">
            <argument type="service">
              <service class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
            </argument>
          </call>
          <call method="setEntityListenerResolver">
            <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
          </call>
        </service>
      </argument>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument type="service">
        <service class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage" public="false"/>
      </argument>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="gravatar.api" class="Ornicar\GravatarBundle\GravatarApi">
      <argument type="collection">
        <argument key="size">80</argument>
        <argument key="rating">g</argument>
        <argument key="default">mm</argument>
        <argument key="secure">false</argument>
      </argument>
    </service>
    <service id="templating.helper.gravatar" class="Ornicar\GravatarBundle\Templating\Helper\GravatarHelper">
      <tag name="templating.helper" alias="gravatar"/>
      <argument type="service" id="gravatar.api"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="twig.extension.gravatar" class="Ornicar\GravatarBundle\Twig\GravatarExtension">
      <tag name="twig.extension" alias="gravatar"/>
      <argument type="service" id="templating.helper.gravatar"/>
    </service>
    <service id="hwi_oauth.storage.session" class="HWI\Bundle\OAuthBundle\OAuth\RequestDataStorage\SessionStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="hwi_oauth.security.oauth_utils" class="HWI\Bundle\OAuthBundle\Security\OAuthUtils">
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument>false</argument>
      <call method="setResourceOwnerMap">
        <argument type="service" id="hwi_oauth.resource_ownermap.store_area"/>
      </call>
    </service>
    <service id="hwi_oauth.templating.helper.oauth" class="HWI\Bundle\OAuthBundle\Templating\Helper\OAuthHelper">
      <tag name="templating.helper" alias="oauth"/>
      <argument type="service" id="hwi_oauth.security.oauth_utils"/>
      <call method="setRequest">
        <argument type="service" id="request" on-invalid="null" strict="false"/>
      </call>
    </service>
    <service id="hwi_oauth.http_client" class="Buzz\Client\Curl">
      <call method="setVerifyPeer">
        <argument>true</argument>
      </call>
      <call method="setTimeout">
        <argument>5</argument>
      </call>
      <call method="setMaxRedirects">
        <argument>5</argument>
      </call>
      <call method="setIgnoreErrors">
        <argument>true</argument>
      </call>
    </service>
    <service id="hwi_oauth.resource_owner.github" class="HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\GitHubResourceOwner">
      <argument type="service" id="hwi_oauth.http_client"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection">
        <argument key="client_id">github-client-id</argument>
        <argument key="client_secret">github-client-secret</argument>
        <argument key="paths" type="collection"/>
        <argument key="options" type="collection"/>
      </argument>
      <argument>github</argument>
      <argument type="service" id="hwi_oauth.storage.session"/>
    </service>
    <service id="hwi_oauth.resource_owner.paypal" class="HWI\Bundle\OAuthBundle\OAuth\ResourceOwner\PaypalResourceOwner">
      <argument type="service" id="hwi_oauth.http_client"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection">
        <argument key="client_id">paypal-client-id</argument>
        <argument key="client_secret">paypal-client-secret</argument>
        <argument key="options" type="collection">
          <argument key="sandbox">true</argument>
        </argument>
        <argument key="paths" type="collection"/>
      </argument>
      <argument>paypal</argument>
      <argument type="service" id="hwi_oauth.storage.session"/>
    </service>
    <service id="snc_redis.logger" class="Snc\RedisBundle\Logger\RedisLogger">
      <tag name="monolog.logger" channel="snc_redis"/>
      <argument type="service" id="monolog.logger.snc_redis" on-invalid="null"/>
    </service>
    <service id="snc_redis.metric" class="Predis\Client">
      <argument type="service">
        <service class="Predis\Connection\Parameters" public="false">
          <tag name="snc_redis.connection_parameters" clientAlias="metric"/>
          <argument type="collection">
            <argument key="profile">2.8</argument>
            <argument key="read_write_timeout">null</argument>
            <argument key="iterable_multibulk">false</argument>
            <argument key="prefix">null</argument>
            <argument key="replication">false</argument>
            <argument key="async_connect">false</argument>
            <argument key="timeout">5</argument>
            <argument key="persistent">false</argument>
            <argument key="exceptions">true</argument>
            <argument key="logging">false</argument>
            <argument key="alias">metric</argument>
            <argument key="scheme">tcp</argument>
            <argument key="host">localhost</argument>
            <argument key="port">6379</argument>
            <argument key="password">null</argument>
            <argument key="weight">null</argument>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="Predis\Configuration\Options" public="false">
          <argument type="collection">
            <argument key="profile" type="service">
              <service class="Predis\Profile\RedisVersion280" public="false"/>
            </argument>
            <argument key="read_write_timeout">null</argument>
            <argument key="iterable_multibulk">false</argument>
            <argument key="prefix">null</argument>
            <argument key="replication">false</argument>
            <argument key="async_connect">false</argument>
            <argument key="timeout">5</argument>
            <argument key="persistent">false</argument>
            <argument key="exceptions">true</argument>
          </argument>
        </service>
      </argument>
    </service>
    <service id="jms_i18n_routing.cookie_setting_listener" class="JMS\I18nRoutingBundle\EventListener\CookieSettingListener">
      <tag name="kernel.event_listener" event="kernel.response" priority="256"/>
      <argument>hl</argument>
      <argument>31536000</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="jms_i18n_routing.loader" class="JMS\I18nRoutingBundle\Router\I18nLoader">
      <argument type="service">
        <service class="JMS\I18nRoutingBundle\Router\DefaultRouteExclusionStrategy" public="false"/>
      </argument>
      <argument type="service" id="jms_i18n_routing.pattern_generation_strategy.default"/>
    </service>
    <service id="mmoreram.controllerextra.provider.entity_provider" class="Mmoreram\ControllerExtraBundle\Provider\EntityProvider">
      <argument key="container" type="service" id="service_container"/>
      <argument key="kernel" type="service" id="kernel"/>
      <argument key="default_factory_method">create</argument>
      <argument key="default_factory_static">false</argument>
    </service>
    <service id="mmoreram.controllerextra.provider.request_parameter_provider" class="Mmoreram\ControllerExtraBundle\Provider\RequestParameterProvider">
      <argument key="request_stack" type="service" id="request_stack"/>
      <call method="setRequestType">
        <argument>current</argument>
      </call>
    </service>
    <service id="mmoreram.controllerextra.event_listeners.resolver_event_listener" class="Mmoreram\ControllerExtraBundle\EventListener\ResolverEventListener">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController" priority="%mmoreram.controllerextra.resolver_priority%"/>
      <argument key="kernel" type="service" id="kernel"/>
      <argument key="annotations_reader" type="service" id="annotation_reader"/>
      <call method="addResolver">
        <argument type="service" id="mmoreram.controllerextra.resolver.form_annotation_resolver"/>
      </call>
      <call method="addResolver">
        <argument type="service" id="mmoreram.controllerextra.resolver.flush_annotation_resolver"/>
      </call>
      <call method="addResolver">
        <argument type="service" id="mmoreram.controllerextra.resolver.entity_annotation_resolver"/>
      </call>
      <call method="addResolver">
        <argument type="service" id="mmoreram.controllerextra.resolver.log_annotation_resolver"/>
      </call>
      <call method="addResolver">
        <argument type="service" id="mmoreram.controllerextra.resolver.json_resolver_annotation_resolver"/>
      </call>
      <call method="addResolver">
        <argument type="service" id="mmoreram.controllerextra.resolver.paginator_annotation_resolver"/>
      </call>
      <call method="addResolver">
        <argument type="service" id="mmoreram.controllerextra.resolver.object_manager_annotation_resolver"/>
      </call>
      <call method="addResolver">
        <argument type="service" id="mmoreram.controllerextra.resolver.get_annotation_resolver"/>
      </call>
      <call method="addResolver">
        <argument type="service" id="mmoreram.controllerextra.resolver.post_annotation_resolver"/>
      </call>
    </service>
    <service id="mmoreram.controllerextra.resolver.form_annotation_resolver" class="Mmoreram\ControllerExtraBundle\Resolver\FormAnnotationResolver">
      <tag name="controller_extra.annotation"/>
      <argument key="form_registry" type="service" id="form.registry"/>
      <argument key="form_factory" type="service" id="form.factory"/>
      <argument key="default_name">form</argument>
    </service>
    <service id="mmoreram.controllerextra.resolver.flush_annotation_resolver" class="Mmoreram\ControllerExtraBundle\Resolver\FlushAnnotationResolver">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <tag name="controller_extra.annotation"/>
      <argument key="doctrine" type="service" id="doctrine"/>
      <argument key="default_manager">default</argument>
    </service>
    <service id="mmoreram.controllerextra.resolver.entity_annotation_resolver" class="Mmoreram\ControllerExtraBundle\Resolver\EntityAnnotationResolver">
      <tag name="controller_extra.annotation"/>
      <argument key="doctrine" type="service" id="doctrine"/>
      <argument key="entity_provider" type="service" id="mmoreram.controllerextra.provider.entity_provider"/>
      <argument key="request_parameters_provider" type="service" id="mmoreram.controllerextra.provider.request_parameter_provider"/>
      <argument key="default_name">entity</argument>
      <argument key="default_persist">true</argument>
      <argument key="mapping_fallback">false</argument>
    </service>
    <service id="mmoreram.controllerextra.resolver.log_annotation_resolver" class="Mmoreram\ControllerExtraBundle\Resolver\LogAnnotationResolver">
      <tag name="controller_extra.annotation"/>
      <argument key="logger" type="service" id="logger"/>
      <call method="setDefaultLevel">
        <argument>info</argument>
      </call>
      <call method="setDefaultExecute">
        <argument>pre</argument>
      </call>
    </service>
    <service id="mmoreram.controllerextra.resolver.json_resolver_annotation_resolver" class="Mmoreram\ControllerExtraBundle\Resolver\JsonResponseAnnotationResolver">
      <tag name="controller_extra.annotation"/>
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="-128"/>
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" priority="-128"/>
      <argument key="default_status">200</argument>
      <argument key="default_error_status">500</argument>
      <argument key="default_headers" type="collection"/>
    </service>
    <service id="mmoreram.controllerextra.resolver.paginator_annotation_resolver" class="Mmoreram\ControllerExtraBundle\Resolver\PaginatorAnnotationResolver">
      <tag name="controller_extra.annotation"/>
      <argument key="doctrine" type="service" id="doctrine"/>
      <argument key="entity_provider" type="service" id="mmoreram.controllerextra.provider.entity_provider"/>
      <argument key="request_parameter_provider" type="service" id="mmoreram.controllerextra.provider.request_parameter_provider"/>
      <argument key="paginator_evaluator_collector" type="service" id="mmoreram.controllerextra.collector.paginator_evaluator_collector"/>
      <argument key="default_name">paginator</argument>
      <argument key="default_page">1</argument>
      <argument key="default_limit_per_page">10</argument>
    </service>
    <service id="mmoreram.controllerextra.collector.paginator_evaluator_collector" class="Mmoreram\ControllerExtraBundle\Resolver\Paginator\PaginatorEvaluatorCollector">
      <call method="addPaginatorEvaluator">
        <argument type="service" id="mmoreram.controllerextra.evaluator.paginator_innerjoins_evaluator"/>
      </call>
      <call method="addPaginatorEvaluator">
        <argument type="service" id="mmoreram.controllerextra.evaluator.paginator_leftjoins_evaluator"/>
      </call>
      <call method="addPaginatorEvaluator">
        <argument type="service" id="mmoreram.controllerextra.evaluator.paginator_wheres_evaluator"/>
      </call>
      <call method="addPaginatorEvaluator">
        <argument type="service" id="mmoreram.controllerextra.evaluator.paginator_orderby_evaluator"/>
      </call>
      <call method="addPaginatorEvaluator">
        <argument type="service" id="mmoreram.controllerextra.evaluator.paginator_notnulls_evaluator"/>
      </call>
    </service>
    <service id="mmoreram.controllerextra.evaluator.paginator_innerjoins_evaluator" class="Mmoreram\ControllerExtraBundle\Resolver\Paginator\PaginatorInnerJoinsEvaluator">
      <tag name="controller_extra.paginator_evaluator"/>
    </service>
    <service id="mmoreram.controllerextra.evaluator.paginator_leftjoins_evaluator" class="Mmoreram\ControllerExtraBundle\Resolver\Paginator\PaginatorLeftJoinsEvaluator">
      <tag name="controller_extra.paginator_evaluator"/>
    </service>
    <service id="mmoreram.controllerextra.evaluator.paginator_wheres_evaluator" class="Mmoreram\ControllerExtraBundle\Resolver\Paginator\PaginatorWheresEvaluator">
      <tag name="controller_extra.paginator_evaluator"/>
      <argument key="request_parameter_provider" type="service" id="mmoreram.controllerextra.provider.request_parameter_provider"/>
    </service>
    <service id="mmoreram.controllerextra.evaluator.paginator_orderby_evaluator" class="Mmoreram\ControllerExtraBundle\Resolver\Paginator\PaginatorOrderByEvaluator">
      <tag name="controller_extra.paginator_evaluator"/>
      <argument key="request_parameter_provider" type="service" id="mmoreram.controllerextra.provider.request_parameter_provider"/>
    </service>
    <service id="mmoreram.controllerextra.evaluator.paginator_notnulls_evaluator" class="Mmoreram\ControllerExtraBundle\Resolver\Paginator\PaginatorNotNullsEvaluator">
      <tag name="controller_extra.paginator_evaluator"/>
    </service>
    <service id="mmoreram.controllerextra.resolver.object_manager_annotation_resolver" class="Mmoreram\ControllerExtraBundle\Resolver\ObjectManagerAnnotationResolver">
      <tag name="controller_extra.annotation"/>
      <argument key="doctrine" type="service" id="doctrine"/>
      <argument key="entity_provider" type="service" id="mmoreram.controllerextra.provider.entity_provider"/>
      <argument key="default_name">objectManager</argument>
    </service>
    <service id="mmoreram.controllerextra.resolver.get_annotation_resolver" class="Mmoreram\ControllerExtraBundle\Resolver\GetAnnotationResolver">
      <tag name="controller_extra.annotation"/>
    </service>
    <service id="mmoreram.controllerextra.resolver.post_annotation_resolver" class="Mmoreram\ControllerExtraBundle\Resolver\PostAnnotationResolver">
      <tag name="controller_extra.annotation"/>
    </service>
    <service id="cache_flusher" class="Mmoreram\CacheFlushBundle\Services\CacheFlusher">
      <argument type="service" id="cache_flusher.event_dispatcher"/>
      <argument>/Users/michael/Documents/workspace/bamboo/app/cache/dev</argument>
    </service>
    <service id="cache_flusher.event_dispatcher" class="Mmoreram\CacheFlushBundle\EventDispatcher\CacheFlusherEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="mmoreram.headers.listener" class="Mmoreram\HttpHeadersBundle\EventListener\Headers">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <argument type="collection">
        <argument key="X-Elcodi" type="collection">
          <argument key="values" type="collection">
            <argument>This E-commerce is built using Elcodi and Symfony</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="elcodi.manager.cart_coupon" class="Elcodi\Component\CartCoupon\Services\CartCouponManager">
      <argument type="service" id="elcodi.event_dispatcher.cart_coupon"/>
      <argument type="service" id="elcodi.repository.coupon"/>
      <argument type="service" id="elcodi.director.cart_coupon"/>
      <argument type="service" id="elcodi.repository.cart_coupon"/>
    </service>
    <service id="elcodi.truncator.order_coupon" class="Elcodi\Component\CartCoupon\Services\OrderCouponTruncator">
      <argument type="service" id="elcodi.repository.order_coupon"/>
      <argument type="service" id="elcodi.object_manager.order_coupon"/>
    </service>
    <service id="elcodi.applicator.automatic_coupon" class="Elcodi\Component\CartCoupon\Services\AutomaticCouponApplicator">
      <argument type="service" id="elcodi.manager.cart_coupon"/>
      <argument type="service" id="elcodi.repository.coupon"/>
    </service>
    <service id="elcodi.loader.cart_coupon_prices" class="Elcodi\Component\CartCoupon\Services\CartCouponPricesLoader">
      <argument type="service" id="elcodi.manager.cart_coupon"/>
      <argument type="service" id="elcodi.wrapper.currency"/>
      <argument type="service" id="elcodi.cart_coupon_applicator_collector"/>
    </service>
    <service id="elcodi.validator.cart_coupon_minimum_price" class="Elcodi\Component\CartCoupon\Services\CartCouponMinimumPriceValidator">
      <argument type="service" id="elcodi.converter.currency"/>
    </service>
    <service id="elcodi.validator.cart_coupon_rule" class="Elcodi\Component\CartCoupon\Services\CartCouponRuleValidator">
      <argument type="service" id="elcodi.manager.rule"/>
    </service>
    <service id="elcodi.validator.cart_coupon" class="Elcodi\Component\CartCoupon\Services\CartCouponValidator">
      <argument type="service" id="elcodi.manager.cart_coupon"/>
      <argument type="service" id="elcodi.manager.coupon"/>
      <argument type="service" id="elcodi.event_dispatcher.cart_coupon"/>
    </service>
    <service id="elcodi.validator.duplicated_coupon" class="Elcodi\Component\CartCoupon\Services\DuplicatedCouponValidator">
      <argument type="service" id="elcodi.repository.cart_coupon"/>
    </service>
    <service id="elcodi.validator.stackable_coupon" class="Elcodi\Component\CartCoupon\Services\StackableCouponValidator">
      <argument type="service" id="elcodi.repository.cart_coupon"/>
    </service>
    <service id="elcodi.event_listener.covert_cart_coupons_to_order_coupons" class="Elcodi\Component\CartCoupon\EventListener\ConvertCartCouponsToOrderCouponsEventListener">
      <tag name="kernel.event_listener" event="order.oncreated" method="createOrderCouponsByCartCoupons" priority="-16"/>
      <argument type="service" id="elcodi.transformer.cart_coupon_to_order_coupon"/>
    </service>
    <service id="elcodi.event_listener.create_and_save_cart_coupon" class="Elcodi\Component\CartCoupon\EventListener\CreateAndSaveCartCouponEventListener">
      <tag name="kernel.event_listener" event="cart_coupon.onapply" method="createAndSaveCartCoupon" priority="1"/>
      <argument type="service" id="elcodi.manager.cart_coupon"/>
    </service>
    <service id="elcodi.event_listener.create_order_coupon_by_coupon" class="Elcodi\Component\CartCoupon\EventListener\CreateOrderCouponByCouponEventListener">
      <tag name="kernel.event_listener" event="order_coupon.onapply" method="createOrderCouponByCoupon" priority="0"/>
      <argument type="service" id="elcodi.transformer.coupon_to_order_coupon"/>
    </service>
    <service id="elcodi.event_listener.load_cart_coupon_amount" class="Elcodi\Component\CartCoupon\EventListener\LoadCartCouponAmountEventListener">
      <tag name="kernel.event_listener" event="cart.onload" method="refreshCouponAmount" priority="6"/>
      <argument type="service" id="elcodi.loader.cart_coupon_prices"/>
    </service>
    <service id="elcodi.event_listener.remove_cart_coupon" class="Elcodi\Component\CartCoupon\EventListener\RemoveCartCouponEventListener">
      <tag name="kernel.event_listener" event="cart_coupon.onremove" method="removeCartCoupon" priority="0"/>
      <argument type="service" id="elcodi.manager.cart_coupon"/>
    </service>
    <service id="elcodi.event_listener.try_automatic_coupons_application" class="Elcodi\Component\CartCoupon\EventListener\TryAutomaticCouponsApplicationEventListener">
      <tag name="kernel.event_listener" event="cart.onload" method="tryAutomaticCoupons" priority="16"/>
      <argument type="service" id="elcodi.applicator.automatic_coupon"/>
    </service>
    <service id="elcodi.event_listener.validate_cart_coupon" class="Elcodi\Component\CartCoupon\EventListener\ValidateCartCouponEventListener">
      <tag name="kernel.event_listener" event="cart_coupon.onapply" method="validateCoupon" priority="16"/>
      <argument type="service" id="elcodi.event_dispatcher.cart_coupon"/>
    </service>
    <service id="elcodi.event_listener.validate_coupon_duplication" class="Elcodi\Component\CartCoupon\EventListener\ValidateCouponDuplicationEventListener">
      <tag name="kernel.event_listener" event="cart_coupon.onapply" method="validateDuplicatedCoupon" priority="16"/>
      <argument type="service" id="elcodi.validator.duplicated_coupon"/>
    </service>
    <service id="elcodi.event_listener.validate_coupon" class="Elcodi\Component\CartCoupon\EventListener\ValidateCouponEventListener">
      <tag name="kernel.event_listener" event="cart_coupon.oncheck" method="validateCoupon" priority="32"/>
      <argument type="service" id="elcodi.validator.cart_coupon"/>
    </service>
    <service id="elcodi.event_listener.validate_coupon_minimum_price" class="Elcodi\Component\CartCoupon\EventListener\ValidateCouponMinimumPriceEventListener">
      <tag name="kernel.event_listener" event="cart_coupon.oncheck" method="validateCartCouponMinimumPrice" priority="0"/>
      <argument type="service" id="elcodi.validator.cart_coupon_minimum_price"/>
    </service>
    <service id="elcodi.event_listener.validate_coupon_rules" class="Elcodi\Component\CartCoupon\EventListener\ValidateCouponRulesEventListener">
      <tag name="kernel.event_listener" event="cart_coupon.oncheck" method="validateCartCouponRules" priority="-16"/>
      <argument type="service" id="elcodi.validator.cart_coupon_rule"/>
    </service>
    <service id="elcodi.event_listener.validate_coupons_from_cart" class="Elcodi\Component\CartCoupon\EventListener\ValidateCouponsFromCartEventListener">
      <tag name="kernel.event_listener" event="cart.onload" method="refreshCartCoupons" priority="10"/>
      <argument type="service" id="elcodi.validator.cart_coupon"/>
    </service>
    <service id="elcodi.event_listener.validate_stackable_coupon" class="Elcodi\Component\CartCoupon\EventListener\ValidateStackableCouponsEventListener">
      <tag name="kernel.event_listener" event="cart_coupon.onapply" method="validateStackableCoupon" priority="16"/>
      <argument type="service" id="elcodi.validator.stackable_coupon"/>
    </service>
    <service id="elcodi.event_listener.update_cart_after_coupon_change" class="Elcodi\Component\CartCoupon\EventListener\CartUpdateAfterCouponChangeEventListener">
      <tag name="kernel.event_listener" event="cart_coupon.onapply" method="updateCart" priority="0"/>
      <tag name="kernel.event_listener" event="cart_coupon.onremove" method="updateCart" priority="0"/>
      <argument type="service" id="elcodi.event_dispatcher.cart"/>
    </service>
    <service id="elcodi.factory.cart_coupon" class="Elcodi\Component\CartCoupon\Factory\CartCouponFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\CartCoupon\Entity\CartCoupon</argument>
      </call>
    </service>
    <service id="elcodi.factory.order_coupon" class="Elcodi\Component\CartCoupon\Factory\OrderCouponFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\CartCoupon\Entity\OrderCoupon</argument>
      </call>
    </service>
    <service id="elcodi.transformer.coupon_to_order_coupon" class="Elcodi\Component\CartCoupon\Transformer\CouponToOrderCouponTransformer">
      <argument type="service" id="elcodi.object_manager.order_coupon"/>
      <argument type="service" id="elcodi.event_dispatcher.coupon"/>
      <argument type="service" id="elcodi.factory.order_coupon"/>
    </service>
    <service id="elcodi.transformer.cart_coupon_to_order_coupon" class="Elcodi\Component\CartCoupon\Transformer\CartCouponToOrderCouponTransformer">
      <argument type="service" id="elcodi.manager.cart_coupon"/>
      <argument type="service" id="elcodi.truncator.order_coupon"/>
      <argument type="service" id="elcodi.event_dispatcher.order_coupon"/>
    </service>
    <service id="elcodi.repository.cart_coupon" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\CartCoupon\Entity\CartCoupon</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.order_coupon" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\CartCoupon\Entity\OrderCoupon</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.event_dispatcher.cart_coupon" class="Elcodi\Component\CartCoupon\EventDispatcher\CartCouponEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi.event_dispatcher.order_coupon" class="Elcodi\Component\CartCoupon\EventDispatcher\OrderCouponEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi.object_manager.cart_coupon" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\CartCoupon\Entity\CartCoupon</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.order_coupon" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\CartCoupon\Entity\OrderCoupon</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.director.cart_coupon" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.cart_coupon"/>
      <argument type="service" id="elcodi.repository.cart_coupon"/>
      <argument type="service" id="elcodi.factory.cart_coupon"/>
    </service>
    <service id="elcodi.director.order_coupon" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.order_coupon"/>
      <argument type="service" id="elcodi.repository.order_coupon"/>
      <argument type="service" id="elcodi.factory.order_coupon"/>
    </service>
    <service id="elcodi.cart_coupon_applicator.absolute" class="Elcodi\Component\CartCoupon\Applicator\AbsoluteCartCouponApplicator">
      <tag name="elcodi.cart_coupon_applicator"/>
      <argument type="service" id="elcodi.wrapper.currency"/>
      <argument type="service" id="elcodi.converter.currency"/>
    </service>
    <service id="elcodi.cart_coupon_applicator.mxn_group" class="Elcodi\Component\CartCoupon\Applicator\MxNGroupCartCouponApplicator">
      <tag name="elcodi.cart_coupon_applicator"/>
      <argument type="service" id="elcodi.wrapper.currency"/>
      <argument type="service" id="elcodi.converter.currency"/>
      <argument type="service" id="elcodi.cart_coupon_applicator_function_collector"/>
    </service>
    <service id="elcodi.cart_coupon_applicator.mxn_specific" class="Elcodi\Component\CartCoupon\Applicator\MxNSpecificCartCouponApplicator">
      <tag name="elcodi.cart_coupon_applicator"/>
      <argument type="service" id="elcodi.wrapper.currency"/>
      <argument type="service" id="elcodi.converter.currency"/>
      <argument type="service" id="elcodi.cart_coupon_applicator_function_collector"/>
    </service>
    <service id="elcodi.cart_coupon_applicator.percent" class="Elcodi\Component\CartCoupon\Applicator\PercentCartCouponApplicator">
      <tag name="elcodi.cart_coupon_applicator"/>
    </service>
    <service id="elcodi.cart_coupon_applicator_collector" class="Elcodi\Component\CartCoupon\Applicator\CartCouponApplicatorCollector">
      <argument type="service" id="elcodi.wrapper.currency"/>
      <call method="addCartCouponApplicator">
        <argument type="service" id="elcodi.cart_coupon_applicator.absolute"/>
      </call>
      <call method="addCartCouponApplicator">
        <argument type="service" id="elcodi.cart_coupon_applicator.mxn_group"/>
      </call>
      <call method="addCartCouponApplicator">
        <argument type="service" id="elcodi.cart_coupon_applicator.mxn_specific"/>
      </call>
      <call method="addCartCouponApplicator">
        <argument type="service" id="elcodi.cart_coupon_applicator.percent"/>
      </call>
    </service>
    <service id="elcodi.cart_coupon_applicator_function_collector" class="Elcodi\Component\CartCoupon\Applicator\ExpressionLanguage\ExpressionLanguageFunctionCollector">
      <call method="addExpressionLanguageFunction">
        <argument type="service">
          <service class="Elcodi\Component\CartCoupon\Applicator\ExpressionLanguage\CategoryFunction" public="false">
            <tag name="elcodi.cart_coupon_applicator_function"/>
          </service>
        </argument>
      </call>
      <call method="addExpressionLanguageFunction">
        <argument type="service">
          <service class="Elcodi\Component\CartCoupon\Applicator\ExpressionLanguage\ManufacturerFunction" public="false">
            <tag name="elcodi.cart_coupon_applicator_function"/>
          </service>
        </argument>
      </call>
      <call method="addExpressionLanguageFunction">
        <argument type="service">
          <service class="Elcodi\Component\CartCoupon\Applicator\ExpressionLanguage\ProductFunction" public="false">
            <tag name="elcodi.cart_coupon_applicator_function"/>
          </service>
        </argument>
      </call>
    </service>
    <service id="elcodi.factory.banner" class="Elcodi\Component\Banner\Factory\BannerFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Banner\Entity\Banner</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.factory.banner_zone" class="Elcodi\Component\Banner\Factory\BannerZoneFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Banner\Entity\BannerZone</argument>
      </call>
    </service>
    <service id="elcodi.manager.banner" class="Elcodi\Component\Banner\Services\BannerManager">
      <argument type="service" id="elcodi.repository.banner"/>
    </service>
    <service id="elcodi.repository.banner" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Banner\Entity\Banner</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.banner_zone" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Banner\Entity\BannerZone</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.banner" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Banner\Entity\Banner</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.banner_zone" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Banner\Entity\BannerZone</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.director.banner" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.banner"/>
      <argument type="service" id="elcodi.repository.banner"/>
      <argument type="service" id="elcodi.factory.banner"/>
    </service>
    <service id="elcodi.director.banner_zone" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.banner_zone"/>
      <argument type="service" id="elcodi.repository.banner_zone"/>
      <argument type="service" id="elcodi.factory.banner_zone"/>
    </service>
    <service id="elcodi.manager.newsletter" class="Elcodi\Component\Newsletter\Services\NewsletterManager">
      <argument type="service" id="elcodi.event_dispatcher.newsletter"/>
      <argument type="service" id="validator"/>
      <argument type="service" id="elcodi.factory.newsletter_subscription"/>
      <argument type="service" id="elcodi.repository.newsletter_subscription"/>
      <argument type="service" id="elcodi.generator.sha1"/>
    </service>
    <service id="elcodi.factory.newsletter_subscription" class="Elcodi\Component\Newsletter\Factory\NewsletterSubscriptionFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Newsletter\Entity\NewsletterSubscription</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.repository.newsletter_subscription" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Newsletter\Entity\NewsletterSubscription</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.event_dispatcher.newsletter" class="Elcodi\Component\Newsletter\EventDispatcher\NewsletterEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi.event_listener.newsletter" class="Elcodi\Component\Newsletter\EventListener\NewsletterEventListener">
      <tag name="kernel.event_listener" event="newsletter.onsubscribe" method="onNewsletterSubscribeFlush" priority="0"/>
      <tag name="kernel.event_listener" event="newsletter.onunsubscribe" method="onNewsletterUnsubscribeFlush" priority="0"/>
      <argument type="service" id="elcodi.object_manager.newsletter_subscription"/>
    </service>
    <service id="elcodi.object_manager.newsletter_subscription" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Newsletter\Entity\NewsletterSubscription</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.director.newsletter_subscription" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.newsletter_subscription"/>
      <argument type="service" id="elcodi.repository.newsletter_subscription"/>
      <argument type="service" id="elcodi.factory.newsletter_subscription"/>
    </service>
    <service id="elcodi.controller.page" class="Elcodi\Component\Page\Controller\PageController">
      <argument type="service" id="elcodi.repository.page"/>
      <argument type="service" id="elcodi.transformer.page_response"/>
    </service>
    <service id="elcodi.factory.page" class="Elcodi\Component\Page\Factory\PageFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Page\Entity\Page</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.object_manager.page" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Page\Entity\Page</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.page_renderer_chain" class="Elcodi\Component\Page\Renderer\PageRendererChain">
      <argument type="collection">
        <argument type="service" id="elcodi_common.renderer.template_renderer"/>
      </argument>
    </service>
    <service id="elcodi.repository.page" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Page\Entity\Page</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.transformer.page_response" class="Elcodi\Component\Page\Transformer\PageResponseTransformer">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router"/>
      <argument type="service" id="elcodi.page_renderer_chain"/>
      <argument>elcodi.route.page_render</argument>
    </service>
    <service id="elcodi.director.page" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.page"/>
      <argument type="service" id="elcodi.repository.page"/>
      <argument type="service" id="elcodi.factory.page"/>
    </service>
    <service id="elcodi.metric_manager" class="Elcodi\Component\Metric\Core\Services\MetricManager">
      <argument type="service" id="elcodi.redis_metrics_bucket"/>
      <argument type="service" id="elcodi.factory.metric_entry"/>
      <argument type="service" id="elcodi.object_manager.entry"/>
    </service>
    <service id="elcodi.metric_loader" class="Elcodi\Component\Metric\Core\Services\MetricLoader" lazy="true">
      <argument type="service" id="elcodi.redis_metrics_bucket"/>
      <argument type="service" id="elcodi.repository.metric_entry"/>
    </service>
    <service id="elcodi.factory.metric_entry" class="Elcodi\Component\Metric\Core\Factory\EntryFactory"/>
    <service id="elcodi.object_manager.entry" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Metric\Core\Entity\Entry</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.redis_metrics_bucket" class="Elcodi\Component\Metric\Core\Bucket\RedisMetricsBucket">
      <argument type="service" id="snc_redis.metric"/>
    </service>
    <service id="elcodi.controller.metric_input" class="Elcodi\Component\Metric\Input\Controller\InputController">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="elcodi.metric_manager"/>
      <argument type="service" id="elcodi.factory.datetime"/>
    </service>
    <service id="elcodi.command.metrics_load" class="Elcodi\Component\Metric\Core\Command\MetricsLoadCommand">
      <tag name="console.command"/>
      <argument type="service" id="elcodi.metric_loader"/>
    </service>
    <service id="elcodi.repository.metric_entry" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Metric\Core\Entity\Entry</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.controller.comment" class="Elcodi\Component\Comment\Controller\CommentController">
      <argument type="service" id="elcodi.manager.comment"/>
      <argument type="service" id="elcodi.comment_cache"/>
      <argument type="service" id="elcodi.repository.comment"/>
    </service>
    <service id="elcodi.manager.comment" class="Elcodi\Component\Comment\Services\CommentManager">
      <argument type="service" id="elcodi.event_dispatcher.comment"/>
      <argument type="service" id="elcodi.director.comment"/>
    </service>
    <service id="elcodi.comment_cache" class="Elcodi\Component\Comment\Services\CommentCache">
      <argument type="service" id="elcodi.repository.comment"/>
      <argument type="service" id="elcodi.manager.comment_vote"/>
      <argument>comments</argument>
      <call method="setCache">
        <argument type="service" id="doctrine_cache.providers.elcodi_comments"/>
      </call>
      <call method="setEncoder">
        <argument type="service" id="elcodi.json_encoder"/>
      </call>
    </service>
    <service id="elcodi.manager.comment_vote" class="Elcodi\Component\Comment\Services\VoteManager">
      <argument type="service" id="elcodi.event_dispatcher.comment"/>
      <argument type="service" id="elcodi.director.comment_vote"/>
    </service>
    <service id="elcodi.factory.comment" class="Elcodi\Component\Comment\Factory\CommentFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Comment\Entity\Comment</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.factory.comment_vote" class="Elcodi\Component\Comment\Factory\VoteFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Component\Comment\Entity\Vote</argument>
      </call>
      <call method="setDateTimeFactory">
        <argument type="service" id="elcodi.factory.datetime"/>
      </call>
    </service>
    <service id="elcodi.repository.comment" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Comment\Entity\Comment</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.comment_vote" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Component\Comment\Entity\Vote</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.comment" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Comment\Entity\Comment</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.comment_vote" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Component\Comment\Entity\Vote</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.director.comment" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.comment"/>
      <argument type="service" id="elcodi.repository.comment"/>
      <argument type="service" id="elcodi.factory.comment"/>
    </service>
    <service id="elcodi.director.comment_vote" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.comment_vote"/>
      <argument type="service" id="elcodi.repository.comment_vote"/>
      <argument type="service" id="elcodi.factory.comment_vote"/>
    </service>
    <service id="elcodi.event_listener.comment_cache_invalidation" class="Elcodi\Component\Comment\EventListener\CommentCacheInvalidationEventListener">
      <tag name="kernel.event_listener" event="comment.onadd" method="onCommentChange" priority="0"/>
      <tag name="kernel.event_listener" event="comment.onedit" method="onCommentChange" priority="0"/>
      <tag name="kernel.event_listener" event="comment.onremove" method="onCommentChange" priority="0"/>
      <tag name="kernel.event_listener" event="comment.onvoted" method="onCommentChange" priority="0"/>
      <argument type="service" id="elcodi.comment_cache"/>
    </service>
    <service id="elcodi.event_dispatcher.comment" class="Elcodi\Component\Comment\EventDispatcher\CommentEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi.loader.cart_shipping_amount" class="Elcodi\Component\CartShipping\Services\CartShippingAmountLoader">
      <argument type="service" id="elcodi.wrapper.shipping_methods"/>
    </service>
    <service id="elcodi.loader.order_shipping_method" class="Elcodi\Component\CartShipping\Services\OrderShippingMethodLoader">
      <argument type="service" id="elcodi.wrapper.shipping_methods"/>
    </service>
    <service id="elcodi.event_listener.load_cart_shipping_amount" class="Elcodi\Component\CartShipping\EventListener\LoadCartShippingAmountEventListener">
      <tag name="kernel.event_listener" event="cart.onload" method="loadCartShippingAmount" priority="6"/>
      <argument type="service" id="elcodi.loader.cart_shipping_amount"/>
    </service>
    <service id="elcodi.event_listener.load_order_shipping_method" class="Elcodi\Component\CartShipping\EventListener\LoadOrderShippingMethodEventListener">
      <tag name="kernel.event_listener" event="order.oncreated" method="loadOrderShippingMethod" priority="16"/>
      <argument type="service" id="elcodi.loader.order_shipping_method"/>
    </service>
    <service id="elcodi.sitemap_renderer.xml" class="Elcodi\Component\Sitemap\Renderer\XmlRenderer"/>
    <service id="elcodi.event_dispatcher.sitemap" class="Elcodi\Component\Sitemap\EventDispatcher\SitemapEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi.command.sitemap_dump" class="Elcodi\Component\Sitemap\Command\SitemapDumpCommand">
      <tag name="console.command"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="elcodi.command.sitemap_profile" class="Elcodi\Component\Sitemap\Command\SitemapProfileCommand">
      <tag name="console.command"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="elcodi.sitemap_transformer.static" class="Elcodi\Component\Sitemap\Transformer\StaticRouteTransformer">
      <argument type="service" id="router"/>
    </service>
    <service id="elcodi.factory.sitemap_element" class="Elcodi\Component\Sitemap\Factory\SitemapElementFactory"/>
    <service id="elcodi.sitemap_dumper.filesystem" class="Elcodi\Component\Sitemap\Dumper\FilesystemDumper"/>
    <service id="elcodi.sitemap_builder.main" class="Elcodi\Component\Sitemap\Builder\SitemapBuilder">
      <argument type="service" id="elcodi.sitemap_renderer.xml"/>
      <argument>/Users/michael/Documents/workspace/bamboo/app/../web/sitemap/sitemap_{_locale}.xml</argument>
      <call method="addSitemapElementGenerator">
        <argument type="service">
          <service class="Elcodi\Component\Sitemap\Element\StaticSitemapElementGenerator" public="false">
            <argument type="service" id="elcodi.factory.sitemap_element"/>
            <argument type="service" id="elcodi.sitemap_transformer.static"/>
            <argument>store_homepage</argument>
            <argument>null</argument>
            <argument>null</argument>
          </service>
        </argument>
      </call>
      <call method="addSitemapElementGenerator">
        <argument type="service">
          <service class="Elcodi\Component\Sitemap\Element\EntitySitemapElementGenerator" public="false">
            <argument type="service" id="elcodi.factory.sitemap_element"/>
            <argument type="service" id="elcodi_store.sitemap_transformer.product"/>
            <argument type="service">
              <service class="Elcodi\Component\Sitemap\Element\EntitySitemapElementProvider" public="false">
                <argument type="service" id="elcodi.repository.product"/>
                <argument>findBy</argument>
                <argument type="collection">
                  <argument key="enabled">true</argument>
                </argument>
              </service>
            </argument>
            <argument>daily</argument>
            <argument>0,5</argument>
          </service>
        </argument>
      </call>
      <call method="addSitemapElementGenerator">
        <argument type="service">
          <service class="Elcodi\Component\Sitemap\Element\EntitySitemapElementGenerator" public="false">
            <argument type="service" id="elcodi.factory.sitemap_element"/>
            <argument type="service" id="elcodi_store.sitemap_transformer.category"/>
            <argument type="service">
              <service class="Elcodi\Component\Sitemap\Element\EntitySitemapElementProvider" public="false">
                <argument type="service" id="elcodi.repository.category"/>
                <argument>findBy</argument>
                <argument type="collection">
                  <argument key="enabled">true</argument>
                </argument>
              </service>
            </argument>
            <argument>daily</argument>
            <argument>0,5</argument>
          </service>
        </argument>
      </call>
    </service>
    <service id="elcodi.sitemap_dumper.main" class="Elcodi\Component\Sitemap\Dumper\SitemapDumper">
      <argument type="service" id="elcodi.sitemap_builder.main"/>
      <argument type="service" id="elcodi.sitemap_dumper.filesystem"/>
      <argument>/Users/michael/Documents/workspace/bamboo/app/../web/sitemap/sitemap_{_locale}.xml</argument>
    </service>
    <service id="elcodi.sitemap_profile.main" class="Elcodi\Component\Sitemap\Profile\SitemapProfile">
      <argument type="service" id="elcodi.languages_iso_array"/>
      <call method="addSitemapDumper">
        <argument type="service" id="elcodi.sitemap_dumper.main"/>
      </call>
    </service>
    <service id="elcodi.payment_plugins" class="StdClass">
      <argument type="collection">
        <argument key="type">plugin</argument>
        <argument key="category">payment</argument>
      </argument>
      <factory service="elcodi.repository.plugin" method="findBy"/>
    </service>
    <service id="elcodi.enabled_payment_plugins" class="StdClass">
      <argument type="collection">
        <argument key="enabled">true</argument>
        <argument key="type">plugin</argument>
        <argument key="category">payment</argument>
      </argument>
      <factory service="elcodi.repository.plugin" method="findBy"/>
    </service>
    <service id="elcodi.event_dispatcher.payment" class="Elcodi\Component\Payment\EventDispatcher\PaymentEventDispatcher">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi.wrapper.payment_methods" class="Elcodi\Component\Payment\Wrapper\PaymentWrapper">
      <argument type="service" id="elcodi.event_dispatcher.payment"/>
    </service>
    <service id="elcodi_store.event_listener.store_disabled" class="Elcodi\Store\CoreBundle\EventListener\StoreUnavailableEventListener">
      <tag name="firewall_listener" firewall="%bamboo_store_firewall%" priority="-16"/>
      <argument type="service" id="elcodi.store"/>
      <argument>store.error.store_is_disabled</argument>
    </service>
    <service id="elcodi_store.template_locator.core" class="Elcodi\Store\CoreBundle\Services\TemplateLocator">
      <argument key="engine" type="service" id="templating"/>
      <argument key="bundles" type="collection">
        <argument>StoreOverrideBundle</argument>
        <argument type="service" id="elcodi.store_template_bundle"/>
        <argument>StoreFallbackBundle</argument>
      </argument>
    </service>
    <service id="elcodi_store.store_category_tree" class="Elcodi\Store\ProductBundle\Services\StoreCategoryTree">
      <argument type="service" id="elcodi.provider.category_tree"/>
      <argument>false</argument>
      <argument>categories</argument>
      <argument type="service" id="elcodi.locale"/>
      <call method="setCache">
        <argument type="service" id="doctrine_cache.providers.elcodi_categories"/>
      </call>
      <call method="setEncoder">
        <argument type="service" id="elcodi.json_encoder"/>
      </call>
    </service>
    <service id="elcodi_store.event_listener.categories_order_change" class="Elcodi\Store\ProductBundle\EventListener\CategoriesOrderChangeEventListener">
      <tag name="kernel.event_listener" event="categories.onchange" method="onChange"/>
      <argument type="service" id="elcodi_store.store_category_tree"/>
    </service>
    <service id="elcodi_store.sitemap_transformer.product" class="Elcodi\Store\ProductBundle\Transformer\ProductTransformer">
      <argument type="service" id="elcodi.entity_translator"/>
      <argument type="service" id="router"/>
    </service>
    <service id="elcodi_store.sitemap_transformer.category" class="Elcodi\Store\ProductBundle\Transformer\CategoryTransformer">
      <argument type="service" id="elcodi.entity_translator"/>
      <argument type="service" id="router"/>
    </service>
    <service id="elcodi_elcodi_store.form_type.login" class="Elcodi\Store\UserBundle\Form\Type\LoginType">
      <tag name="form.type" alias="store_user_form_type_login"/>
      <argument type="service" id="router"/>
    </service>
    <service id="elcodi_elcodi_store.form_type.register" class="Elcodi\Store\UserBundle\Form\Type\RegisterType">
      <tag name="form.type" alias="store_user_form_type_register"/>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.customer"/>
      </call>
    </service>
    <service id="elcodi_elcodi_store.form_type.profile" class="Elcodi\Store\UserBundle\Form\Type\ProfileType">
      <tag name="form.type" alias="store_user_form_type_profile"/>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.customer"/>
      </call>
    </service>
    <service id="elcodi_elcodi_store.form_type.password_remember" class="Elcodi\Store\UserBundle\Form\Type\PasswordRememberType">
      <tag name="form.type" alias="store_user_form_type_password_remember"/>
    </service>
    <service id="elcodi_elcodi_store.form_type.password_recover" class="Elcodi\Store\UserBundle\Form\Type\PasswordRecoverType">
      <tag name="form.type" alias="store_user_form_type_password_recover"/>
    </service>
    <service id="elcodi_elcodi_store.event_listener.password_remember_credentials" class="Elcodi\Store\UserBundle\EventListener\RememberPasswordCredentialsEventListener">
      <tag name="kernel.event_listener" event="password.recover" method="giveCredentialsWithNewPassword"/>
      <argument type="service" id="security.token_storage"/>
      <argument>store_area</argument>
    </service>
    <service id="elcodi_elcodi_store.event_listener.send_customer_registration_email" class="Elcodi\Store\UserBundle\EventListener\SendRegistrationEmailEventListener">
      <tag name="kernel.event_listener" event="customer.register" method="sendCustomerRegistrationEmail"/>
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="elcodi.repository.page"/>
      <argument type="service" id="elcodi.store"/>
      <argument type="service" id="elcodi_store.template_locator.page"/>
    </service>
    <service id="elcodi_elcodi_store.event_listener.send_password_remember_email" class="Elcodi\Store\UserBundle\EventListener\SendPasswordRememberEmailEventListener">
      <tag name="kernel.event_listener" event="password.remember" method="sendPasswordRememberEmail"/>
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="elcodi.repository.page"/>
      <argument type="service" id="elcodi.store"/>
      <argument type="service" id="elcodi_store.template_locator.page"/>
    </service>
    <service id="elcodi_elcodi_store.event_listener.send_password_recover_email" class="Elcodi\Store\UserBundle\EventListener\SendPasswordRecoverEmailEventListener">
      <tag name="kernel.event_listener" event="password.recover" method="sendPasswordRecoverEmail"/>
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="elcodi.repository.page"/>
      <argument type="service" id="elcodi.store"/>
      <argument type="service" id="elcodi_store.template_locator.page"/>
    </service>
    <service id="elcodi_elcodi_store.event_listener.autologin_on_register" class="Elcodi\Component\User\EventListener\AutologinOnRegisterEventListener">
      <tag name="firewall_listener" firewall="%bamboo_store_firewall%" event="user.register" method="onUserRegister"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>store_area</argument>
    </service>
    <service id="elcodi_store.form_type.address" class="Elcodi\Store\GeoBundle\Form\Type\AddressType">
      <tag name="form.type" alias="store_geo_form_type_address"/>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.address"/>
      </call>
    </service>
    <service id="elcodi_store.form.location_selector_builder" class="Elcodi\Store\GeoBundle\Form\LocationSelectorBuilder">
      <argument type="service" id="elcodi.location_provider_adapter.service"/>
    </service>
    <service id="elcodi_store.form_type.cart" class="Elcodi\Store\CartBundle\Form\Type\CartType">
      <tag name="form.type" alias="store_cart_form_type_cart"/>
      <argument type="service" id="router"/>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.cart"/>
      </call>
    </service>
    <service id="elcodi_store.form_type.cart_line" class="Elcodi\Store\CartBundle\Form\Type\CartLineType">
      <tag name="form.type" alias="store_cart_form_type_cart_line"/>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.cart_line"/>
      </call>
    </service>
    <service id="elcodi_store.event_listener.shipping_appliance" class="Elcodi\Store\CartBundle\EventListener\ShippingApplianceEventListener">
      <tag name="kernel.event_listener" event="cart.onload" method="removeInvalidShippingMethod" priority="8"/>
      <tag name="kernel.event_listener" event="cart.onload" method="loadCheapestShippingMethod" priority="7"/>
      <argument type="service" id="elcodi.event_dispatcher.cart"/>
      <argument type="service" id="elcodi.wrapper.shipping_methods"/>
      <argument type="service" id="elcodi.resolver.shipping"/>
    </service>
    <service id="elcodi_elcodi_store.event_listener.send_order_confirmation_email" class="Elcodi\Store\CartBundle\EventListener\SendOrderConfirmationEmailEventListener">
      <tag name="kernel.event_listener" event="order.oncreated" method="sendOrderConfirmationEmail" priority="0"/>
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="elcodi.repository.page"/>
      <argument type="service" id="elcodi.store"/>
      <argument type="service" id="elcodi_store.template_locator.page"/>
    </service>
    <service id="elcodi_elcodi_store.event_listener.send_order_shipped_email" class="Elcodi\Store\CartBundle\EventListener\SendOrderShippedEmailEventListener">
      <tag name="kernel.event_listener" event="state_machine.order_shipping_states_machine.transition_ship" method="sendOrderShippedEmail" priority="0"/>
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="elcodi.repository.page"/>
      <argument type="service" id="elcodi.store"/>
      <argument type="service" id="elcodi_store.template_locator.page"/>
    </service>
    <service id="elcodi_store.event_listener.just_one_manual" class="Elcodi\Store\CartCouponBundle\EventListener\JustOneManualCouponEventListener">
      <tag name="kernel.event_listener" event="cart_coupon.onapply" method="assertJustOneManualCoupon" priority="16"/>
      <argument type="service" id="elcodi.repository.cart_coupon"/>
    </service>
    <service id="elcodi_store.form_type.coupon_apply" class="Elcodi\Store\CartCouponBundle\Form\Type\CouponApplyType">
      <tag name="form.type" alias="store_cart_coupon_form_type_coupon_apply"/>
      <argument type="service" id="router"/>
    </service>
    <service id="elcodi_store.factory.authorization" class="Elcodi\Store\ConnectBundle\Factory\AuthorizationFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Store\ConnectBundle\Entity\Authorization</argument>
      </call>
    </service>
    <service id="store.connect.object_manager.authorization" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Store\ConnectBundle\Entity\Authorization</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="store.connect.repository.authorization" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Store\ConnectBundle\Entity\Authorization</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi_store.provider.oauth" class="Elcodi\Store\ConnectBundle\Services\OAuthUserProvider">
      <argument type="service" id="security.user.provider.concrete.customer"/>
      <argument type="service" id="elcodi_store.director.authorization"/>
      <argument type="service" id="elcodi.director.customer"/>
      <argument type="service" id="elcodi.object_manager.customer"/>
      <argument type="service" id="elcodi.event_dispatcher.user"/>
    </service>
    <service id="elcodi_store.director.authorization" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="store.connect.object_manager.authorization"/>
      <argument type="service" id="store.connect.repository.authorization"/>
      <argument type="service" id="elcodi_store.factory.authorization"/>
    </service>
    <service id="elcodi_elcodi_store.event_listener.add_order_completed_metric" class="Elcodi\Store\MetricBundle\EventListener\AddOrderCompletedMetricEventListener">
      <tag name="kernel.event_listener" event="order.oncreated" method="addMetric" priority="0"/>
      <argument type="service" id="elcodi.metric_manager"/>
      <argument type="service" id="elcodi.store"/>
    </service>
    <service id="twig.stringloader" class="Twig_Extension_StringLoader">
      <tag name="twig.extension"/>
    </service>
    <service id="elcodi_elcodi_store.twig_extension.store_page" class="Elcodi\Store\PageBundle\Twig\PageExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="elcodi.repository.page"/>
    </service>
    <service id="elcodi_store.template_locator.page" class="Elcodi\Store\CoreBundle\Services\TemplateLocator">
      <argument key="engine" type="service" id="templating"/>
      <argument key="bundles" type="collection">
        <argument>StoreOverrideBundle</argument>
        <argument>StorePageBundle</argument>
        <argument>StoreFallbackBundle</argument>
      </argument>
    </service>
    <service id="elcodi_admin.menu_builder.core" class="Elcodi\Admin\CoreBundle\Builder\MenuBuilder">
      <tag name="menu.builder" menu="admin" priority="32"/>
      <argument type="service" id="elcodi.factory.menu_node"/>
    </service>
    <service id="elcodi_admin.form_type.login" class="Elcodi\Admin\UserBundle\Form\Type\LoginType">
      <tag name="form.type" alias="elcodi_admin_user_form_type_login"/>
      <argument type="service" id="router"/>
    </service>
    <service id="elcodi_admin.form_type.register" class="Elcodi\Admin\UserBundle\Form\Type\RegisterType">
      <tag name="form.type" alias="elcodi_admin_user_form_type_register"/>
      <argument>Elcodi\Component\User\Entity\Customer</argument>
    </service>
    <service id="elcodi_admin.form_type.profile" class="Elcodi\Admin\UserBundle\Form\Type\ProfileType">
      <tag name="form.type" alias="elcodi_admin_user_form_type_profile"/>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.customer"/>
      </call>
    </service>
    <service id="elcodi_admin.form_type.password_remember" class="Elcodi\Admin\UserBundle\Form\Type\PasswordRememberType">
      <tag name="form.type" alias="elcodi_admin_user_form_type_password_remember"/>
    </service>
    <service id="elcodi_admin.form_type.password_recover" class="Elcodi\Admin\UserBundle\Form\Type\PasswordRecoverType">
      <tag name="form.type" alias="elcodi_admin_user_form_type_password_recover"/>
    </service>
    <service id="elcodi_admin.form_type.customer" class="Elcodi\Admin\UserBundle\Form\Type\CustomerType">
      <tag name="form.type" alias="elcodi_admin_user_form_type_customer"/>
      <argument>Elcodi\Component\Language\Entity\Language</argument>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.customer"/>
      </call>
    </service>
    <service id="elcodi_admin.form_type.admin_user" class="Elcodi\Admin\UserBundle\Form\Type\AdminUserType">
      <tag name="form.type" alias="elcodi_admin_user_form_type_admin_user"/>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.admin_user"/>
      </call>
    </service>
    <service id="elcodi_admin.security.one_time_login_authenticator" class="Elcodi\Admin\UserBundle\Security\OneTimeLoginAuthenticator">
      <argument type="service" id="elcodi.object_manager.admin_user"/>
      <argument type="service" id="elcodi.repository.admin_user"/>
    </service>
    <service id="elcodi_admin.menu_builder.user" class="Elcodi\Admin\UserBundle\Builder\MenuBuilder">
      <tag name="menu.builder" menu="admin" priority="32"/>
      <argument type="service" id="elcodi.factory.menu_node"/>
    </service>
    <service id="elcodi_admin.form_type.attribute" class="Elcodi\Admin\AttributeBundle\Form\Type\AttributeType">
      <tag name="form.type" alias="elcodi_admin_attribute_form_type_attribute"/>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.attribute"/>
      </call>
    </service>
    <service id="elcodi_admin.form_type.banner" class="Elcodi\Admin\BannerBundle\Form\Type\BannerType">
      <tag name="form.type" alias="elcodi_admin_banner_form_type_banner"/>
      <argument>Elcodi\Component\Media\Entity\Image</argument>
      <argument>Elcodi\Component\Banner\Entity\BannerZone</argument>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.banner"/>
      </call>
    </service>
    <service id="elcodi_admin.form_type.banner_zone" class="Elcodi\Admin\BannerBundle\Form\Type\BannerZoneType">
      <tag name="form.type" alias="elcodi_admin_banner_form_type_banner_zone"/>
      <argument>Elcodi\Component\Language\Entity\Language</argument>
      <argument>Elcodi\Component\Banner\Entity\Banner</argument>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.banner_zone"/>
      </call>
    </service>
    <service id="elcodi_admin.menu_builder.cart" class="Elcodi\Admin\CartBundle\Builder\MenuBuilder">
      <tag name="menu.builder" menu="admin" priority="32"/>
      <argument type="service" id="elcodi.factory.menu_node"/>
    </service>
    <service id="elcodi_admin.menu_builder.orders_not_shipped" class="Elcodi\Admin\CartBundle\Builder\OrdersNotShippedBuilder">
      <tag name="menu.builder" menu="admin" stage="after_cache"/>
      <argument type="service" id="elcodi.factory.menu_node"/>
      <argument type="service" id="elcodi.repository.order"/>
    </service>
    <service id="elcodi_admin.form_type.coupon" class="Elcodi\Admin\CouponBundle\Form\Type\CouponType">
      <tag name="form.type" alias="elcodi_admin_coupon_form_type_coupon"/>
      <argument>Elcodi\Component\Rule\Entity\Rule</argument>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.coupon"/>
      </call>
    </service>
    <service id="elcodi_admin.menu_builder.coupon" class="Elcodi\Admin\CouponBundle\Builder\MenuBuilder">
      <tag name="menu.builder" menu="admin" priority="32"/>
      <argument type="service" id="elcodi.factory.menu_node"/>
    </service>
    <service id="elcodi_admin.form_type.currency" class="Elcodi\Admin\CurrencyBundle\Form\Type\CurrencyType">
      <tag name="form.type" alias="elcodi_admin_currency_form_type_currency"/>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.currency"/>
      </call>
    </service>
    <service id="elcodi_admin.form_type.money" class="Elcodi\Admin\CurrencyBundle\Form\Type\MoneyType">
      <tag name="form.type" alias="money_object"/>
      <argument type="service" id="elcodi.wrapper.default_currency"/>
      <argument>Elcodi\Component\Currency\Entity\Currency</argument>
    </service>
    <service id="elcodi_admin.menu_builder.currency" class="Elcodi\Admin\CurrencyBundle\Builder\MenuBuilder">
      <tag name="menu.builder" menu="admin" priority="16"/>
      <argument type="service" id="elcodi.factory.menu_node"/>
    </service>
    <service id="elcodi_admin.menu_builder.language" class="Elcodi\Admin\LanguageBundle\Builder\MenuBuilder">
      <tag name="menu.builder" menu="admin" priority="16"/>
      <argument type="service" id="elcodi.factory.menu_node"/>
    </service>
    <service id="elcodi_admin.form_type.image" class="Elcodi\Admin\MediaBundle\Form\Type\ImageType">
      <tag name="form.type" alias="elcodi_admin_media_form_type_image"/>
    </service>
    <service id="elcodi_admin.form_type.newsletter_subscription" class="Elcodi\Admin\NewsletterBundle\Form\Type\NewsletterSubscriptionType">
      <tag name="form.type" alias="elcodi_admin_newsletter_form_type_newsletter_subscription"/>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.newsletter_subscription"/>
      </call>
    </service>
    <service id="elcodi_admin.form_type.product" class="Elcodi\Admin\ProductBundle\Form\Type\ProductType">
      <tag name="form.type" alias="elcodi_admin_product_form_type_product"/>
      <argument>Elcodi\Component\Product\Entity\Manufacturer</argument>
      <argument>Elcodi\Component\Product\Entity\Category</argument>
      <argument>Elcodi\Component\Media\Entity\Image</argument>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.product"/>
      </call>
      <call method="setEntityTranslatorFormEventListener">
        <argument type="service" id="elcodi.event_listener.entity_translator_form"/>
      </call>
    </service>
    <service id="elcodi_admin.form_type.product_variant" class="Elcodi\Admin\ProductBundle\Form\Type\VariantType">
      <tag name="form.type" alias="elcodi_admin_product_form_type_product_variant"/>
      <argument>Elcodi\Component\Attribute\Entity\Value</argument>
      <argument>Elcodi\Component\Media\Entity\Image</argument>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.product_variant"/>
      </call>
    </service>
    <service id="elcodi_admin.form_type.purchasable_pack" class="Elcodi\Admin\ProductBundle\Form\Type\PackType">
      <tag name="form.type" alias="elcodi_admin_product_form_type_purchasable_pack"/>
      <argument type="service" id="elcodi.name_resolver.purchasable"/>
      <argument>Elcodi\Component\Product\Entity\Purchasable</argument>
      <argument>Elcodi\Component\Product\Entity\Manufacturer</argument>
      <argument>Elcodi\Component\Product\Entity\Category</argument>
      <argument>Elcodi\Component\Media\Entity\Image</argument>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.purchasable_pack"/>
      </call>
      <call method="setEntityTranslatorFormEventListener">
        <argument type="service" id="elcodi.event_listener.entity_translator_form"/>
      </call>
    </service>
    <service id="elcodi_admin.form_type.category" class="Elcodi\Admin\ProductBundle\Form\Type\CategoryType">
      <tag name="form.type" alias="elcodi_admin_product_form_type_category"/>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.category"/>
      </call>
      <call method="setEntityTranslatorFormEventListener">
        <argument type="service" id="elcodi.event_listener.entity_translator_form"/>
      </call>
    </service>
    <service id="elcodi_admin.form_type.manufacturer" class="Elcodi\Admin\ProductBundle\Form\Type\ManufacturerType">
      <tag name="form.type" alias="elcodi_admin_product_form_type_manufacturer"/>
      <argument>Elcodi\Component\Media\Entity\Image</argument>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.manufacturer"/>
      </call>
      <call method="setEntityTranslatorFormEventListener">
        <argument type="service" id="elcodi.event_listener.entity_translator_form"/>
      </call>
    </service>
    <service id="elcodi_admin.event_listener.category_position" class="Elcodi\Admin\ProductBundle\EventListener\NewCategoryPositionEventListener">
      <tag name="doctrine.event_listener" event="preFlush" method="preFlush"/>
    </service>
    <service id="elcodi_admin.category_sorter" class="Elcodi\Admin\ProductBundle\Services\CategorySorter">
      <argument type="service" id="elcodi.repository.category"/>
      <argument type="service" id="elcodi.object_manager.category"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="elcodi_admin.validator.minimum_money" class="Elcodi\Admin\ProductBundle\Validation\MinimumMoneyValidator">
      <tag name="validator.constraint_validator" alias="minimum_money"/>
    </service>
    <service id="elcodi_admin.menu_builder.product" class="Elcodi\Admin\ProductBundle\Builder\MenuBuilder">
      <tag name="menu.builder" menu="admin" priority="32"/>
      <argument type="service" id="elcodi.factory.menu_node"/>
    </service>
    <service id="elcodi_admin.form_type.page" class="Elcodi\Admin\PageBundle\Form\Type\PageType">
      <tag name="form.type" alias="elcodi_admin_page_form_type_page"/>
      <argument type="service" id="elcodi_admin.form_event_listener.permanent_page"/>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.page"/>
      </call>
      <call method="setEntityTranslatorFormEventListener">
        <argument type="service" id="elcodi.event_listener.entity_translator_form"/>
      </call>
    </service>
    <service id="elcodi_admin.form_type.blog_post" class="Elcodi\Admin\PageBundle\Form\Type\BlogPostType">
      <tag name="form.type" alias="elcodi_admin_page_form_type_blog_post"/>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.page"/>
      </call>
      <call method="setEntityTranslatorFormEventListener">
        <argument type="service" id="elcodi.event_listener.entity_translator_form"/>
      </call>
    </service>
    <service id="elcodi_admin.form_type.email" class="Elcodi\Admin\PageBundle\Form\Type\EmailType">
      <tag name="form.type" alias="elcodi_admin_page_form_type_email"/>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.page"/>
      </call>
      <call method="setEntityTranslatorFormEventListener">
        <argument type="service" id="elcodi.event_listener.entity_translator_form"/>
      </call>
    </service>
    <service id="elcodi_admin.form_event_listener.permanent_page" class="Elcodi\Admin\PageBundle\Form\EventListener\PermanentPageSubscriber"/>
    <service id="elcodi.admin.menu_builder.page" class="Elcodi\Admin\PageBundle\Builder\MenuBuilder">
      <tag name="menu.builder" menu="admin" priority="16"/>
      <argument type="service" id="elcodi.factory.menu_node"/>
    </service>
    <service id="elcodi_admin.menu_builder.template" class="Elcodi\Admin\TemplateBundle\Builder\MenuBuilder">
      <tag name="menu.builder" menu="admin" priority="16"/>
      <argument type="service" id="elcodi.factory.menu_node"/>
    </service>
    <service id="elcodi_admin.metric_intervals_resolver" class="Elcodi\Admin\MetricBundle\Services\MetricIntervalsResolver"/>
    <service id="elcodi_admin.twig_extension.metric_intervals" class="Elcodi\Admin\MetricBundle\Twig\MetricIntervalsExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="elcodi_admin.metric_intervals_resolver"/>
    </service>
    <service id="elcodi_admin.menu_builder.plugin_list" class="Elcodi\Admin\PluginBundle\Builder\MenuBuilder">
      <tag name="menu.builder" menu="admin" priority="32"/>
      <argument type="service" id="elcodi.factory.menu_node"/>
    </service>
    <service id="elcodi_admin.menu_builder.plugin_entries" class="Elcodi\Admin\PluginBundle\Builder\PluginMenuBuilder">
      <tag name="menu.builder" menu="admin" priority="16"/>
      <argument type="service" id="elcodi.factory.menu_node"/>
      <argument type="service" id="elcodi.enabled_plugins"/>
    </service>
    <service id="elcodi_admin.menu_builder.shipping" class="Elcodi\Admin\ShippingBundle\Builder\MenuBuilder">
      <tag name="menu.builder" menu="admin" priority="32"/>
      <argument type="service" id="elcodi.factory.menu_node"/>
    </service>
    <service id="elcodi_admin.form_type.address" class="Elcodi\Admin\GeoBundle\Form\Type\AddressType">
      <tag name="form.type" alias="admin_geo_form_type_address"/>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.address"/>
      </call>
    </service>
    <service id="elcodi_admin.form.location_selector_builder" class="Elcodi\Admin\GeoBundle\Form\LocationSelectorBuilder">
      <argument type="service" id="elcodi.location_provider_adapter.service"/>
    </service>
    <service id="elcodi_admin.menu_builder.payment" class="Elcodi\Admin\PaymentBundle\Builder\MenuBuilder">
      <tag name="menu.builder" menu="admin" priority="32"/>
      <argument type="service" id="elcodi.factory.menu_node"/>
    </service>
    <service id="elcodi_admin.form_type.language" class="Elcodi\Admin\StoreBundle\Form\Type\StoreSettingsType">
      <tag name="form.type" alias="elcodi_admin_store_form_type_store_settings"/>
      <argument>Elcodi\Component\Currency\Entity\Currency</argument>
      <argument>Elcodi\Component\Language\Entity\Language</argument>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.store"/>
      </call>
    </service>
    <service id="elcodi_admin.form_type.store_address" class="Elcodi\Admin\StoreBundle\Form\Type\StoreAddressType">
      <tag name="form.type" alias="elcodi_admin_store_form_type_store_address"/>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.store"/>
      </call>
    </service>
    <service id="elcodi_admin.form_type.store_corporate" class="Elcodi\Admin\StoreBundle\Form\Type\StoreCorporateType">
      <tag name="form.type" alias="elcodi_admin_store_form_type_store_corporate"/>
      <argument>Elcodi\Component\Media\Entity\Image</argument>
      <call method="setFactory">
        <argument type="service" id="elcodi.factory.store"/>
      </call>
    </service>
    <service id="elcodi_admin.menu_builder.store" class="Elcodi\Admin\StoreBundle\Builder\MenuBuilder">
      <tag name="menu.builder" menu="admin" priority="16"/>
      <argument type="service" id="elcodi.factory.menu_node"/>
    </service>
    <service id="elcodi.command.elcodi_install" class="Elcodi\Common\CommonBundle\Command\ElcodiInstallCommand">
      <tag name="console.command"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="elcodi.object_manager.location"/>
    </service>
    <service id="elcodi_plugin.plugin.google_analytics" class="Elcodi\Component\Plugin\Entity\Plugin">
      <argument>Elcodi\Plugin\GoogleAnalyticsBundle\ElcodiGoogleAnalyticsBundle</argument>
      <factory service="elcodi.repository.plugin" method="find"/>
    </service>
    <service id="elcodi_plugin.google_analytics.renderer" class="Elcodi\Plugin\GoogleAnalyticsBundle\Templating\TwigRenderer">
      <tag name="kernel.event_listener" event="store.head_bottom" method="renderJavascript"/>
      <call method="setTemplating">
        <argument type="service" id="twig"/>
      </call>
      <call method="setPlugin">
        <argument type="service" id="elcodi_plugin.plugin.google_analytics"/>
      </call>
    </service>
    <service id="elcodi_plugin.pinterest" class="Elcodi\Component\Plugin\Entity\Plugin">
      <argument>Elcodi\Plugin\PinterestBundle\ElcodiPinterestBundle</argument>
      <factory service="elcodi.repository.plugin" method="find"/>
    </service>
    <service id="elcodi_plugin.pinterest.renderer" class="Elcodi\Plugin\PinterestBundle\Templating\TwigRenderer">
      <tag name="kernel.event_listener" event="store.head_bottom" method="renderAsynchronousJavascript"/>
      <tag name="kernel.event_listener" event="store.body_bottom" method="renderJavascript"/>
      <tag name="kernel.event_listener" event="store.product_pin_top" method="renderPin"/>
      <call method="setTemplating">
        <argument type="service" id="twig"/>
      </call>
      <call method="setPlugin">
        <argument type="service" id="elcodi_plugin.pinterest"/>
      </call>
    </service>
    <service id="elcodi_plugin.product_csv.exporter" class="Elcodi\Plugin\ProductCsvBundle\Services\ProductExporter">
      <argument type="service" id="elcodi_plugin.product_csv.csv_exporter"/>
    </service>
    <service id="elcodi_plugin.product_csv.csv_exporter" class="Goodby\CSV\Export\Standard\Exporter">
      <argument type="service" id="elcodi_plugin.product_csv.csv_exporter_config"/>
    </service>
    <service id="elcodi_plugin.product_csv.csv_exporter_config" class="Goodby\CSV\Export\Standard\ExporterConfig">
      <call method="setDelimiter">
        <argument>,</argument>
      </call>
      <call method="setNewline">
        <argument>
</argument>
      </call>
    </service>
    <service id="elcodi_plugin.product_csv" class="Elcodi\Component\Plugin\Entity\Plugin">
      <argument>Elcodi\Plugin\ProductCsvBundle\ElcodiProductCsvBundle</argument>
      <factory service="elcodi.repository.plugin" method="find"/>
    </service>
    <service id="elcodi_plugin.product_csv.renderer" class="Elcodi\Plugin\ProductCsvBundle\Templating\TwigRenderer">
      <tag name="kernel.event_listener" event="admin.header_actions" method="renderButtons"/>
      <call method="setTemplating">
        <argument type="service" id="twig"/>
      </call>
      <call method="setPlugin">
        <argument type="service" id="elcodi_plugin.product_csv"/>
      </call>
    </service>
    <service id="elcodi_plugin.store_setup_wizard" class="Elcodi\Component\Plugin\Entity\Plugin">
      <argument>Elcodi\Plugin\StoreSetupWizardBundle\ElcodiStoreSetupWizardBundle</argument>
      <factory service="elcodi.repository.plugin" method="find"/>
    </service>
    <service id="elcodi_plugin.store_setup_wizard.wizard_status" class="Elcodi\Plugin\StoreSetupWizardBundle\Services\WizardStatus">
      <argument type="service" id="elcodi.repository.product"/>
      <argument type="service" id="elcodi.store"/>
      <argument type="service" id="elcodi.enabled_payment_plugins"/>
      <argument type="service" id="elcodi.enabled_shipping_plugins"/>
    </service>
    <service id="elcodi_plugin.store_setup_wizard.wizard_routes" class="Elcodi\Plugin\StoreSetupWizardBundle\Services\WizardRoutes">
      <argument type="service" id="elcodi_plugin.store_setup_wizard.wizard_status"/>
    </service>
    <service id="elcodi_plugin.store_setup_wizard.renderer" class="Elcodi\Plugin\StoreSetupWizardBundle\Templating\TwigRenderer">
      <tag name="kernel.event_listener" event="admin.body_top" method="renderMiniWizard"/>
      <tag name="kernel.event_listener" event="admin.body_top" method="renderEnableStoreMessage"/>
      <tag name="kernel.event_listener" event="admin.body_top" method="renderGoNextStepMessage"/>
      <tag name="kernel.event_listener" event="admin.body_top" method="renderDisableUnderConstructionMode"/>
      <argument type="service" id="elcodi_plugin.store_setup_wizard.wizard_status"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="elcodi.store"/>
      <argument type="service" id="elcodi_plugin.store_setup_wizard.wizard_routes"/>
      <argument type="service" id="elcodi.repository.carrier"/>
      <call method="setTemplating">
        <argument type="service" id="twig"/>
      </call>
      <call method="setPlugin">
        <argument type="service" id="elcodi_plugin.store_setup_wizard"/>
      </call>
    </service>
    <service id="elcodi_plugin.store_setup_wizard.event_listener.dashboard_redirection" class="Elcodi\Plugin\StoreSetupWizardBundle\EventListener\DashboardRedirectionEventListener">
      <tag name="firewall_listener" firewall="admin_area"/>
      <argument type="service" id="router"/>
      <argument type="service" id="elcodi_plugin.store_setup_wizard.wizard_status"/>
      <argument type="service" id="elcodi_plugin.store_setup_wizard.wizard_routes"/>
      <call method="setPlugin">
        <argument type="service" id="elcodi_plugin.store_setup_wizard"/>
      </call>
    </service>
    <service id="elcodi_plugin.store_setup_wizard.event_listener.disable_wizard" class="Elcodi\Plugin\StoreSetupWizardBundle\EventListener\DisableWizardEventListener">
      <tag name="firewall_listener" firewall="admin_area"/>
      <argument type="service" id="elcodi_plugin.store_setup_wizard.wizard_status"/>
      <argument type="service" id="elcodi.manager.plugin"/>
      <argument type="service" id="elcodi.object_manager.plugin"/>
      <argument type="service" id="elcodi.store"/>
      <call method="setPlugin">
        <argument type="service" id="elcodi_plugin.store_setup_wizard"/>
      </call>
    </service>
    <service id="elcodi_plugin.disqus" class="Elcodi\Component\Plugin\Entity\Plugin">
      <argument>Elcodi\Plugin\DisqusBundle\ElcodiDisqusBundle</argument>
      <factory service="elcodi.repository.plugin" method="find"/>
    </service>
    <service id="elcodi_plugin.disqus.renderer" class="Elcodi\Plugin\DisqusBundle\Templating\TwigRenderer">
      <tag name="kernel.event_listener" event="store.head_bottom" method="renderJavascript"/>
      <tag name="kernel.event_listener" event="store.blog_post_view_bottom" method="renderDisqusBlogPostBlock"/>
      <tag name="kernel.event_listener" event="store.product_view_bottom" method="renderDisqusProductBlock"/>
      <call method="setTemplating">
        <argument type="service" id="twig"/>
      </call>
      <call method="setPlugin">
        <argument type="service" id="elcodi_plugin.disqus"/>
      </call>
    </service>
    <service id="elcodi_plugin.twitter" class="Elcodi\Component\Plugin\Entity\Plugin">
      <argument>Elcodi\Plugin\TwitterBundle\ElcodiTwitterBundle</argument>
      <factory service="elcodi.repository.plugin" method="find"/>
    </service>
    <service id="elcodi_plugin.twitter.javascript_renderer" class="Elcodi\Plugin\TwitterBundle\Templating\JavascriptRenderer">
      <tag name="kernel.event_listener" event="store.body_bottom" method="renderJavascript"/>
      <tag name="kernel.event_listener" event="admin.footer_script" method="renderJavascript"/>
      <call method="setTemplating">
        <argument type="service" id="twig"/>
      </call>
      <call method="setPlugin">
        <argument type="service" id="elcodi_plugin.twitter"/>
      </call>
    </service>
    <service id="elcodi_plugin.twitter.share_tweet_renderer" class="Elcodi\Plugin\TwitterBundle\Templating\ShareTweetRenderer">
      <tag name="kernel.event_listener" event="store.product_pin_top" method="renderShareProduct"/>
      <tag name="kernel.event_listener" event="store.order_thanks" method="renderShareOrder"/>
      <argument type="service" id="router"/>
      <argument type="service" id="translator"/>
      <call method="setTemplating">
        <argument type="service" id="twig"/>
      </call>
      <call method="setPlugin">
        <argument type="service" id="elcodi_plugin.twitter"/>
      </call>
    </service>
    <service id="elcodi_plugin.twitter.follow_renderer" class="Elcodi\Plugin\TwitterBundle\Templating\FollowRenderer">
      <tag name="kernel.event_listener" event="store.footer_social" method="renderFollowButton"/>
      <call method="setTemplating">
        <argument type="service" id="twig"/>
      </call>
      <call method="setPlugin">
        <argument type="service" id="elcodi_plugin.twitter"/>
      </call>
    </service>
    <service id="elcodi_plugin.event_listener.twitter_username" class="Elcodi\Plugin\TwitterBundle\EventListener\TwitterUsernameEventListener">
      <tag name="doctrine.event_listener" event="preUpdate" method="preUpdate"/>
      <argument type="service" id="elcodi_plugin.service.twitter_username_cleaner"/>
    </service>
    <service id="elcodi_plugin.service.twitter_username_cleaner" class="Elcodi\Plugin\TwitterBundle\Services\TwitterUsernameCleaner"/>
    <service id="elcodi_plugin.facebook.javascript_renderer" class="Elcodi\Plugin\FacebookBundle\Templating\JavascriptRenderer">
      <tag name="kernel.event_listener" event="store.body_bottom" method="renderJavascript"/>
      <call method="setTemplating">
        <argument type="service" id="twig"/>
      </call>
      <call method="setPlugin">
        <argument type="service" id="elcodi_plugin.facebook"/>
      </call>
    </service>
    <service id="elcodi_plugin.facebook.share_post_renderer" class="Elcodi\Plugin\FacebookBundle\Templating\SharePostRenderer">
      <tag name="kernel.event_listener" event="store.product_pin_top" method="renderShareProduct"/>
      <tag name="kernel.event_listener" event="store.order_thanks" method="renderShareOrder"/>
      <argument type="service" id="router"/>
      <argument type="service" id="translator"/>
      <call method="setTemplating">
        <argument type="service" id="twig"/>
      </call>
      <call method="setPlugin">
        <argument type="service" id="elcodi_plugin.facebook"/>
      </call>
    </service>
    <service id="elcodi_plugin.facebook.follow_renderer" class="Elcodi\Plugin\FacebookBundle\Templating\FollowRenderer">
      <tag name="kernel.event_listener" event="store.footer_social" method="renderFollowButton"/>
      <call method="setTemplating">
        <argument type="service" id="twig"/>
      </call>
      <call method="setPlugin">
        <argument type="service" id="elcodi_plugin.facebook"/>
      </call>
    </service>
    <service id="elcodi_plugin.event_listener.facebook_username" class="Elcodi\Plugin\FacebookBundle\EventListener\FacebookUsernameEventListener">
      <tag name="doctrine.event_listener" event="preUpdate" method="preUpdate"/>
      <argument type="service" id="elcodi_plugin.service.facebook_username_cleaner"/>
    </service>
    <service id="elcodi_plugin.service.facebook_username_cleaner" class="Elcodi\Plugin\FacebookBundle\Services\FacebookUsernameCleaner"/>
    <service id="elcodi_plugin.facebook" class="Elcodi\Component\Plugin\Entity\Plugin">
      <argument>Elcodi\Plugin\FacebookBundle\ElcodiFacebookBundle</argument>
      <factory service="elcodi.repository.plugin" method="find"/>
    </service>
    <service id="elcodi_plugin.paypal_web_checkout" class="Elcodi\Component\Plugin\Entity\Plugin">
      <argument>Elcodi\Plugin\PaypalWebCheckoutBundle\ElcodiPaypalWebCheckoutBundle</argument>
      <factory service="elcodi.repository.plugin" method="find"/>
    </service>
    <service id="elcodi_plugin.paypal_web_checkout.business" class="StdClass">
      <argument>business</argument>
      <factory service="elcodi_plugin.paypal_web_checkout" method="getFieldValue"/>
    </service>
    <service id="paymentsuite.paypal_web_checkout.form_type_builder" class="PaymentSuite\PaypalWebCheckoutBundle\Services\PaypalWebCheckoutFormTypeBuilder">
      <argument type="service" id="paymentsuite.paypal_web_checkout.url_factory"/>
      <argument type="service" id="paymentsuite.bridge"/>
      <argument type="service" id="form.factory"/>
      <argument type="service" id="router"/>
      <argument type="service" id="elcodi_plugin.paypal_web_checkout.business"/>
    </service>
    <service id="elcodi_plugin.paypal.event_listener.payment_collect" class="Elcodi\Plugin\PaypalWebCheckoutBundle\EventListener\PaymentCollectEventListener">
      <tag name="kernel.event_listener" event="payment.collect" method="addPaypalPaymentMethod"/>
      <argument type="service" id="router"/>
      <argument type="service" id="elcodi_plugin.paypal_web_checkout"/>
    </service>
    <service id="elcodi_plugin.free_payment" class="Elcodi\Component\Plugin\Entity\Plugin">
      <argument>Elcodi\Plugin\FreePaymentBundle\ElcodiFreePaymentBundle</argument>
      <factory service="elcodi.repository.plugin" method="find"/>
    </service>
    <service id="elcodi_plugin.free_payment.event_listener.payment_collect" class="Elcodi\Plugin\FreePaymentBundle\EventListener\PaymentCollectEventListener">
      <tag name="kernel.event_listener" event="payment.collect" method="addFreePaymentPaymentMethod"/>
      <argument type="service" id="router"/>
      <argument type="service" id="elcodi_plugin.free_payment"/>
    </service>
    <service id="elcodi_plugin.stripe" class="Elcodi\Component\Plugin\Entity\Plugin">
      <argument>Elcodi\Plugin\StripeBundle\ElcodiStripeBundle</argument>
      <factory service="elcodi.repository.plugin" method="find"/>
    </service>
    <service id="elcodi_plugin.stripe.public_key" class="StdClass">
      <argument>public_key</argument>
      <factory service="elcodi_plugin.stripe" method="getFieldValue"/>
    </service>
    <service id="elcodi_plugin.stripe.private_key" class="StdClass">
      <argument>private_key</argument>
      <factory service="elcodi_plugin.stripe" method="getFieldValue"/>
    </service>
    <service id="elcodi_plugin.stripe.event_listener.payment_collect" class="Elcodi\Plugin\StripeBundle\EventListener\PaymentCollectEventListener">
      <tag name="kernel.event_listener" event="payment.collect" method="addStripePaymentMethod"/>
      <argument type="service" id="elcodi_plugin.stripe"/>
      <argument type="service" id="paymentsuite.bridge"/>
      <argument type="service" id="form.factory"/>
      <argument type="service" id="templating"/>
      <argument type="service" id="elcodi_plugin.stripe.public_key"/>
    </service>
    <service id="elcodi_plugin.custom_shipping.event_listener.shipping_collect" class="Elcodi\Plugin\CustomShippingBundle\EventListener\ShippingCollectEventListener">
      <tag name="kernel.event_listener" event="shipping.collect" method="addCustomShippingMethods"/>
      <argument type="service" id="elcodi_plugin.custom_shipping"/>
      <argument type="service" id="elcodi_plugin.custom_shipping.provider.shipping_ranges"/>
    </service>
    <service id="elcodi_plugin.custom_shipping.factory.carrier" class="Elcodi\Plugin\CustomShippingBundle\Factory\CarrierFactory">
      <call method="setEntityNamespace">
        <argument>Elcodi\Plugin\CustomShippingBundle\Entity\Carrier</argument>
      </call>
    </service>
    <service id="elcodi_plugin.custom_shipping.factory.shipping_range" class="Elcodi\Plugin\CustomShippingBundle\Factory\ShippingRangeFactory">
      <argument type="service" id="elcodi.wrapper.default_currency"/>
      <call method="setEntityNamespace">
        <argument>Elcodi\Plugin\CustomShippingBundle\Entity\ShippingRange</argument>
      </call>
    </service>
    <service id="elcodi.repository.shipping_range" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Plugin\CustomShippingBundle\Entity\ShippingRange</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.repository.carrier" class="Doctrine\Common\Persistence\ObjectRepository">
      <argument>Elcodi\Plugin\CustomShippingBundle\Entity\Carrier</argument>
      <factory service="elcodi.provider.repository" method="getRepositoryByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.shipping_range" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Plugin\CustomShippingBundle\Entity\ShippingRange</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.object_manager.carrier" class="Doctrine\Common\Persistence\ObjectManager">
      <argument>Elcodi\Plugin\CustomShippingBundle\Entity\Carrier</argument>
      <factory service="elcodi.provider.manager" method="getManagerByEntityNamespace"/>
    </service>
    <service id="elcodi.director.carrier" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.carrier"/>
      <argument type="service" id="elcodi.repository.carrier"/>
      <argument type="service" id="elcodi_plugin.custom_shipping.factory.carrier"/>
    </service>
    <service id="elcodi.director.shipping_range" class="Elcodi\Component\Core\Services\ObjectDirector" lazy="true">
      <argument type="service" id="elcodi.object_manager.shipping_range"/>
      <argument type="service" id="elcodi.repository.shipping_range"/>
      <argument type="service" id="elcodi_plugin.custom_shipping.factory.shipping_range"/>
    </service>
    <service id="elcodi_plugin.custom_shipping.form_type.shipping_range" class="Elcodi\Plugin\CustomShippingBundle\Form\Type\ShippingRangeType">
      <tag name="form.type" alias="elcodi_plugin_custom_shipping_form_type_shipping_range"/>
      <argument>Elcodi\Component\Zone\Entity\Zone</argument>
      <call method="setFactory">
        <argument type="service" id="elcodi_plugin.custom_shipping.factory.shipping_range"/>
      </call>
    </service>
    <service id="elcodi_plugin.custom_shipping.form_type.carrier" class="Elcodi\Plugin\CustomShippingBundle\Form\Type\CarrierType">
      <tag name="form.type" alias="elcodi_plugin_custom_shipping_form_type_carrier"/>
      <argument>Elcodi\Component\Tax\Entity\Tax</argument>
      <call method="setFactory">
        <argument type="service" id="elcodi_plugin.custom_shipping.factory.carrier"/>
      </call>
      <call method="setEntityTranslatorFormEventListener">
        <argument type="service" id="elcodi.event_listener.entity_translator_form"/>
      </call>
    </service>
    <service id="elcodi_plugin.custom_shipping.menu_builder" class="Elcodi\Plugin\CustomShippingBundle\Builder\MenuBuilder">
      <tag name="menu.builder"/>
      <argument type="service" id="elcodi.factory.menu_node"/>
    </service>
    <service id="elcodi_plugin.custom_shipping" class="Elcodi\Component\Plugin\Entity\Plugin">
      <argument>Elcodi\Plugin\CustomShippingBundle\ElcodiCustomShippingBundle</argument>
      <factory service="elcodi.repository.plugin" method="find"/>
    </service>
    <service id="elcodi_plugin.custom_shipping.provider.shipping_ranges" class="Elcodi\Plugin\CustomShippingBundle\Provider\ShippingRangesProvider">
      <argument type="service" id="elcodi.repository.carrier"/>
      <argument type="service" id="elcodi.converter.currency"/>
      <argument type="service" id="elcodi.matcher.zone"/>
    </service>
    <service id="elcodi_plugin.bankwire" class="Elcodi\Component\Plugin\Entity\Plugin">
      <argument>Elcodi\Plugin\BankwireBundle\ElcodiBankwireBundle</argument>
      <factory service="elcodi.repository.plugin" method="find"/>
    </service>
    <service id="elcodi_plugin.bankwire.event_listener.payment_collect" class="Elcodi\Plugin\BankwireBundle\EventListener\PaymentCollectEventListener">
      <tag name="kernel.event_listener" event="payment.collect" method="addFreePaymentPaymentMethod"/>
      <argument type="service" id="router"/>
      <argument type="service" id="elcodi_plugin.bankwire"/>
    </service>
    <service id="jms_serializer.doctrine_proxy_subscriber" class="JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber">
      <tag name="jms_serializer.event_subscriber"/>
    </service>
    <service id="jms_serializer.stopwatch_subscriber" class="JMS\SerializerBundle\Serializer\StopwatchEventSubscriber">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="jms_serializer.handler_registry" class="JMS\Serializer\Handler\LazyHandlerRegistry">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="2" type="collection">
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromyml</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
          </argument>
        </argument>
        <argument key="1" type="collection">
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\Form" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\FormError" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolationList" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolation" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToyml</argument>
            </argument>
          </argument>
          <argument key="FOS\RestBundle\Util\ExceptionWrapper" type="collection">
            <argument key="json" type="collection">
              <argument>fos_rest.serializer.exception_wrapper_serialize_handler</argument>
              <argument>serializeToJson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>fos_rest.serializer.exception_wrapper_serialize_handler</argument>
              <argument>serializeToXml</argument>
            </argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="jms_serializer.datetime_handler" class="JMS\Serializer\Handler\DateHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>Y-m-d\TH:i:sO</argument>
      <argument>Pacific/Auckland</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.array_collection_handler" class="JMS\Serializer\Handler\ArrayCollectionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.php_collection_handler" class="JMS\Serializer\Handler\PhpCollectionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.form_error_handler" class="JMS\Serializer\Handler\FormErrorHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="jms_serializer.constraint_violation_handler" class="JMS\Serializer\Handler\ConstraintViolationHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.unserialize_object_constructor" class="JMS\Serializer\Construction\UnserializeObjectConstructor" public="false"/>
    <service id="jms_serializer.templating.helper.serializer" class="JMS\SerializerBundle\Templating\SerializerHelper">
      <tag name="templating.helper" alias="jms_serializer"/>
      <argument type="service" id="jms_serializer"/>
    </service>
    <service id="jms_serializer.json_serialization_visitor" class="JMS\Serializer\JsonSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <call method="setOptions">
        <argument>0</argument>
      </call>
    </service>
    <service id="jms_serializer.json_deserialization_visitor" class="JMS\Serializer\JsonDeserializationVisitor">
      <tag name="jms_serializer.deserialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer.xml_serialization_visitor" class="JMS\Serializer\XmlSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
    </service>
    <service id="jms_serializer.xml_deserialization_visitor" class="JMS\Serializer\XmlDeserializationVisitor">
      <tag name="jms_serializer.deserialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <call method="setDoctypeWhitelist">
        <argument type="collection"/>
      </call>
    </service>
    <service id="jms_serializer.yaml_serialization_visitor" class="JMS\Serializer\YamlSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="yml"/>
      <argument type="service" id="jms_serializer.naming_strategy"/>
    </service>
    <service id="fos_rest.view.exception_wrapper_handler" class="FOS\RestBundle\View\ExceptionWrapperHandler"/>
    <service id="fos_rest.serializer.exception_wrapper_serialize_handler" class="FOS\RestBundle\Serializer\ExceptionWrapperSerializeHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="fos_rest.serializer.exception_wrapper_normalizer" class="FOS\RestBundle\Serializer\ExceptionWrapperNormalizer">
      <tag name="serializer.normalizer"/>
      <argument type="service" id="translator"/>
    </service>
    <service id="fos_rest.routing.loader.controller" class="FOS\RestBundle\Routing\Loader\RestRouteLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="fos_rest.routing.loader.reader.controller"/>
      <argument>null</argument>
    </service>
    <service id="fos_rest.routing.loader.processor" class="FOS\RestBundle\Routing\Loader\RestRouteProcessor"/>
    <service id="fos_rest.routing.loader.yaml_collection" class="FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="fos_rest.routing.loader.xml_collection" class="FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="fos_rest.routing.loader.reader.controller" class="FOS\RestBundle\Routing\Loader\Reader\RestControllerReader">
      <argument type="service" id="fos_rest.routing.loader.reader.action"/>
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="fos_rest.routing.loader.reader.action" class="FOS\RestBundle\Routing\Loader\Reader\RestActionReader">
      <argument type="service" id="annotation_reader"/>
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="fos_rest.inflector.doctrine"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
        <argument key="html">true</argument>
      </argument>
    </service>
    <service id="fos_rest.format_negotiator" class="FOS\RestBundle\Negotiation\FormatNegotiator"/>
    <service id="fos_rest.exception_format_negotiator" class="FOS\RestBundle\Negotiation\FormatNegotiator"/>
    <service id="fos_rest.inflector.doctrine" class="FOS\RestBundle\Inflector\DoctrineInflector"/>
    <service id="fos_rest.violation_formatter" class="FOS\RestBundle\Util\ViolationFormatter">
      <argument>false</argument>
    </service>
    <service id="fos_rest.request.param_fetcher" class="FOS\RestBundle\Request\ParamFetcher">
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="fos_rest.violation_formatter"/>
      <argument type="service" id="validator" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="fos_rest.request.param_fetcher.reader" class="FOS\RestBundle\Request\ParamReader">
      <argument type="service" id="annotation_reader"/>
    </service>
    <service id="fos_rest.normalizer.camel_keys" class="FOS\RestBundle\Normalizer\CamelKeysNormalizer"/>
    <service id="fos_rest.normalizer.camel_keys_with_leading_underscore" class="FOS\RestBundle\Normalizer\CamelKeysNormalizerWithLeadingUnderscore"/>
    <service id="fos_rest.decoder.json" class="FOS\RestBundle\Decoder\JsonDecoder"/>
    <service id="fos_rest.decoder.jsontoform" class="FOS\RestBundle\Decoder\JsonToFormDecoder"/>
    <service id="fos_rest.decoder.xml" class="FOS\RestBundle\Decoder\XmlDecoder"/>
    <service id="fos_rest.decoder_provider" class="FOS\RestBundle\Decoder\ContainerDecoderProvider">
      <argument type="collection">
        <argument key="json">fos_rest.decoder.json</argument>
        <argument key="xml">fos_rest.decoder.xml</argument>
      </argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="fos_rest.body_listener" class="FOS\RestBundle\EventListener\BodyListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="10"/>
      <argument type="service" id="fos_rest.decoder_provider"/>
      <argument>false</argument>
      <call method="setDefaultFormat">
        <argument>null</argument>
      </call>
    </service>
    <service id="store.fixtures_booster.command.load_fixtures" class="Elcodi\Bundle\FixturesBoosterBundle\Command\LoadDataFixturesDoctrineCommand">
      <tag name="console.command"/>
      <argument type="service" id="kernel"/>
      <argument>null</argument>
    </service>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController">
      <argument type="service" id="router" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="data_collector.config" type="collection">
          <argument>config</argument>
          <argument>@WebProfiler/Collector/config.html.twig</argument>
        </argument>
        <argument key="data_collector.request" type="collection">
          <argument>request</argument>
          <argument>@WebProfiler/Collector/request.html.twig</argument>
        </argument>
        <argument key="data_collector.ajax" type="collection">
          <argument>ajax</argument>
          <argument>@WebProfiler/Collector/ajax.html.twig</argument>
        </argument>
        <argument key="data_collector.exception" type="collection">
          <argument>exception</argument>
          <argument>@WebProfiler/Collector/exception.html.twig</argument>
        </argument>
        <argument key="data_collector.events" type="collection">
          <argument>events</argument>
          <argument>@WebProfiler/Collector/events.html.twig</argument>
        </argument>
        <argument key="data_collector.logger" type="collection">
          <argument>logger</argument>
          <argument>@WebProfiler/Collector/logger.html.twig</argument>
        </argument>
        <argument key="data_collector.time" type="collection">
          <argument>time</argument>
          <argument>@WebProfiler/Collector/time.html.twig</argument>
        </argument>
        <argument key="data_collector.memory" type="collection">
          <argument>memory</argument>
          <argument>@WebProfiler/Collector/memory.html.twig</argument>
        </argument>
        <argument key="data_collector.router" type="collection">
          <argument>router</argument>
          <argument>@WebProfiler/Collector/router.html.twig</argument>
        </argument>
        <argument key="data_collector.form" type="collection">
          <argument>form</argument>
          <argument>@WebProfiler/Collector/form.html.twig</argument>
        </argument>
        <argument key="data_collector.translation" type="collection">
          <argument>translation</argument>
          <argument>@WebProfiler/Collector/translation.html.twig</argument>
        </argument>
        <argument key="data_collector.twig" type="collection">
          <argument>twig</argument>
          <argument>@WebProfiler/Collector/twig.html.twig</argument>
        </argument>
        <argument key="data_collector.doctrine" type="collection">
          <argument>db</argument>
          <argument>@Doctrine/Collector/db.html.twig</argument>
        </argument>
        <argument key="swiftmailer.data_collector" type="collection">
          <argument>swiftmailer</argument>
          <argument>@Swiftmailer/Collector/swiftmailer.html.twig</argument>
        </argument>
        <argument key="data_collector.security" type="collection">
          <argument>security</argument>
          <argument>@Security/Collector/security.html.twig</argument>
        </argument>
        <argument key="snc_redis.data_collector" type="collection">
          <argument>redis</argument>
          <argument>SncRedisBundle:Collector:redis</argument>
        </argument>
      </argument>
      <argument>bottom</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router" on-invalid="null"/>
    </service>
    <service id="web_profiler.controller.exception" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument>bottom</argument>
      <argument type="service" id="router" on-invalid="ignore"/>
      <argument>^/(app(_[\w]+)?\.php/)?_wdt</argument>
    </service>
    <service id="sensio_distribution.webconfigurator" class="Sensio\Bundle\DistributionBundle\Configurator\Configurator">
      <argument>/Users/michael/Documents/workspace/bamboo/app</argument>
      <call method="addStep">
        <argument type="service">
          <service class="Sensio\Bundle\DistributionBundle\Configurator\Step\DoctrineStep" public="false">
            <tag name="webconfigurator.step" priority="10"/>
          </service>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addStep">
        <argument type="service">
          <service class="Sensio\Bundle\DistributionBundle\Configurator\Step\SecretStep" public="false">
            <tag name="webconfigurator.step"/>
          </service>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="sensio_distribution.security_checker" class="SensioLabs\Security\SecurityChecker"/>
    <service id="sensio_distribution.security_checker.command" class="SensioLabs\Security\Command\SecurityCheckerCommand">
      <tag name="console.command"/>
      <argument type="service" id="sensio_distribution.security_checker"/>
    </service>
    <service id="visithor.client" class="Visithor\Bundle\Client\SymfonyClient">
      <argument type="service" id="session"/>
      <argument type="service" id="visitor.environment_builder"/>
      <argument type="service">
        <service class="AppKernel" public="false">
          <argument>dev</argument>
          <argument>true</argument>
        </service>
      </argument>
    </service>
    <service id="visithor.command.go" class="Visithor\Bundle\Command\GoCommand">
      <tag name="console.command"/>
      <argument type="service" id="visithor.url_generator"/>
      <argument type="service" id="visithor.renderer_factory"/>
      <argument type="service" id="visithor.executor"/>
    </service>
    <service id="visithor.factory.url" class="Visithor\Factory\UrlFactory"/>
    <service id="visithor.factory.url_chain" class="Visithor\Factory\UrlChainFactory"/>
    <service id="visithor.url_generator" class="Visithor\Bundle\Generator\SymfonyUrlGenerator">
      <argument type="service" id="visithor.factory.url"/>
      <argument type="service" id="visithor.factory.url_chain"/>
      <argument type="service" id="router"/>
    </service>
    <service id="visithor.executor" class="Visithor\Executor\Executor" lazy="true">
      <argument type="service" id="visithor.client"/>
    </service>
    <service id="visithor.renderer_factory" class="Visithor\Renderer\RendererFactory"/>
    <service id="visitor.environment_builder" class="Elcodi\Bridge\VisithorBridgeBundle\Environment\EnvironmentBuilder">
      <argument type="service" id="elcodi.repository.customer"/>
      <argument type="service" id="elcodi.repository.admin_user"/>
    </service>
    <service id="simple_doctrine_mapping.locator_configurator" class="Mmoreram\SimpleDoctrineMapping\Configurator\LocatorConfigurator">
      <argument type="service" id="kernel"/>
    </service>
    <service id="monolog.logger.paymentsuite" class="Symfony\Bridge\Monolog\Logger">
      <argument>paymentsuite</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.templating" class="Symfony\Bridge\Monolog\Logger">
      <argument>templating</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.assetic" class="Symfony\Bridge\Monolog\Logger">
      <argument>assetic</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.logger.snc_redis" class="Symfony\Bridge\Monolog\Logger">
      <argument>snc_redis</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="monolog.handler.debug" class="Symfony\Bridge\Monolog\Handler\DebugHandler">
      <argument>100</argument>
      <argument>true</argument>
    </service>
    <service id="elcodi_common.event_listener.firewall_store_area" class="Elcodi\Common\FirewallBundle\EventListener\FirewallEventListener">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection">
        <argument type="collection">
          <argument key="eventName">user.register</argument>
          <argument key="callback" type="collection">
            <argument>elcodi_elcodi_store.event_listener.autologin_on_register</argument>
            <argument>onUserRegister</argument>
          </argument>
          <argument key="priority">0</argument>
        </argument>
      </argument>
    </service>
    <service id="session.storage.filesystem" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage">
      <argument>/Users/michael/Documents/workspace/bamboo/app/cache/dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="templating.loader" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader">
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="templating" class="Symfony\Bundle\TwigBundle\TwigEngine">
      <argument type="service" id="twig"/>
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="translator" class="Symfony\Component\Translation\DataCollectorTranslator">
      <argument type="service">
        <service class="Symfony\Component\Translation\LoggingTranslator" public="false">
          <tag name="monolog.logger" channel="translation"/>
          <argument type="service" id="translator.default"/>
          <argument type="service" id="monolog.logger.translation"/>
        </service>
      </argument>
    </service>
    <service id="router" class="JMS\I18nRoutingBundle\Router\I18nRouter">
      <argument type="service" id="service_container"/>
      <argument>/Users/michael/Documents/workspace/bamboo/app/config/routing/routing_dev.yml</argument>
      <argument type="collection">
        <argument key="cache_dir">/Users/michael/Documents/workspace/bamboo/app/cache/dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">appDevUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">appDevUrlMatcher</argument>
        <argument key="strict_requirements">true</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <call method="setLocaleResolver">
        <argument type="service">
          <service class="JMS\I18nRoutingBundle\Router\DefaultLocaleResolver" public="false">
            <argument>hl</argument>
          </service>
        </argument>
      </call>
      <call method="setI18nLoaderId">
        <argument>jms_i18n_routing.loader</argument>
      </call>
      <call method="setDefaultLocale">
        <argument>en</argument>
      </call>
      <call method="setRedirectToHost">
        <argument>true</argument>
      </call>
    </service>
    <service id="annotation_reader" class="Doctrine\Common\Annotations\FileCacheReader">
      <argument type="service">
        <service class="Doctrine\Common\Annotations\AnnotationReader" public="false"/>
      </argument>
      <argument>/Users/michael/Documents/workspace/bamboo/app/cache/dev/annotations</argument>
      <argument>true</argument>
    </service>
    <service id="security.encoder_factory" class="Symfony\Component\Security\Core\Encoder\EncoderFactory">
      <argument type="collection">
        <argument key="Elcodi\Component\User\Entity\Customer" type="collection">
          <argument key="class">%security.encoder.bcrypt.class%</argument>
          <argument key="arguments" type="collection">
            <argument>15</argument>
          </argument>
        </argument>
        <argument key="Elcodi\Component\User\Entity\AdminUser" type="collection">
          <argument key="class">%security.encoder.bcrypt.class%</argument>
          <argument key="arguments" type="collection">
            <argument>15</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.password_encoder" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder">
      <argument type="service" id="security.encoder_factory"/>
    </service>
    <service id="twig.loader" class="Symfony\Bundle\TwigBundle\Loader\FilesystemLoader">
      <tag name="twig.loader"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="templating.name_parser"/>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/vendor/paymentsuite/paymentsuite/src/PaymentSuite/PaypalWebCheckoutBundle/Resources/views</argument>
        <argument>PaypalWebCheckout</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/vendor/paymentsuite/paymentsuite/src/PaymentSuite/StripeBundle/Resources/views</argument>
        <argument>Stripe</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/vendor/hwi/oauth-bundle/Resources/views</argument>
        <argument>HWIOAuth</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/vendor/snc/redis-bundle/Snc/RedisBundle/Resources/views</argument>
        <argument>SncRedis</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/PageBundle/Resources/views</argument>
        <argument>StorePage</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/app/Resources/StoreOverrideBundle/views</argument>
        <argument>StoreOverride</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/app/Resources/StoreFallbackBundle/views</argument>
        <argument>StoreFallback</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CoreBundle/Resources/views</argument>
        <argument>AdminCore</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/UserBundle/Resources/views</argument>
        <argument>AdminUser</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/AttributeBundle/Resources/views</argument>
        <argument>AdminAttribute</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/BannerBundle/Resources/views</argument>
        <argument>AdminBanner</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CartBundle/Resources/views</argument>
        <argument>AdminCart</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CouponBundle/Resources/views</argument>
        <argument>AdminCoupon</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CurrencyBundle/Resources/views</argument>
        <argument>AdminCurrency</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/LanguageBundle/Resources/views</argument>
        <argument>AdminLanguage</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/MediaBundle/Resources/views</argument>
        <argument>AdminMedia</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/NewsletterBundle/Resources/views</argument>
        <argument>AdminNewsletter</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/ProductBundle/Resources/views</argument>
        <argument>AdminProduct</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/PageBundle/Resources/views</argument>
        <argument>AdminPage</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/TemplateBundle/Resources/views</argument>
        <argument>AdminTemplate</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/MetricBundle/Resources/views</argument>
        <argument>AdminMetric</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/PluginBundle/Resources/views</argument>
        <argument>AdminPlugin</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/GeoBundle/Resources/views</argument>
        <argument>AdminGeo</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/StoreBundle/Resources/views</argument>
        <argument>AdminStore</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/GoogleAnalyticsBundle/Resources/views</argument>
        <argument>ElcodiGoogleAnalytics</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/PinterestBundle/Resources/views</argument>
        <argument>ElcodiPinterest</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/ProductCsvBundle/Resources/views</argument>
        <argument>ElcodiProductCsv</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreSetupWizardBundle/Resources/views</argument>
        <argument>ElcodiStoreSetupWizard</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/DisqusBundle/Resources/views</argument>
        <argument>ElcodiDisqus</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/TwitterBundle/Resources/views</argument>
        <argument>ElcodiTwitter</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/FacebookBundle/Resources/views</argument>
        <argument>ElcodiFacebook</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreTemplateBundle/Resources/views</argument>
        <argument>StoreTemplate</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/CustomShippingBundle/Resources/views</argument>
        <argument>ElcodiCustomShipping</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/src/Best365/Store/UserBundle/Resources/views</argument>
        <argument>User</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/vendor/sensio/distribution-bundle/Sensio/Bundle/DistributionBundle/Resources/views</argument>
        <argument>SensioDistribution</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/app/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form</argument>
      </call>
    </service>
    <service id="logger" class="Symfony\Bridge\Monolog\Logger">
      <argument>app</argument>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.debug"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.transport" class="Swift_Transport_SpoolTransport">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <argument type="service" id="swiftmailer.mailer.default.spool"/>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.spool" class="Swift_MemorySpool"/>
    <service id="swiftmailer.mailer.default.transport.real" class="Swift_Transport_NullTransport">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
    </service>
    <service id="hwi_oauth.user_checker" class="Symfony\Component\Security\Core\User\UserChecker"/>
    <service id="jms_serializer.metadata_driver" class="JMS\Serializer\Metadata\Driver\DoctrineTypeDriver">
      <argument type="service">
        <service class="Metadata\Driver\DriverChain" public="false">
          <argument type="collection">
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\YamlDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Elcodi\Bundle\CartBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CartBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\CouponBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CouponBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\RuleBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/RuleBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\CoreBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CoreBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\CurrencyBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CurrencyBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\LanguageBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/LanguageBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\MediaBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/MediaBundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineCacheBundle">/Users/michael/Documents/workspace/bamboo/vendor/doctrine/doctrine-cache-bundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\GeoBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/GeoBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\GaufretteBundle">/Users/michael/Documents/workspace/bamboo/vendor/knplabs/knp-gaufrette-bundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\AttributeBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/AttributeBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\StoreBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/StoreBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\UserBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/UserBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\ProductBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/ProductBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\StateTransitionMachineBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/StateTransitionMachineBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\ShippingBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/ShippingBundle/Resources/config/serializer</argument>
                      <argument key="PaymentSuite\PaymentCoreBundle">/Users/michael/Documents/workspace/bamboo/vendor/paymentsuite/paymentsuite/src/PaymentSuite/PaymentCoreBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bridge\PaymentSuiteBridgeBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Bridge/PaymentSuiteBridgeBundle/Resources/config/serializer</argument>
                      <argument key="PaymentSuite\PaypalWebCheckoutBundle">/Users/michael/Documents/workspace/bamboo/vendor/paymentsuite/paymentsuite/src/PaymentSuite/PaypalWebCheckoutBundle/Resources/config/serializer</argument>
                      <argument key="PaymentSuite\FreePaymentBundle">/Users/michael/Documents/workspace/bamboo/vendor/paymentsuite/paymentsuite/src/PaymentSuite/FreePaymentBundle/Resources/config/serializer</argument>
                      <argument key="PaymentSuite\StripeBundle">/Users/michael/Documents/workspace/bamboo/vendor/paymentsuite/paymentsuite/src/PaymentSuite/StripeBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\ZoneBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/ZoneBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\TaxBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/TaxBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\EntityTranslatorBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/EntityTranslatorBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\MenuBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/MenuBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\PluginBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/PluginBundle/Resources/config/serializer</argument>
                      <argument key="PaymentSuite\BankwireBundle">/Users/michael/Documents/workspace/bamboo/vendor/paymentsuite/paymentsuite/src/PaymentSuite/BankwireBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\FrameworkBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/monolog-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SwiftmailerBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/swiftmailer-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\AsseticBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/assetic-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">/Users/michael/Documents/workspace/bamboo/vendor/doctrine/doctrine-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\FixturesBundle">/Users/michael/Documents/workspace/bamboo/vendor/doctrine/doctrine-fixtures-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\MigrationsBundle">/Users/michael/Documents/workspace/bamboo/vendor/doctrine/doctrine-migrations-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\FrameworkExtraBundle">/Users/michael/Documents/workspace/bamboo/vendor/sensio/framework-extra-bundle/Resources/config/serializer</argument>
                      <argument key="Ornicar\GravatarBundle">/Users/michael/Documents/workspace/bamboo/vendor/ornicar/gravatar-bundle/Ornicar/GravatarBundle/Resources/config/serializer</argument>
                      <argument key="HWI\Bundle\OAuthBundle">/Users/michael/Documents/workspace/bamboo/vendor/hwi/oauth-bundle/Resources/config/serializer</argument>
                      <argument key="Snc\RedisBundle">/Users/michael/Documents/workspace/bamboo/vendor/snc/redis-bundle/Snc/RedisBundle/Resources/config/serializer</argument>
                      <argument key="JMS\I18nRoutingBundle">/Users/michael/Documents/workspace/bamboo/vendor/acasademont/i18n-routing-bundle/JMS/I18nRoutingBundle/Resources/config/serializer</argument>
                      <argument key="Mmoreram\ControllerExtraBundle">/Users/michael/Documents/workspace/bamboo/vendor/mmoreram/controller-extra-bundle/Resources/config/serializer</argument>
                      <argument key="Mmoreram\CacheFlushBundle">/Users/michael/Documents/workspace/bamboo/vendor/mmoreram/cache-flush-bundle/Resources/config/serializer</argument>
                      <argument key="Mmoreram\HttpHeadersBundle">/Users/michael/Documents/workspace/bamboo/vendor/mmoreram/http-headers-bundle/Mmoreram/HttpHeadersBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\CartCouponBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CartCouponBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\BannerBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/BannerBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\NewsletterBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/NewsletterBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\PageBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/PageBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\MetricBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/MetricBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\CommentBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CommentBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\CartShippingBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CartShippingBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\SitemapBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/SitemapBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\PaymentBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/PaymentBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\CoreBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\ProductBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/ProductBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\UserBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/UserBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\GeoBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/GeoBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\CartBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CartBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\CurrencyBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CurrencyBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\CartCouponBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CartCouponBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\ConnectBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/ConnectBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\MetricBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/MetricBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\PageBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/PageBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\LanguageBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/LanguageBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\OverrideBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/OverrideBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\FallbackBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/FallbackBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\CoreBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CoreBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\UserBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/UserBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\AttributeBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/AttributeBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\BannerBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/BannerBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\CartBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CartBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\CouponBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CouponBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\CurrencyBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CurrencyBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\LanguageBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/LanguageBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\MediaBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/MediaBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\NewsletterBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/NewsletterBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\ProductBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/ProductBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\PageBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/PageBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\TemplateBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/TemplateBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\MetricBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/MetricBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\PluginBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/PluginBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\ShippingBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/ShippingBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\GeoBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/GeoBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\PaymentBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/PaymentBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\StoreBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/StoreBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Common\FirewallBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Common/FirewallBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Common\CommonBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Common/CommonBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\GoogleAnalyticsBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/GoogleAnalyticsBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\PinterestBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/PinterestBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\ProductCsvBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/ProductCsvBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\StoreSetupWizardBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreSetupWizardBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\DisqusBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/DisqusBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\TwitterBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/TwitterBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\FacebookBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/FacebookBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\StoreTemplateBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreTemplateBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\PaypalWebCheckoutBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/PaypalWebCheckoutBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\FreePaymentBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/FreePaymentBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\StripeBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StripeBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\CustomShippingBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/CustomShippingBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\BankwireBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/BankwireBundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">/Users/michael/Documents/workspace/bamboo/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer</argument>
                      <argument key="FOS\RestBundle">/Users/michael/Documents/workspace/bamboo/vendor/friendsofsymfony/rest-bundle/FOS/RestBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\GeneratorBundle">/Users/michael/Documents/workspace/bamboo/vendor/sensio/generator-bundle/Resources/config/serializer</argument>
                      <argument key="Best365\Store\UserBundle">/Users/michael/Documents/workspace/bamboo/src/Best365/Store/UserBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\FixturesBoosterBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/FixturesBoosterBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bridge\BehatBridgeBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Bridge/BehatBridgeBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\WebProfilerBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\DistributionBundle">/Users/michael/Documents/workspace/bamboo/vendor/sensio/distribution-bundle/Sensio/Bundle/DistributionBundle/Resources/config/serializer</argument>
                      <argument key="Visithor\Bundle">/Users/michael/Documents/workspace/bamboo/vendor/visithor/visithor-bundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bridge\VisithorBridgeBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Bridge/VisithorBridgeBundle/Resources/config/serializer</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\XmlDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Elcodi\Bundle\CartBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CartBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\CouponBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CouponBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\RuleBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/RuleBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\CoreBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CoreBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\CurrencyBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CurrencyBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\LanguageBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/LanguageBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\MediaBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/MediaBundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineCacheBundle">/Users/michael/Documents/workspace/bamboo/vendor/doctrine/doctrine-cache-bundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\GeoBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/GeoBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\GaufretteBundle">/Users/michael/Documents/workspace/bamboo/vendor/knplabs/knp-gaufrette-bundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\AttributeBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/AttributeBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\StoreBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/StoreBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\UserBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/UserBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\ProductBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/ProductBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\StateTransitionMachineBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/StateTransitionMachineBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\ShippingBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/ShippingBundle/Resources/config/serializer</argument>
                      <argument key="PaymentSuite\PaymentCoreBundle">/Users/michael/Documents/workspace/bamboo/vendor/paymentsuite/paymentsuite/src/PaymentSuite/PaymentCoreBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bridge\PaymentSuiteBridgeBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Bridge/PaymentSuiteBridgeBundle/Resources/config/serializer</argument>
                      <argument key="PaymentSuite\PaypalWebCheckoutBundle">/Users/michael/Documents/workspace/bamboo/vendor/paymentsuite/paymentsuite/src/PaymentSuite/PaypalWebCheckoutBundle/Resources/config/serializer</argument>
                      <argument key="PaymentSuite\FreePaymentBundle">/Users/michael/Documents/workspace/bamboo/vendor/paymentsuite/paymentsuite/src/PaymentSuite/FreePaymentBundle/Resources/config/serializer</argument>
                      <argument key="PaymentSuite\StripeBundle">/Users/michael/Documents/workspace/bamboo/vendor/paymentsuite/paymentsuite/src/PaymentSuite/StripeBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\ZoneBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/ZoneBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\TaxBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/TaxBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\EntityTranslatorBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/EntityTranslatorBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\MenuBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/MenuBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\PluginBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/PluginBundle/Resources/config/serializer</argument>
                      <argument key="PaymentSuite\BankwireBundle">/Users/michael/Documents/workspace/bamboo/vendor/paymentsuite/paymentsuite/src/PaymentSuite/BankwireBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\FrameworkBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/monolog-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SwiftmailerBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/swiftmailer-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\AsseticBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/assetic-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">/Users/michael/Documents/workspace/bamboo/vendor/doctrine/doctrine-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\FixturesBundle">/Users/michael/Documents/workspace/bamboo/vendor/doctrine/doctrine-fixtures-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\MigrationsBundle">/Users/michael/Documents/workspace/bamboo/vendor/doctrine/doctrine-migrations-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\FrameworkExtraBundle">/Users/michael/Documents/workspace/bamboo/vendor/sensio/framework-extra-bundle/Resources/config/serializer</argument>
                      <argument key="Ornicar\GravatarBundle">/Users/michael/Documents/workspace/bamboo/vendor/ornicar/gravatar-bundle/Ornicar/GravatarBundle/Resources/config/serializer</argument>
                      <argument key="HWI\Bundle\OAuthBundle">/Users/michael/Documents/workspace/bamboo/vendor/hwi/oauth-bundle/Resources/config/serializer</argument>
                      <argument key="Snc\RedisBundle">/Users/michael/Documents/workspace/bamboo/vendor/snc/redis-bundle/Snc/RedisBundle/Resources/config/serializer</argument>
                      <argument key="JMS\I18nRoutingBundle">/Users/michael/Documents/workspace/bamboo/vendor/acasademont/i18n-routing-bundle/JMS/I18nRoutingBundle/Resources/config/serializer</argument>
                      <argument key="Mmoreram\ControllerExtraBundle">/Users/michael/Documents/workspace/bamboo/vendor/mmoreram/controller-extra-bundle/Resources/config/serializer</argument>
                      <argument key="Mmoreram\CacheFlushBundle">/Users/michael/Documents/workspace/bamboo/vendor/mmoreram/cache-flush-bundle/Resources/config/serializer</argument>
                      <argument key="Mmoreram\HttpHeadersBundle">/Users/michael/Documents/workspace/bamboo/vendor/mmoreram/http-headers-bundle/Mmoreram/HttpHeadersBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\CartCouponBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CartCouponBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\BannerBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/BannerBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\NewsletterBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/NewsletterBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\PageBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/PageBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\MetricBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/MetricBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\CommentBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CommentBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\CartShippingBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CartShippingBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\SitemapBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/SitemapBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\PaymentBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/PaymentBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\CoreBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\ProductBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/ProductBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\UserBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/UserBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\GeoBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/GeoBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\CartBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CartBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\CurrencyBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CurrencyBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\CartCouponBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CartCouponBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\ConnectBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/ConnectBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\MetricBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/MetricBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\PageBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/PageBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\LanguageBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/LanguageBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\OverrideBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/OverrideBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\FallbackBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/FallbackBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\CoreBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CoreBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\UserBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/UserBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\AttributeBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/AttributeBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\BannerBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/BannerBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\CartBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CartBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\CouponBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CouponBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\CurrencyBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CurrencyBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\LanguageBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/LanguageBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\MediaBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/MediaBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\NewsletterBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/NewsletterBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\ProductBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/ProductBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\PageBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/PageBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\TemplateBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/TemplateBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\MetricBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/MetricBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\PluginBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/PluginBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\ShippingBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/ShippingBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\GeoBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/GeoBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\PaymentBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/PaymentBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\StoreBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/StoreBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Common\FirewallBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Common/FirewallBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Common\CommonBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Common/CommonBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\GoogleAnalyticsBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/GoogleAnalyticsBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\PinterestBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/PinterestBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\ProductCsvBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/ProductCsvBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\StoreSetupWizardBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreSetupWizardBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\DisqusBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/DisqusBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\TwitterBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/TwitterBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\FacebookBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/FacebookBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\StoreTemplateBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreTemplateBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\PaypalWebCheckoutBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/PaypalWebCheckoutBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\FreePaymentBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/FreePaymentBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\StripeBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StripeBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\CustomShippingBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/CustomShippingBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\BankwireBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/BankwireBundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">/Users/michael/Documents/workspace/bamboo/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer</argument>
                      <argument key="FOS\RestBundle">/Users/michael/Documents/workspace/bamboo/vendor/friendsofsymfony/rest-bundle/FOS/RestBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\GeneratorBundle">/Users/michael/Documents/workspace/bamboo/vendor/sensio/generator-bundle/Resources/config/serializer</argument>
                      <argument key="Best365\Store\UserBundle">/Users/michael/Documents/workspace/bamboo/src/Best365/Store/UserBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\FixturesBoosterBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/FixturesBoosterBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bridge\BehatBridgeBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Bridge/BehatBridgeBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\WebProfilerBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\DistributionBundle">/Users/michael/Documents/workspace/bamboo/vendor/sensio/distribution-bundle/Sensio/Bundle/DistributionBundle/Resources/config/serializer</argument>
                      <argument key="Visithor\Bundle">/Users/michael/Documents/workspace/bamboo/vendor/visithor/visithor-bundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bridge\VisithorBridgeBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Bridge/VisithorBridgeBundle/Resources/config/serializer</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\PhpDriver" public="false">
                <argument type="service">
                  <service class="Metadata\Driver\FileLocator" public="false">
                    <argument type="collection">
                      <argument key="Elcodi\Bundle\CartBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CartBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\CouponBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CouponBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\RuleBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/RuleBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\CoreBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CoreBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\CurrencyBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CurrencyBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\LanguageBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/LanguageBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\MediaBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/MediaBundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineCacheBundle">/Users/michael/Documents/workspace/bamboo/vendor/doctrine/doctrine-cache-bundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\GeoBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/GeoBundle/Resources/config/serializer</argument>
                      <argument key="Knp\Bundle\GaufretteBundle">/Users/michael/Documents/workspace/bamboo/vendor/knplabs/knp-gaufrette-bundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\AttributeBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/AttributeBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\StoreBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/StoreBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\UserBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/UserBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\ProductBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/ProductBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\StateTransitionMachineBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/StateTransitionMachineBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\ShippingBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/ShippingBundle/Resources/config/serializer</argument>
                      <argument key="PaymentSuite\PaymentCoreBundle">/Users/michael/Documents/workspace/bamboo/vendor/paymentsuite/paymentsuite/src/PaymentSuite/PaymentCoreBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bridge\PaymentSuiteBridgeBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Bridge/PaymentSuiteBridgeBundle/Resources/config/serializer</argument>
                      <argument key="PaymentSuite\PaypalWebCheckoutBundle">/Users/michael/Documents/workspace/bamboo/vendor/paymentsuite/paymentsuite/src/PaymentSuite/PaypalWebCheckoutBundle/Resources/config/serializer</argument>
                      <argument key="PaymentSuite\FreePaymentBundle">/Users/michael/Documents/workspace/bamboo/vendor/paymentsuite/paymentsuite/src/PaymentSuite/FreePaymentBundle/Resources/config/serializer</argument>
                      <argument key="PaymentSuite\StripeBundle">/Users/michael/Documents/workspace/bamboo/vendor/paymentsuite/paymentsuite/src/PaymentSuite/StripeBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\ZoneBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/ZoneBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\TaxBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/TaxBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\EntityTranslatorBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/EntityTranslatorBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\MenuBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/MenuBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\PluginBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/PluginBundle/Resources/config/serializer</argument>
                      <argument key="PaymentSuite\BankwireBundle">/Users/michael/Documents/workspace/bamboo/vendor/paymentsuite/paymentsuite/src/PaymentSuite/BankwireBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\FrameworkBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SecurityBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\TwigBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\MonologBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/monolog-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\SwiftmailerBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/swiftmailer-bundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\AsseticBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/assetic-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\DoctrineBundle">/Users/michael/Documents/workspace/bamboo/vendor/doctrine/doctrine-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\FixturesBundle">/Users/michael/Documents/workspace/bamboo/vendor/doctrine/doctrine-fixtures-bundle/Resources/config/serializer</argument>
                      <argument key="Doctrine\Bundle\MigrationsBundle">/Users/michael/Documents/workspace/bamboo/vendor/doctrine/doctrine-migrations-bundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\FrameworkExtraBundle">/Users/michael/Documents/workspace/bamboo/vendor/sensio/framework-extra-bundle/Resources/config/serializer</argument>
                      <argument key="Ornicar\GravatarBundle">/Users/michael/Documents/workspace/bamboo/vendor/ornicar/gravatar-bundle/Ornicar/GravatarBundle/Resources/config/serializer</argument>
                      <argument key="HWI\Bundle\OAuthBundle">/Users/michael/Documents/workspace/bamboo/vendor/hwi/oauth-bundle/Resources/config/serializer</argument>
                      <argument key="Snc\RedisBundle">/Users/michael/Documents/workspace/bamboo/vendor/snc/redis-bundle/Snc/RedisBundle/Resources/config/serializer</argument>
                      <argument key="JMS\I18nRoutingBundle">/Users/michael/Documents/workspace/bamboo/vendor/acasademont/i18n-routing-bundle/JMS/I18nRoutingBundle/Resources/config/serializer</argument>
                      <argument key="Mmoreram\ControllerExtraBundle">/Users/michael/Documents/workspace/bamboo/vendor/mmoreram/controller-extra-bundle/Resources/config/serializer</argument>
                      <argument key="Mmoreram\CacheFlushBundle">/Users/michael/Documents/workspace/bamboo/vendor/mmoreram/cache-flush-bundle/Resources/config/serializer</argument>
                      <argument key="Mmoreram\HttpHeadersBundle">/Users/michael/Documents/workspace/bamboo/vendor/mmoreram/http-headers-bundle/Mmoreram/HttpHeadersBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\CartCouponBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CartCouponBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\BannerBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/BannerBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\NewsletterBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/NewsletterBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\PageBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/PageBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\MetricBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/MetricBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\CommentBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CommentBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\CartShippingBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/CartShippingBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\SitemapBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/SitemapBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\PaymentBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/PaymentBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\CoreBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CoreBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\ProductBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/ProductBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\UserBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/UserBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\GeoBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/GeoBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\CartBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CartBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\CurrencyBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CurrencyBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\CartCouponBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/CartCouponBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\ConnectBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/ConnectBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\MetricBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/MetricBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\PageBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/PageBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\LanguageBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/LanguageBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\OverrideBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/OverrideBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Store\FallbackBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Store/FallbackBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\CoreBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CoreBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\UserBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/UserBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\AttributeBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/AttributeBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\BannerBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/BannerBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\CartBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CartBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\CouponBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CouponBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\CurrencyBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/CurrencyBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\LanguageBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/LanguageBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\MediaBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/MediaBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\NewsletterBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/NewsletterBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\ProductBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/ProductBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\PageBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/PageBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\TemplateBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/TemplateBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\MetricBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/MetricBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\PluginBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/PluginBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\ShippingBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/ShippingBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\GeoBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/GeoBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\PaymentBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/PaymentBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Admin\StoreBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Admin/StoreBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Common\FirewallBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Common/FirewallBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Common\CommonBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Common/CommonBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\GoogleAnalyticsBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/GoogleAnalyticsBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\PinterestBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/PinterestBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\ProductCsvBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/ProductCsvBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\StoreSetupWizardBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreSetupWizardBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\DisqusBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/DisqusBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\TwitterBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/TwitterBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\FacebookBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/FacebookBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\StoreTemplateBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StoreTemplateBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\PaypalWebCheckoutBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/PaypalWebCheckoutBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\FreePaymentBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/FreePaymentBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\StripeBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/StripeBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\CustomShippingBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/CustomShippingBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Plugin\BankwireBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Plugin/BankwireBundle/Resources/config/serializer</argument>
                      <argument key="JMS\SerializerBundle">/Users/michael/Documents/workspace/bamboo/vendor/jms/serializer-bundle/JMS/SerializerBundle/Resources/config/serializer</argument>
                      <argument key="FOS\RestBundle">/Users/michael/Documents/workspace/bamboo/vendor/friendsofsymfony/rest-bundle/FOS/RestBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\GeneratorBundle">/Users/michael/Documents/workspace/bamboo/vendor/sensio/generator-bundle/Resources/config/serializer</argument>
                      <argument key="Best365\Store\UserBundle">/Users/michael/Documents/workspace/bamboo/src/Best365/Store/UserBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bundle\FixturesBoosterBundle">/Users/michael/Documents/workspace/bamboo/vendor/elcodi/elcodi/src/Elcodi/Bundle/FixturesBoosterBundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bridge\BehatBridgeBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Bridge/BehatBridgeBundle/Resources/config/serializer</argument>
                      <argument key="Symfony\Bundle\WebProfilerBundle">/Users/michael/Documents/workspace/bamboo/vendor/symfony/symfony/src/Symfony/Bundle/WebProfilerBundle/Resources/config/serializer</argument>
                      <argument key="Sensio\Bundle\DistributionBundle">/Users/michael/Documents/workspace/bamboo/vendor/sensio/distribution-bundle/Sensio/Bundle/DistributionBundle/Resources/config/serializer</argument>
                      <argument key="Visithor\Bundle">/Users/michael/Documents/workspace/bamboo/vendor/visithor/visithor-bundle/Resources/config/serializer</argument>
                      <argument key="Elcodi\Bridge\VisithorBridgeBundle">/Users/michael/Documents/workspace/bamboo/src/Elcodi/Bridge/VisithorBridgeBundle/Resources/config/serializer</argument>
                    </argument>
                  </service>
                </argument>
              </service>
            </argument>
            <argument type="service">
              <service class="JMS\Serializer\Metadata\Driver\AnnotationDriver" public="false">
                <argument type="service" id="annotation_reader"/>
              </service>
            </argument>
          </argument>
        </service>
      </argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="jms_serializer.naming_strategy" class="JMS\Serializer\Naming\CacheNamingStrategy">
      <argument type="service">
        <service class="JMS\Serializer\Naming\SerializedNameAnnotationStrategy" public="false">
          <argument type="service">
            <service class="JMS\Serializer\Naming\CamelCaseNamingStrategy" public="false">
              <argument>_</argument>
              <argument>true</argument>
            </service>
          </argument>
        </service>
      </argument>
    </service>
    <service id="jms_serializer.object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer" class="JMS\Serializer\Serializer">
      <argument type="service">
        <service class="Metadata\MetadataFactory" public="false">
          <argument type="service">
            <service class="Metadata\Driver\LazyLoadingDriver" public="false">
              <argument type="service" id="service_container"/>
              <argument>jms_serializer.metadata_driver</argument>
            </service>
          </argument>
          <argument>Metadata\ClassHierarchyMetadata</argument>
          <argument>true</argument>
          <call method="setCache">
            <argument type="service">
              <service class="Metadata\Cache\FileCache" public="false">
                <argument>/Users/michael/Documents/workspace/bamboo/app/cache/dev/jms_serializer</argument>
              </service>
            </argument>
          </call>
        </service>
      </argument>
      <argument type="service" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="service">
        <service class="PhpCollection\Map">
          <argument type="collection">
            <argument key="json" type="service" id="jms_serializer.json_serialization_visitor"/>
            <argument key="xml" type="service" id="jms_serializer.xml_serialization_visitor"/>
            <argument key="yml" type="service" id="jms_serializer.yaml_serialization_visitor"/>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="PhpCollection\Map">
          <argument type="collection">
            <argument key="json" type="service" id="jms_serializer.json_deserialization_visitor"/>
            <argument key="xml" type="service" id="jms_serializer.xml_deserialization_visitor"/>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="JMS\Serializer\EventDispatcher\LazyEventDispatcher" public="false">
          <argument type="service" id="service_container"/>
          <call method="setListeners">
            <argument type="collection">
              <argument key="serializer.pre_serialize" type="collection">
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.stopwatch_subscriber</argument>
                    <argument>onPreSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                    <argument>onPreSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
              </argument>
              <argument key="serializer.post_serialize" type="collection">
                <argument type="collection">
                  <argument type="collection">
                    <argument>jms_serializer.stopwatch_subscriber</argument>
                    <argument>onPostSerialize</argument>
                  </argument>
                  <argument>null</argument>
                  <argument>null</argument>
                </argument>
              </argument>
            </argument>
          </call>
        </service>
      </argument>
    </service>
    <service id="fos_rest.view_handler" class="FOS\RestBundle\View\ViewHandler">
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>400</argument>
      <argument>204</argument>
      <argument>false</argument>
      <argument type="collection">
        <argument key="html">302</argument>
      </argument>
      <argument>twig</argument>
      <call method="setExclusionStrategyGroups">
        <argument type="collection"/>
      </call>
      <call method="setExclusionStrategyVersion">
        <argument></argument>
      </call>
      <call method="setSerializeNullStrategy">
        <argument>false</argument>
      </call>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="fos_rest.serializer" class="FOS\RestBundle\Serializer\JMSSerializerAdapter" lazy="true">
      <argument type="service" id="jms_serializer"/>
    </service>
    <service id="elcodi.adapter.currency_exchange_rate" alias="elcodi.currency_exchange_rate_adapter.yahoo_finances"/>
    <service id="elcodi.media_resize_adapter" alias="elcodi.media_resize_adapter.gd"/>
    <service id="elcodi.media_filesystem" alias="gaufrette.local_filesystem"/>
    <service id="elcodi.location_provider" alias="elcodi.location_provider_adapter.service"/>
    <service id="elcodi.location_populator_adapter" alias="elcodi.location_populator_adapter.geonames"/>
    <service id="elcodi.location_loader_adapter" alias="elcodi.location_loader_adapter.github"/>
    <service id="elcodi.related_purchasables_provider" alias="elcodi.related_purchasables_provider.same_category"/>
    <service id="elcodi.entity_translation_provider" alias="elcodi.services.cached_entity_translation_provider"/>
    <service id="elcodi.entity_translator_form_event_listener" alias="elcodi.event_listener.entity_translator_form"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher"/>
    <service id="hwi_oauth.user.provider.entity.store_area" alias="elcodi_store.provider.oauth"/>
    <service id="swiftmailer.spool" alias="swiftmailer.mailer.default.spool"/>
    <service id="swiftmailer.transport.real" alias="swiftmailer.mailer.default.transport.real"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.default.transport"/>
    <service id="mailer" alias="swiftmailer.mailer.default"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
    <service id="snc_redis.metric_client" alias="snc_redis.metric"/>
    <service id="elcodi.metrics_bucket" alias="elcodi.redis_metrics_bucket"/>
    <service id="serializer" alias="jms_serializer"/>
    <service id="fos_rest.router" alias="router"/>
    <service id="fos_rest.templating" alias="templating"/>
    <service id="fos_rest.exception_handler" alias="fos_rest.view.exception_wrapper_handler"/>
    <service id="fos_rest.inflector" alias="fos_rest.inflector.doctrine"/>
    <service id="sensio.distribution.webconfigurator" alias="sensio_distribution.webconfigurator"/>
    <service id="console.command.elcodi_component_currency_command_currencyexchangeratespopulatecommand" alias="elcodi.command.populate_currency_rates"/>
    <service id="console.command.elcodi_component_geo_command_locationpopulatecommand" alias="elcodi.command.location_populate"/>
    <service id="console.command.elcodi_component_geo_command_locationloadcommand" alias="elcodi.command.location_load"/>
    <service id="console.command.elcodi_component_geo_command_locationdropcommand" alias="elcodi.command.location_drop"/>
    <service id="console.command.elcodi_component_plugin_command_pluginsloadcommand" alias="elcodi.command.plugins_load"/>
    <service id="console.command.elcodi_component_plugin_command_pluginslistcommand" alias="elcodi.command.plugins_list"/>
    <service id="console.command.elcodi_component_plugin_command_pluginenablecommand" alias="elcodi.command.plugin_enable"/>
    <service id="console.command.elcodi_component_plugin_command_plugindisablecommand" alias="elcodi.command.plugin_disable"/>
    <service id="console.command.elcodi_component_metric_core_command_metricsloadcommand" alias="elcodi.command.metrics_load"/>
    <service id="console.command.elcodi_component_sitemap_command_sitemapdumpcommand" alias="elcodi.command.sitemap_dump"/>
    <service id="console.command.elcodi_component_sitemap_command_sitemapprofilecommand" alias="elcodi.command.sitemap_profile"/>
    <service id="console.command.elcodi_common_commonbundle_command_elcodiinstallcommand" alias="elcodi.command.elcodi_install"/>
    <service id="console.command.elcodi_bundle_fixturesboosterbundle_command_loaddatafixturesdoctrinecommand" alias="store.fixtures_booster.command.load_fixtures"/>
    <service id="console.command.sensiolabs_security_command_securitycheckercommand" alias="sensio_distribution.security_checker.command"/>
    <service id="console.command.visithor_bundle_command_gocommand" alias="visithor.command.go"/>
  </services>
</container>
